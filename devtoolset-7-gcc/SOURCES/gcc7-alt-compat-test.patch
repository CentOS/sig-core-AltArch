--- gcc/testsuite/g++.dg/compat/struct-layout-1_generate.c.jj	2011-01-03 06:50:42.000000000 -0500
+++ gcc/testsuite/g++.dg/compat/struct-layout-1_generate.c	2011-02-18 06:28:53.858200077 -0500
@@ -1501,6 +1501,8 @@ generate_random_tests (enum FEATURE feat
   int i, r;
   if (len > 'z' - 'a' + 1)
     abort ();
+  if (getenv ("ALT_CXX_UNDER_TEST") != NULL)
+    features &= ~FEATURE_VECTOR;
   memset (e, 0, sizeof (e));
   r = generate_random ();
   if ((r & 7) == 0)
--- gcc/testsuite/g++.dg/compat/compat.exp.jj	2011-01-03 06:50:42.000000000 -0500
+++ gcc/testsuite/g++.dg/compat/compat.exp	2011-02-18 06:30:54.248200398 -0500
@@ -116,7 +116,12 @@ if [info exists ALT_CXX_UNDER_TEST] then
 }
 
 # Main loop.
-foreach src [lsort [find $srcdir/$subdir *_main.C]] {
+set tests [lsort [find $srcdir/$subdir *_main.C]]
+if { $use_alt != 0 } then {
+    set tests [prune $tests $srcdir/$subdir/decimal/*]
+}
+
+foreach src $tests {
     # If we're only testing specific files and this isn't one of them, skip it.
     if ![runtest_file_p $runtests $src] then {
 	continue
--- gcc/testsuite/gcc.dg/compat/struct-layout-1_generate.c.jj	2011-01-03 06:49:58.000000000 -0500
+++ gcc/testsuite/gcc.dg/compat/struct-layout-1_generate.c	2011-02-18 06:27:54.922262671 -0500
@@ -1912,6 +1912,8 @@ generate_random_tests (enum FEATURE feat
   int i, r;
   if (len > 'z' - 'a' + 1)
     abort ();
+  if (getenv ("ALT_CC_UNDER_TEST") != NULL)
+    features &= ~FEATURE_VECTOR;
   memset (e, 0, sizeof (e));
   r = generate_random ();
   if ((r & 7) == 0)
--- gcc/testsuite/lib/c-compat.exp.jj	2011-01-03 06:48:38.000000000 -0500
+++ gcc/testsuite/lib/c-compat.exp	2011-02-18 06:38:19.124265008 -0500
@@ -75,7 +75,7 @@ proc compat_setup_dfp { } {
     # If there is an alternate compiler, does it support decimal float types?
     if { $compat_have_dfp == 1 && $compat_use_alt == 1 && $compat_same_alt == 0 } {
 	compat-use-alt-compiler
-	set compat_have_dfp [check_effective_target_dfprt_nocache]
+	set compat_have_dfp 0
 	compat-use-tst-compiler
 	verbose "compat_have_dfp for alt compiler: $compat_have_dfp" 2
     }
