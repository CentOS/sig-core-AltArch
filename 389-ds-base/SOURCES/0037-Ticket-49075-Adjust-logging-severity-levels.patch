From d3771cf05358c0230c8c77d7f7dabe9219ea7c8c Mon Sep 17 00:00:00 2001
From: Mark Reynolds <mreynolds@redhat.com>
Date: Wed, 3 May 2017 14:37:11 -0400
Subject: [PATCH] Ticket 49075 - Adjust logging severity levels

Description:  There are places wherre we log a severity "ERR",
              when in fact it is a benign message.

https://pagure.io/389-ds-base/issue/49075

Reviewed by: firstyear(Thanks!)

(cherry picked from commit 0762e393850f54ce8462c45321b3db084bd8a0e1)
---
 ldap/servers/slapd/back-ldbm/ldbm_instance_config.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/ldap/servers/slapd/back-ldbm/ldbm_instance_config.c b/ldap/servers/slapd/back-ldbm/ldbm_instance_config.c
index 36d830d..55f1887 100644
--- a/ldap/servers/slapd/back-ldbm/ldbm_instance_config.c
+++ b/ldap/servers/slapd/back-ldbm/ldbm_instance_config.c
@@ -118,10 +118,12 @@ ldbm_instance_config_cachememsize_set(void *arg, void *value, char *errorbuf, in
 
             if (sane == UTIL_CACHESIZE_ERROR){
                 slapi_create_errormsg(errorbuf, SLAPI_DSE_RETURNTEXT_SIZE, "Error: unable to determine system memory limits.");
-                slapi_log_err(SLAPI_LOG_ERR, "ldbm_instance_config_cachememsize_set", "Enable to determine system memory limits.\n");
+                slapi_log_err(SLAPI_LOG_ERR, "ldbm_instance_config_cachememsize_set",
+                        "Enable to determine system memory limits.\n");
                 return LDAP_UNWILLING_TO_PERFORM;
             } else if (sane == UTIL_CACHESIZE_REDUCED) {
-                slapi_log_err(SLAPI_LOG_WARNING, "ldbm_instance_config_cachememsize_set", "delta +%"PRIu64" of request %"PRIu64" reduced to %"PRIu64"\n", delta_original, val, delta);
+                slapi_log_err(SLAPI_LOG_WARNING, "ldbm_instance_config_cachememsize_set",
+                        "delta +%"PRIu64" of request %"PRIu64" reduced to %"PRIu64"\n", delta_original, val, delta);
                 /*
                  * This works as: value = 100
                  * delta_original to inst, 20;
@@ -133,7 +135,8 @@ ldbm_instance_config_cachememsize_set(void *arg, void *value, char *errorbuf, in
             }
         }
         if (inst->inst_cache.c_maxsize < MINCACHESIZE || val < MINCACHESIZE) {
-            slapi_log_err(SLAPI_LOG_ERR, "ldbm_instance_config_cachememsize_set", "force a minimal value %"PRIu64"\n", MINCACHESIZE);
+            slapi_log_err(SLAPI_LOG_INFO, "ldbm_instance_config_cachememsize_set",
+                    "force a minimal value %"PRIu64"\n", MINCACHESIZE);
             /* This value will trigger an autotune next start up, but it should increase only */
             val = MINCACHESIZE;
         }
@@ -1134,7 +1137,7 @@ ldbm_instance_post_delete_instance_entry_callback(Slapi_PBlock *pb, Slapi_Entry*
         return SLAPI_DSE_CALLBACK_ERROR;
     }
 
-    slapi_log_err(SLAPI_LOG_ERR, "ldbm_instance_post_delete_instance_entry_callback",
+    slapi_log_err(SLAPI_LOG_INFO, "ldbm_instance_post_delete_instance_entry_callback",
         "Removing '%s'.\n", instance_name);
 
     cache_destroy_please(&inst->inst_cache, CACHE_TYPE_ENTRY);
@@ -1171,9 +1174,9 @@ ldbm_instance_post_delete_instance_entry_callback(Slapi_PBlock *pb, Slapi_Entry*
                         dbp = PR_smprintf("%s/%s", inst_dirp, direntry->name);
                         if (NULL == dbp) {
                             slapi_log_err(SLAPI_LOG_ERR,
-                            "ldbm_instance_post_delete_instance_entry_callback",
-                            "Failed to generate db path: %s/%s\n",
-                            inst_dirp, direntry->name);
+                                "ldbm_instance_post_delete_instance_entry_callback",
+                                "Failed to generate db path: %s/%s\n",
+                                inst_dirp, direntry->name);
                             break;
                         }
 
-- 
2.9.3

