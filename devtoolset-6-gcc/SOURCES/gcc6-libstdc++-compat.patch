--- libstdc++-v3/config/locale/gnu/c_locale.cc.jj	2016-07-21 20:21:57.317924322 +0200
+++ libstdc++-v3/config/locale/gnu/c_locale.cc	2016-07-22 11:37:16.381402838 +0200
@@ -41,6 +41,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX98
   template<>
     void
     __convert_to_v(const char* __s, float& __v, ios_base::iostate& __err, 
@@ -172,6 +173,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       }
     return __changed;
   }
+#endif
 
   struct _CatalogIdComp
   {
@@ -255,6 +257,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 _GLIBCXX_END_NAMESPACE_VERSION
 } // namespace
 
+#ifndef _GLIBCXX_NONSHARED_CXX98
 namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
@@ -293,3 +296,4 @@ _GLIBCXX_END_NAMESPACE_VERSION
   extern "C" void ldbl (void) __attribute__ ((alias (#dbl)))
 _GLIBCXX_LDBL_COMPAT(_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKP15__locale_struct, _ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKP15__locale_struct);
 #endif // _GLIBCXX_LONG_DOUBLE_COMPAT
+#endif
--- libstdc++-v3/libsupc++/eh_exception.cc.jj	2016-07-21 20:21:57.370923683 +0200
+++ libstdc++-v3/libsupc++/eh_exception.cc	2016-07-22 11:37:16.381402838 +0200
@@ -26,6 +26,7 @@
 #include "exception"
 #include <cxxabi.h>
 
+#ifndef _GLIBCXX_NONSHARED_CXX98
 std::exception::~exception() _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_USE_NOEXCEPT { }
 
 std::bad_exception::~bad_exception() _GLIBCXX_TXN_SAFE_DYN
@@ -50,6 +51,7 @@ std::bad_exception::what() const _GLIBCX
 {
   return "std::bad_exception";
 }
+#endif
 
 // Transactional clones for the destructors and what().
 // what() is effectively transaction_pure, but we do not want to annotate it
--- libstdc++-v3/acinclude.m4.jj	2016-07-21 20:21:57.335924105 +0200
+++ libstdc++-v3/acinclude.m4	2016-07-22 11:37:16.382402826 +0200
@@ -49,7 +49,7 @@ AC_DEFUN([GLIBCXX_CONFIGURE], [
   # Keep these sync'd with the list in Makefile.am.  The first provides an
   # expandable list at autoconf time; the second provides an expandable list
   # (i.e., shell variable) at configure time.
-  m4_define([glibcxx_SUBDIRS],[include libsupc++ src src/c++98 src/c++11 src/filesystem doc po testsuite python])
+  m4_define([glibcxx_SUBDIRS],[include libsupc++ src src/c++98 src/c++11 src/filesystem src/nonshared98 src/nonshared11 doc po testsuite python])
   SUBDIRS='glibcxx_SUBDIRS'
 
   # These need to be absolute paths, yet at the same time need to
--- libstdc++-v3/src/nonshared98/int128.S.jj	2016-07-22 11:37:16.383402813 +0200
+++ libstdc++-v3/src/nonshared98/int128.S	2016-07-22 11:37:16.383402813 +0200
@@ -0,0 +1,216 @@
+/* Copyright (C) 2012-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__ \
+    /* || defined __i386__ || defined __powerpc__ || defined __s390__ */
+#ifdef __i386__
+#define ALIGN1	.align 4
+#elif defined __x86_64__
+#define ALIGN1	.align 32
+#define ALIGN2	.align 16
+#elif defined __ia64__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 8
+#define SECTION3(x).section .gnu.linkonce.s.x,"aws",@progbits
+#define POINTER	data8
+#define FLAGS data4
+#define PAD .skip 4
+#define STRING stringz
+#elif defined __powerpc64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#elif defined __powerpc__
+#define ALIGN1	.align 2
+#define ALIGN3	.align 2
+#define SECTION2(x).section .gnu.linkonce.s.x,"aw",@progbits
+#define SECTION3(x)SECTION2(x)
+#elif defined __aarch64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#define POINTER	.xword
+#define FLAGS	.word
+#define OBJECT	%object
+#elif defined __s390x__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 2
+#elif defined __s390__
+#define ALIGN1	.align 4
+#define ALIGN3	.align 2
+#endif
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__
+#define SIZE1	32
+#define SIZE2	16
+#define OFF	16
+#ifndef POINTER
+#define POINTER	.quad
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD .zero 4
+#endif
+#else
+#define SIZE1	16
+#define SIZE2	8
+#define OFF	8
+#ifndef POINTER
+#define POINTER	.long
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD
+#endif
+#endif
+#ifndef SYM
+#define SYM(x)x
+#endif
+#ifndef ALIGN2
+#define ALIGN2 ALIGN1
+#endif
+#ifndef ALIGN3
+#define ALIGN3
+#endif
+#ifndef OBJECT
+#define OBJECT @object
+#endif
+#ifndef SECTION1
+#define SECTION1(x).section .gnu.linkonce.d.rel.ro.x,"aw",@progbits
+#endif
+#ifndef SECTION2
+#define SECTION2(x)SECTION1(x)
+#endif
+#ifndef SECTION3
+#define SECTION3(x).section .gnu.linkonce.r.x,"a",@progbits
+#endif
+#ifndef STRING
+#define STRING .string
+#endif
+
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
+	.weak	SYM(_ZTIPKn)
+	SECTION1(_ZTIPKn)
+	ALIGN1
+	.type	SYM(_ZTIPKn), OBJECT
+	.size	SYM(_ZTIPKn), SIZE1
+_ZTIPKn:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKn)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIn)
+	.weak	SYM(_ZTIPn)
+	SECTION1(_ZTIPn)
+	ALIGN1
+	.type	SYM(_ZTIPn), OBJECT
+	.size	SYM(_ZTIPn), SIZE1
+_ZTIPn:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPn)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIn)
+	.weak	SYM(_ZTIn)
+	SECTION2(_ZTIn)
+	ALIGN2
+	.type	SYM(_ZTIn), OBJECT
+	.size	SYM(_ZTIn), SIZE2
+_ZTIn:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSn)
+	.weak	SYM(_ZTIPKo)
+	SECTION1(_ZTIPKo)
+	ALIGN1
+	.type	SYM(_ZTIPKo), OBJECT
+	.size	SYM(_ZTIPKo), SIZE1
+_ZTIPKo:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKo)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIo)
+	.weak	SYM(_ZTIPo)
+	SECTION1(_ZTIPo)
+	ALIGN1
+	.type	SYM(_ZTIPo), OBJECT
+	.size	SYM(_ZTIPo), SIZE1
+_ZTIPo:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPo)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIo)
+	.weak	SYM(_ZTIo)
+	SECTION2(_ZTIo)
+	ALIGN2
+	.type	SYM(_ZTIo), OBJECT
+	.size	SYM(_ZTIo), SIZE2
+_ZTIo:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSo)
+#endif
+	.weak	SYM(_ZTSPKn)
+	SECTION3(_ZTSPKn)
+	ALIGN3
+	.type	SYM(_ZTSPKn), OBJECT
+	.size	SYM(_ZTSPKn), 4
+_ZTSPKn:
+	STRING	"PKn"
+	.weak	SYM(_ZTSPn)
+	SECTION3(_ZTSPn)
+	ALIGN3
+	.type	SYM(_ZTSPn), OBJECT
+	.size	SYM(_ZTSPn), 3
+_ZTSPn:
+	STRING	"Pn"
+	.weak	SYM(_ZTSn)
+	SECTION3(_ZTSn)
+	ALIGN3
+	.type	SYM(_ZTSn), OBJECT
+	.size	SYM(_ZTSn), 2
+_ZTSn:
+	STRING	"n"
+	.weak	SYM(_ZTSPKo)
+	SECTION3(_ZTSPKo)
+	ALIGN3
+	.type	SYM(_ZTSPKo), OBJECT
+	.size	SYM(_ZTSPKo), 4
+_ZTSPKo:
+	STRING	"PKo"
+	.weak	SYM(_ZTSPo)
+	SECTION3(_ZTSPo)
+	ALIGN3
+	.type	SYM(_ZTSPo), OBJECT
+	.size	SYM(_ZTSPo), 3
+_ZTSPo:
+	STRING	"Po"
+	.weak	SYM(_ZTSo)
+	SECTION3(_ZTSo)
+	ALIGN3
+	.type	SYM(_ZTSo), OBJECT
+	.size	SYM(_ZTSo), 2
+_ZTSo:
+	STRING	"o"
+#endif
+	.section	.note.GNU-stack,"",@progbits
--- libstdc++-v3/src/nonshared98/pure.cc.jj	2016-07-22 11:37:16.383402813 +0200
+++ libstdc++-v3/src/nonshared98/pure.cc	2016-07-22 11:37:16.383402813 +0200
@@ -0,0 +1,51 @@
+// -*- C++ -*- 
+// Copyright (C) 2000-2016 Free Software Foundation
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <bits/c++config.h>
+#include <cxxabi.h>
+#include "unwind-cxx.h"
+
+#if _GLIBCXX_HOSTED
+#ifdef _GLIBCXX_HAVE_UNISTD_H
+# include <unistd.h>
+# define writestr(str)	write(2, str, sizeof(str) - 1)
+# ifdef __GNU_LIBRARY__
+  /* Avoid forcing the library's meaning of `write' on the user program
+     by using the "internal" name (for use within the library).  */
+/*#  define write(fd, buf, n)	__write((fd), (buf), (n))*/
+# endif
+#else
+# include <cstdio>
+# define writestr(str)	std::fputs(str, stderr)
+#endif
+#else
+# define writestr(str) /* Empty */
+#endif
+
+extern "C" void
+__cxxabiv1::__cxa_deleted_virtual (void)
+{
+  writestr ("deleted virtual method called\n");
+  std::terminate ();
+}
--- libstdc++-v3/src/nonshared98/collate_members.cc.jj	2016-07-22 11:37:16.383402813 +0200
+++ libstdc++-v3/src/nonshared98/collate_members.cc	2016-07-22 11:37:16.383402813 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include "../c++98/collate_members.cc"
--- libstdc++-v3/src/nonshared98/wlocale-inst.cc.jj	2016-07-22 11:37:16.384402801 +0200
+++ libstdc++-v3/src/nonshared98/wlocale-inst.cc	2016-07-22 11:37:16.384402801 +0200
@@ -0,0 +1,28 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <bits/c++config.h>
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+#define C wchar_t
+#include "locale-inst.cc"
+#endif
--- libstdc++-v3/src/nonshared98/hash_bytes.cc.jj	2016-07-22 11:37:16.384402801 +0200
+++ libstdc++-v3/src/nonshared98/hash_bytes.cc	2016-07-22 11:37:16.384402801 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/hash_bytes.cc"
--- libstdc++-v3/src/nonshared98/compatibility-debug_list-2.cc.jj	2016-07-22 11:37:16.384402801 +0200
+++ libstdc++-v3/src/nonshared98/compatibility-debug_list-2.cc	2016-07-22 11:37:16.384402801 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++98/compatibility-debug_list-2.cc"
--- libstdc++-v3/src/nonshared98/eh_catch.cc.jj	2016-07-22 11:37:16.384402801 +0200
+++ libstdc++-v3/src/nonshared98/eh_catch.cc	2016-07-22 11:37:16.384402801 +0200
@@ -0,0 +1,39 @@
+// -*- C++ -*- Exception handling routines for catching.
+// Copyright (C) 2001-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <cstdlib>
+#include "unwind-cxx.h"
+
+using namespace __cxxabiv1;
+
+int
+std::uncaught_exceptions() throw()
+{
+#if __cpp_exceptions
+  __cxa_eh_globals *globals = __cxa_get_globals ();
+  return globals->uncaughtExceptions;
+#else
+  return 0;
+#endif
+}
--- libstdc++-v3/src/nonshared98/eh_exception.cc.jj	2016-07-22 11:37:16.385402788 +0200
+++ libstdc++-v3/src/nonshared98/eh_exception.cc	2016-07-22 11:37:16.385402788 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 1994-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX98 1
+#include "../libsupc++/eh_exception.cc"
--- libstdc++-v3/src/nonshared98/c++locale.cc.jj	2016-07-22 11:37:16.385402788 +0200
+++ libstdc++-v3/src/nonshared98/c++locale.cc	2016-07-22 11:37:16.385402788 +0200
@@ -0,0 +1,33 @@
+// Copyright (C) 2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX98 1
+#include "../c++98/c++locale.cc"
+asm (".hidden _ZNKSt8Catalogs6_M_getEi");
+asm (".hidden _ZNSt8Catalogs6_M_addEPKcSt6locale");
+asm (".hidden _ZNSt8Catalogs8_M_eraseEi");
+asm (".hidden _ZNSt8CatalogsD1Ev");
+asm (".hidden _ZNSt8CatalogsD2Ev");
+asm (".hidden _ZSt12get_catalogsv");
+asm (".hidden _ZNSt6vectorIPSt12Catalog_infoSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_");
+asm (".hidden _ZN9__gnu_cxx13__scoped_lockD1Ev");
+asm (".hidden _ZN9__gnu_cxx13__scoped_lockD2Ev");
--- libstdc++-v3/src/nonshared98/eh_tm.cc.jj	2016-07-22 11:37:16.385402788 +0200
+++ libstdc++-v3/src/nonshared98/eh_tm.cc	2016-07-22 11:37:16.385402788 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/eh_tm.cc"
--- libstdc++-v3/src/nonshared98/numeric_members.cc.jj	2016-07-22 11:37:16.385402788 +0200
+++ libstdc++-v3/src/nonshared98/numeric_members.cc	2016-07-22 11:37:16.385402788 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include "../c++98/numeric_members.cc"
--- libstdc++-v3/src/nonshared98/locale_facets.cc.jj	2016-07-22 11:37:16.386402776 +0200
+++ libstdc++-v3/src/nonshared98/locale_facets.cc	2016-07-22 11:50:17.667904937 +0200
@@ -0,0 +1,29 @@
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11
+#include "../c++98/locale_facets.cc"
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZSt22__verify_grouping_implPKcjS0_j");
+#else
+asm (".hidden _ZSt22__verify_grouping_implPKcmS0_m");
+#endif
--- libstdc++-v3/src/nonshared98/sstream-inst.cc.jj	2016-07-22 11:37:16.386402776 +0200
+++ libstdc++-v3/src/nonshared98/sstream-inst.cc	2016-07-22 11:37:16.386402776 +0200
@@ -0,0 +1,39 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <sstream>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+  template void basic_stringbuf<char>::_M_pbump(char_type*, char_type*, off_type);
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template void basic_stringbuf<wchar_t>::_M_pbump(char_type*, char_type*, off_type);
+#endif
+
+} // namespace
--- libstdc++-v3/src/nonshared98/list-aux-2.cc.jj	2016-07-22 11:37:16.386402776 +0200
+++ libstdc++-v3/src/nonshared98/list-aux-2.cc	2016-07-22 11:37:16.386402776 +0200
@@ -0,0 +1,56 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+extern "C"
+{
+  extern void _ZNSt15_List_node_base8transferEPS_S0_(void *f, void *l) throw();
+
+  void
+  _ZNSt15_List_node_base11_M_transferEPS_S0_(void *f, void *l) throw()
+  {
+    _ZNSt15_List_node_base8transferEPS_S0_(f, l);
+  }
+
+  extern void _ZNSt15_List_node_base7reverseEv() throw();
+
+  void
+  _ZNSt15_List_node_base10_M_reverseEv() throw()
+  {
+    _ZNSt15_List_node_base7reverseEv();
+  }
+
+  extern void _ZNSt15_List_node_base4hookEPS_(void *p) throw();
+
+  void
+  _ZNSt15_List_node_base7_M_hookEPS_(void *p) throw()
+  {
+    _ZNSt15_List_node_base4hookEPS_(p);
+  }
+
+  extern void _ZNSt15_List_node_base6unhookEv() throw();
+
+  void
+  _ZNSt15_List_node_base9_M_unhookEv() throw()
+  {
+    _ZNSt15_List_node_base6unhookEv();
+  }
+}
--- libstdc++-v3/src/nonshared98/nullptr-rtti.S.jj	2016-07-22 11:37:16.387402763 +0200
+++ libstdc++-v3/src/nonshared98/nullptr-rtti.S	2016-07-22 11:37:16.387402763 +0200
@@ -0,0 +1,166 @@
+/* Copyright (C) 2012-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__ \
+    || defined __i386__ || defined __powerpc__ || defined __s390__
+#ifdef __i386__
+#define ALIGN1	.align 4
+#elif defined __x86_64__
+#define ALIGN1	.align 32
+#define ALIGN2	.align 16
+#elif defined __ia64__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 8
+#define SECTION3(x).section .gnu.linkonce.s.x,"aws",@progbits
+#define POINTER	data8
+#define FLAGS data4
+#define PAD .skip 4
+#define STRING stringz
+#elif defined __powerpc64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#elif defined __powerpc__
+#define ALIGN1	.align 2
+#define ALIGN3	.align 2
+#define SECTION2(x).section .gnu.linkonce.s.x,"aw",@progbits
+#define SECTION3(x)SECTION2(x)
+#elif defined __aarch64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#define POINTER	.xword
+#define FLAGS	.word
+#define OBJECT	%object
+#elif defined __s390x__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 2
+#elif defined __s390__
+#define ALIGN1	.align 4
+#define ALIGN3	.align 2
+#endif
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__
+#define SIZE1	32
+#define SIZE2	16
+#define OFF	16
+#ifndef POINTER
+#define POINTER	.quad
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD .zero 4
+#endif
+#else
+#define SIZE1	16
+#define SIZE2	8
+#define OFF	8
+#ifndef POINTER
+#define POINTER	.long
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD
+#endif
+#endif
+#ifndef SYM
+#define SYM(x)x
+#endif
+#ifndef ALIGN2
+#define ALIGN2 ALIGN1
+#endif
+#ifndef ALIGN3
+#define ALIGN3
+#endif
+#ifndef OBJECT
+#define OBJECT @object
+#endif
+#ifndef SECTION1
+#define SECTION1(x).section .gnu.linkonce.d.rel.ro.x,"aw",@progbits
+#endif
+#ifndef SECTION2
+#define SECTION2(x)SECTION1(x)
+#endif
+#ifndef SECTION3
+#define SECTION3(x).section .gnu.linkonce.r.x,"a",@progbits
+#endif
+#ifndef STRING
+#define STRING .string
+#endif
+
+	.weak	SYM(_ZTIPKDn)
+	SECTION1(_ZTIPKDn)
+	ALIGN1
+	.type	SYM(_ZTIPKDn), OBJECT
+	.size	SYM(_ZTIPKDn), SIZE1
+_ZTIPKDn:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKDn)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIDn)
+	.weak	SYM(_ZTIPDn)
+	SECTION1(_ZTIPDn)
+	ALIGN1
+	.type	SYM(_ZTIPDn), OBJECT
+	.size	SYM(_ZTIPDn), SIZE1
+_ZTIPDn:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPDn)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIDn)
+	.weak	SYM(_ZTIDn)
+	SECTION2(_ZTIDn)
+	ALIGN2
+	.type	SYM(_ZTIDn), OBJECT
+	.size	SYM(_ZTIDn), SIZE2
+_ZTIDn:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSDn)
+	.weak	SYM(_ZTSPKDn)
+	.hidden	SYM(_ZTSPKDn)
+	SECTION3(_ZTSPKDn)
+	ALIGN3
+	.type	SYM(_ZTSPKDn), OBJECT
+	.size	SYM(_ZTSPKDn), 5
+_ZTSPKDn:
+	STRING	"PKDn"
+	.weak	SYM(_ZTSPDn)
+	.hidden	SYM(_ZTSPDn)
+	SECTION3(_ZTSPDn)
+	ALIGN3
+	.type	SYM(_ZTSPDn), OBJECT
+	.size	SYM(_ZTSPDn), 4
+_ZTSPDn:
+	STRING	"PDn"
+	.weak	SYM(_ZTSDn)
+	.hidden	SYM(_ZTSDn)
+	SECTION3(_ZTSDn)
+	ALIGN3
+	.type	SYM(_ZTSDn), OBJECT
+	.size	SYM(_ZTSDn), 3
+_ZTSDn:
+	STRING	"Dn"
+#endif
+	.section	.note.GNU-stack,"",@progbits
--- libstdc++-v3/src/nonshared98/eh_alloc.cc.jj	2016-07-22 11:37:16.387402763 +0200
+++ libstdc++-v3/src/nonshared98/eh_alloc.cc	2016-07-22 11:37:16.387402763 +0200
@@ -0,0 +1,178 @@
+// -*- C++ -*- Allocate exception objects.
+// Copyright (C) 2001-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+// This is derived from the C++ ABI for IA-64.  Where we diverge
+// for cross-architecture compatibility are noted with "@@@".
+
+#include <bits/c++config.h>
+#include <cstdlib>
+#if _GLIBCXX_HOSTED
+#include <cstring>
+#endif
+#include <climits>
+#include <exception>
+#include "unwind-cxx.h"
+#include <ext/concurrence.h>
+
+#if _GLIBCXX_HOSTED
+using std::free;
+using std::malloc;
+using std::memset;
+#else
+// In a freestanding environment, these functions may not be available
+// -- but for now, we assume that they are.
+extern "C" void *malloc (std::size_t);
+extern "C" void free(void *);
+extern "C" void *memset (void *, int, std::size_t);
+#endif
+
+using namespace __cxxabiv1;
+
+// ??? How to control these parameters.
+
+// Guess from the size of basic types how large a buffer is reasonable.
+// Note that the basic c++ exception header has 13 pointers and 2 ints,
+// so on a system with PSImode pointers we're talking about 56 bytes
+// just for overhead.
+
+#if INT_MAX == 32767
+# define EMERGENCY_OBJ_SIZE	128
+# define EMERGENCY_OBJ_COUNT	16
+#elif LONG_MAX == 2147483647
+# define EMERGENCY_OBJ_SIZE	512
+# define EMERGENCY_OBJ_COUNT	32
+#else
+# define EMERGENCY_OBJ_SIZE	1024
+# define EMERGENCY_OBJ_COUNT	64
+#endif
+
+#ifndef __GTHREADS
+# undef EMERGENCY_OBJ_COUNT
+# define EMERGENCY_OBJ_COUNT	4
+#endif
+
+#if INT_MAX == 32767 || EMERGENCY_OBJ_COUNT <= 32
+typedef unsigned int bitmask_type;
+#else
+typedef unsigned long bitmask_type;
+#endif
+
+
+typedef char one_buffer[EMERGENCY_OBJ_SIZE] __attribute__((aligned));
+
+static __cxa_dependent_exception dependents_buffer[EMERGENCY_OBJ_COUNT];
+static bitmask_type dependents_used;
+
+namespace
+{
+  // A single mutex controlling emergency allocations.
+  __gnu_cxx::__mutex emergency_mutex;
+}
+
+extern "C" __cxa_dependent_exception*
+__cxxabiv1::__cxa_allocate_dependent_exception() _GLIBCXX_NOTHROW
+{
+  __cxa_dependent_exception *ret;
+
+  ret = static_cast<__cxa_dependent_exception*>
+    (malloc (sizeof (__cxa_dependent_exception)));
+
+  if (!ret)
+    {
+      __gnu_cxx::__scoped_lock sentry(emergency_mutex);
+
+      bitmask_type used = dependents_used;
+      unsigned int which = 0;
+
+      while (used & 1)
+	{
+	  used >>= 1;
+	  if (++which >= EMERGENCY_OBJ_COUNT)
+	    goto failed;
+	}
+
+      dependents_used |= (bitmask_type)1 << which;
+      ret = &dependents_buffer[which];
+
+    failed:;
+
+      if (!ret)
+	std::terminate ();
+    }
+
+  // We have an uncaught exception as soon as we allocate memory.  This
+  // yields uncaught_exception() true during the copy-constructor that
+  // initializes the exception object.  See Issue 475.
+  __cxa_eh_globals *globals = __cxa_get_globals ();
+  globals->uncaughtExceptions += 1;
+
+  memset (ret, 0, sizeof (__cxa_dependent_exception));
+
+  return ret;
+}
+
+
+extern "C" void
+__cxxabiv1::__cxa_free_dependent_exception
+  (__cxa_dependent_exception *vptr) _GLIBCXX_NOTHROW
+{
+  char *base = (char *) dependents_buffer;
+  char *ptr = (char *) vptr;
+  if (ptr >= base
+      && ptr < base + sizeof (dependents_buffer))
+    {
+      const unsigned int which
+	= (unsigned) (ptr - base) / sizeof (__cxa_dependent_exception);
+
+      __gnu_cxx::__scoped_lock sentry(emergency_mutex);
+      dependents_used &= ~((bitmask_type)1 << which);
+    }
+  else
+    free (vptr);
+}
+
+namespace __gnu_cxx
+{
+  void
+  __freeres()
+  {
+  }
+}
+
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
--- libstdc++-v3/src/nonshared98/int12848.S.jj	2016-07-22 11:37:16.387402763 +0200
+++ libstdc++-v3/src/nonshared98/int12848.S	2016-07-22 11:37:16.387402763 +0200
@@ -0,0 +1,24 @@
+/* Copyright (C) 2012-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#define _GLIBCXX_NONSHARED_CXX11_48
+#include "int128.S"
--- libstdc++-v3/src/nonshared98/snprintf_lite-inst.cc.jj	2016-07-22 11:37:16.387402763 +0200
+++ libstdc++-v3/src/nonshared98/snprintf_lite-inst.cc	2016-07-22 11:37:16.387402763 +0200
@@ -0,0 +1,41 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <locale>
+
+namespace std _GLIBCXX_VISIBILITY(default)   
+{
+  template
+  int
+  __int_to_char(char*,
+#ifdef _GLIBCXX_USE_LONG_LONG
+		unsigned long long,
+#else
+		unsigned long,
+#endif
+		const char*, ios_base::fmtflags, bool);
+}
+#ifdef _GLIBCXX_USE_LONG_LONG
+asm (".hidden _ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb");
+#else
+asm (".hidden _ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb");
+#endif
--- libstdc++-v3/src/nonshared98/messages_members.cc.jj	2016-07-22 11:37:16.388402751 +0200
+++ libstdc++-v3/src/nonshared98/messages_members.cc	2016-07-22 11:37:16.388402751 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include "../c++98/messages_members.cc"
--- libstdc++-v3/src/nonshared98/monetary_members.cc.jj	2016-07-22 11:37:16.388402751 +0200
+++ libstdc++-v3/src/nonshared98/monetary_members.cc	2016-07-22 11:37:16.388402751 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include "../c++98/monetary_members.cc"
--- libstdc++-v3/src/nonshared98/Makefile.am.jj	2016-07-22 11:37:16.388402751 +0200
+++ libstdc++-v3/src/nonshared98/Makefile.am	2016-07-22 11:37:16.388402751 +0200
@@ -0,0 +1,155 @@
+## Makefile for the C++03 sources of the GNU C++ Standard library.
+##
+## Copyright (C) 1997-2016 Free Software Foundation, Inc.
+##
+## This file is part of the libstdc++ version 3 distribution.
+## Process this file with automake to produce Makefile.in.
+
+## This file is part of the GNU ISO C++ Library.  This library is free
+## software; you can redistribute it and/or modify it under the
+## terms of the GNU General Public License as published by the
+## Free Software Foundation; either version 3, or (at your option)
+## any later version.
+
+## This library is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+
+## You should have received a copy of the GNU General Public License along
+## with this library; see the file COPYING3.  If not see
+## <http://www.gnu.org/licenses/>.
+
+include $(top_srcdir)/fragment.am
+
+# Convenience library for C++98 runtime.
+noinst_LTLIBRARIES = libnonshared98convenience44.la \
+		     libnonshared98convenience48.la
+
+headers =
+
+# Source files linked in via configuration/make substitution for a
+# particular host, but with ad hoc naming rules.
+host_sources_extra = \
+	basic_file.cc c++locale.cc \
+	${ldbl_compat_sources} ${parallel_sources}
+
+parallel_sources44 = list_associated-2.cc
+
+if ENABLE_EXTERN_TEMPLATE
+# XTEMPLATE_FLAGS = -fno-implicit-templates
+inst_sources = \
+	snprintf_lite-inst.cc \
+	misc-inst.cc
+inst_sources44 = \
+	locale-inst.cc \
+	wlocale-inst.cc \
+	sstream-inst.cc \
+	streambuf-inst.cc
+else
+# XTEMPLATE_FLAGS =
+inst_sources =
+inst_sources44 =
+endif
+
+# Sources present in the src directory, always present.
+sources = \
+	collate_members.cc \
+	float128.S \
+	istream-string.cc \
+	locale.cc \
+	locale_facets.cc \
+	c++locale.cc \
+	messages_members.cc \
+	monetary_members.cc \
+	numeric_members.cc \
+	eh_exception.cc \
+	eh_catch.cc \
+	${inst_sources}
+sources44 = \
+	list-aux-2.cc \
+	decimal-rtti.S \
+	nullptr-rtti.S \
+	int128.S \
+	compatibility-debug_list-2.cc \
+	list.cc \
+	hash_bytes.cc \
+	stdexcept.cc \
+	eh_alloc.cc \
+	eh_tm.cc \
+	pure.cc \
+	${parallel_sources44} \
+	${inst_sources44}
+sources48 = int12848.S \
+	    eh_alloc48.cc
+
+vpath % $(top_srcdir)/src/nonshared98
+vpath % $(top_srcdir)
+
+libnonshared98convenience44_la_SOURCES = $(sources) $(sources44)
+libnonshared98convenience48_la_SOURCES = $(sources) $(sources48)
+
+# AM_CXXFLAGS needs to be in each subdirectory so that it can be
+# modified in a per-library or per-sub-library way.  Need to manually
+# set this option because CONFIG_CXXFLAGS has to be after
+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden
+# as the occasion calls for it.
+AM_CXXFLAGS = \
+	-std=gnu++98 \
+	$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \
+	$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \
+	$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)
+
+AM_MAKEFLAGS = \
+	"gxx_include_dir=$(gxx_include_dir)"
+
+# Libtool notes
+
+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is
+# last. (That way, things like -O2 passed down from the toplevel can
+# be overridden by --enable-debug.)
+
+# 2) In general, libtool expects an argument such as `--tag=CXX' when
+# using the C++ compiler, because that will enable the settings
+# detected when C++ support was being configured.  However, when no
+# such flag is given in the command line, libtool attempts to figure
+# it out by matching the compiler name in each configuration section
+# against a prefix of the command line.  The problem is that, if the
+# compiler name and its initial flags stored in the libtool
+# configuration file don't match those in the command line, libtool
+# can't decide which configuration to use, and it gives up.  The
+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe
+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to
+# attempt to infer which configuration to use.
+# We have to put --tag disable-shared after --tag CXX lest things
+# CXX undo the affect of disable-shared.
+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
+	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(EXTRA_CXX_FLAGS)
+
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+
+# 3) We'd have a problem when building the shared libstdc++ object if
+# the rules automake generates would be used.  We cannot allow g++ to
+# be used since this would add -lstdc++ to the link line which of
+# course is problematic at this point.  So, we get the top-level
+# directory to configure libstdc++-v3 to use gcc as the C++
+# compilation driver.
+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	  --mode=link $(CXX) \
+	  $(VTV_CXXLINKFLAGS) \
+	  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@
+
+collate_members.lo: collate_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+messages_members.lo: messages_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+monetary_members.lo: monetary_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+numeric_members.lo: numeric_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+# Use special rules to compile with -fimplicit-templates.
+c++locale.lo: c++locale.cc
+	$(LTCXXCOMPILE) -I. -fimplicit-templates -c $<
+c++locale.o: c++locale.cc
+	$(CXXCOMPILE) -I. -fimplicit-templates -c $<
--- libstdc++-v3/src/nonshared98/Makefile.in.jj	2016-07-22 11:37:16.389402738 +0200
+++ libstdc++-v3/src/nonshared98/Makefile.in	2016-07-22 11:37:16.389402738 +0200
@@ -0,0 +1,750 @@
+# Makefile.in generated by automake 1.11.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
+# Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+am__make_dryrun = \
+  { \
+    am__dry=no; \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
+          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
+      *) \
+        for am__flg in $$MAKEFLAGS; do \
+          case $$am__flg in \
+            *=*|--*) ;; \
+            *n*) am__dry=yes; break;; \
+          esac; \
+        done;; \
+    esac; \
+    test $$am__dry = yes; \
+  }
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+DIST_COMMON = $(top_srcdir)/fragment.am $(srcdir)/Makefile.in \
+	$(srcdir)/Makefile.am
+subdir = src/nonshared98
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \
+	$(top_srcdir)/../config/enable.m4 \
+	$(top_srcdir)/../config/futex.m4 \
+	$(top_srcdir)/../config/iconv.m4 \
+	$(top_srcdir)/../config/lead-dot.m4 \
+	$(top_srcdir)/../config/lib-ld.m4 \
+	$(top_srcdir)/../config/lib-link.m4 \
+	$(top_srcdir)/../config/lib-prefix.m4 \
+	$(top_srcdir)/../config/lthostflags.m4 \
+	$(top_srcdir)/../config/multi.m4 \
+	$(top_srcdir)/../config/no-executables.m4 \
+	$(top_srcdir)/../config/override.m4 \
+	$(top_srcdir)/../config/stdint.m4 \
+	$(top_srcdir)/../config/unwind_ipinfo.m4 \
+	$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \
+	$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \
+	$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \
+	$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \
+	$(top_srcdir)/../config/gc++filt.m4 \
+	$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../config/gthr.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+LTLIBRARIES = $(noinst_LTLIBRARIES)
+libnonshared98convenience44_la_LIBADD =
+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_1 = snprintf_lite-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	misc-inst.lo
+am__objects_2 = collate_members.lo float128.lo istream-string.lo \
+	locale.lo locale_facets.lo c++locale.lo messages_members.lo \
+	monetary_members.lo numeric_members.lo eh_exception.lo \
+	eh_catch.lo $(am__objects_1)
+am__objects_3 = list_associated-2.lo
+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_4 = locale-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wlocale-inst.lo sstream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	streambuf-inst.lo
+am__objects_5 = list-aux-2.lo decimal-rtti.lo nullptr-rtti.lo \
+	int128.lo compatibility-debug_list-2.lo list.lo hash_bytes.lo \
+	stdexcept.lo eh_alloc.lo eh_tm.lo pure.lo $(am__objects_3) \
+	$(am__objects_4)
+am_libnonshared98convenience44_la_OBJECTS = $(am__objects_2) \
+	$(am__objects_5)
+libnonshared98convenience44_la_OBJECTS =  \
+	$(am_libnonshared98convenience44_la_OBJECTS)
+libnonshared98convenience48_la_LIBADD =
+am__objects_6 = int12848.lo eh_alloc48.lo
+am_libnonshared98convenience48_la_OBJECTS = $(am__objects_2) \
+	$(am__objects_6)
+libnonshared98convenience48_la_OBJECTS =  \
+	$(am_libnonshared98convenience48_la_OBJECTS)
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp =
+am__depfiles_maybe =
+CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
+LTCPPASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libnonshared98convenience44_la_SOURCES) \
+	$(libnonshared98convenience48_la_SOURCES)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+ETAGS = etags
+CTAGS = ctags
+ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@
+ACLOCAL = @ACLOCAL@
+ALLOCATOR_H = @ALLOCATOR_H@
+ALLOCATOR_NAME = @ALLOCATOR_NAME@
+AMTAR = @AMTAR@
+AR = @AR@
+AS = @AS@
+ATOMICITY_SRCDIR = @ATOMICITY_SRCDIR@
+ATOMIC_FLAGS = @ATOMIC_FLAGS@
+ATOMIC_WORD_SRCDIR = @ATOMIC_WORD_SRCDIR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BASIC_FILE_CC = @BASIC_FILE_CC@
+BASIC_FILE_H = @BASIC_FILE_H@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCODECVT_CC = @CCODECVT_CC@
+CCOLLATE_CC = @CCOLLATE_CC@
+CCTYPE_CC = @CCTYPE_CC@
+CFLAGS = @CFLAGS@
+CLOCALE_CC = @CLOCALE_CC@
+CLOCALE_H = @CLOCALE_H@
+CLOCALE_INTERNAL_H = @CLOCALE_INTERNAL_H@
+CMESSAGES_CC = @CMESSAGES_CC@
+CMESSAGES_H = @CMESSAGES_H@
+CMONEY_CC = @CMONEY_CC@
+CNUMERIC_CC = @CNUMERIC_CC@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@
+CPU_OPT_BITS_RANDOM = @CPU_OPT_BITS_RANDOM@
+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@
+CSTDIO_H = @CSTDIO_H@
+CTIME_CC = @CTIME_CC@
+CTIME_H = @CTIME_H@
+CXX = @CXX@
+CXXCPP = @CXXCPP@
+CXXFILT = @CXXFILT@
+CXXFLAGS = @CXXFLAGS@
+CYGPATH_W = @CYGPATH_W@
+C_INCLUDE_DIR = @C_INCLUDE_DIR@
+DBLATEX = @DBLATEX@
+DEBUG_FLAGS = @DEBUG_FLAGS@
+DEFS = @DEFS@
+DOT = @DOT@
+DOXYGEN = @DOXYGEN@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@
+EXEEXT = @EXEEXT@
+EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@
+FGREP = @FGREP@
+GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@
+GLIBCXX_LIBS = @GLIBCXX_LIBS@
+GREP = @GREP@
+HWCAP_FLAGS = @HWCAP_FLAGS@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBICONV = @LIBICONV@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBICONV = @LTLIBICONV@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@
+OPT_LDFLAGS = @OPT_LDFLAGS@
+OS_INC_SRCDIR = @OS_INC_SRCDIR@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PDFLATEX = @PDFLATEX@
+RANLIB = @RANLIB@
+SECTION_FLAGS = @SECTION_FLAGS@
+SECTION_LDFLAGS = @SECTION_LDFLAGS@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+SYMVER_FILE = @SYMVER_FILE@
+TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@
+USE_NLS = @USE_NLS@
+VERSION = @VERSION@
+VTV_CXXFLAGS = @VTV_CXXFLAGS@
+VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@
+VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@
+WARN_FLAGS = @WARN_FLAGS@
+WERROR = @WERROR@
+XMLLINT = @XMLLINT@
+XSLTPROC = @XSLTPROC@
+XSL_STYLE_DIR = @XSL_STYLE_DIR@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_CXX = @ac_ct_CXX@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__leading_dot = @am__leading_dot@
+am__tar = @am__tar@
+am__untar = @am__untar@
+baseline_dir = @baseline_dir@
+baseline_subdir_switch = @baseline_subdir_switch@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+check_msgfmt = @check_msgfmt@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+enable_shared = @enable_shared@
+enable_static = @enable_static@
+exec_prefix = @exec_prefix@
+glibcxx_MOFILES = @glibcxx_MOFILES@
+glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@
+glibcxx_POFILES = @glibcxx_POFILES@
+glibcxx_builddir = @glibcxx_builddir@
+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@
+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@
+glibcxx_cxx98_abi = @glibcxx_cxx98_abi@
+glibcxx_localedir = @glibcxx_localedir@
+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@
+glibcxx_prefixdir = @glibcxx_prefixdir@
+glibcxx_srcdir = @glibcxx_srcdir@
+glibcxx_toolexecdir = @glibcxx_toolexecdir@
+glibcxx_toolexeclibdir = @glibcxx_toolexeclibdir@
+gxx_include_dir = @gxx_include_dir@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+libtool_VERSION = @libtool_VERSION@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_host_flags = @lt_host_flags@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+multi_basedir = @multi_basedir@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+port_specific_symbol_files = @port_specific_symbol_files@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+python_mod_dir = @python_mod_dir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+thread_header = @thread_header@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+toplevel_builddir = @toplevel_builddir@
+toplevel_srcdir = @toplevel_srcdir@
+
+# May be used by various substitution variables.
+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)
+MAINT_CHARSET = latin1
+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs
+PWD_COMMAND = $${PWDCMD-pwd}
+STAMP = echo timestamp >
+toolexecdir = $(glibcxx_toolexecdir)
+toolexeclibdir = $(glibcxx_toolexeclibdir)
+@ENABLE_WERROR_FALSE@WERROR_FLAG = 
+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)
+@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = 
+@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates
+
+# These bits are all figured out from configure.  Look in acinclude.m4
+# or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.
+CONFIG_CXXFLAGS = \
+	$(SECTION_FLAGS) $(HWCAP_FLAGS) -frandom-seed=$@
+
+WARN_CXXFLAGS = \
+	$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once 
+
+
+# -I/-D flags to pass when compiling.
+AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)
+
+# Convenience library for C++98 runtime.
+noinst_LTLIBRARIES = libnonshared98convenience44.la \
+		     libnonshared98convenience48.la
+
+headers = 
+
+# Source files linked in via configuration/make substitution for a
+# particular host, but with ad hoc naming rules.
+host_sources_extra = \
+	basic_file.cc c++locale.cc \
+	${ldbl_compat_sources} ${parallel_sources}
+
+parallel_sources44 = list_associated-2.cc
+# XTEMPLATE_FLAGS =
+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = 
+
+# XTEMPLATE_FLAGS = -fno-implicit-templates
+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources = \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	snprintf_lite-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	misc-inst.cc
+
+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources44 = 
+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources44 = \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wlocale-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	sstream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	streambuf-inst.cc
+
+
+# Sources present in the src directory, always present.
+sources = \
+	collate_members.cc \
+	float128.S \
+	istream-string.cc \
+	locale.cc \
+	locale_facets.cc \
+	c++locale.cc \
+	messages_members.cc \
+	monetary_members.cc \
+	numeric_members.cc \
+	eh_exception.cc \
+	eh_catch.cc \
+	${inst_sources}
+
+sources44 = \
+	list-aux-2.cc \
+	decimal-rtti.S \
+	nullptr-rtti.S \
+	int128.S \
+	compatibility-debug_list-2.cc \
+	list.cc \
+	hash_bytes.cc \
+	stdexcept.cc \
+	eh_alloc.cc \
+	eh_tm.cc \
+	pure.cc \
+	${parallel_sources44} \
+	${inst_sources44}
+
+sources48 = int12848.S \
+	    eh_alloc48.cc
+
+libnonshared98convenience44_la_SOURCES = $(sources) $(sources44)
+libnonshared98convenience48_la_SOURCES = $(sources) $(sources48)
+
+# AM_CXXFLAGS needs to be in each subdirectory so that it can be
+# modified in a per-library or per-sub-library way.  Need to manually
+# set this option because CONFIG_CXXFLAGS has to be after
+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden
+# as the occasion calls for it.
+AM_CXXFLAGS = \
+	-std=gnu++98 \
+	$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \
+	$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \
+	$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)
+
+AM_MAKEFLAGS = \
+	"gxx_include_dir=$(gxx_include_dir)"
+
+
+# Libtool notes
+
+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is
+# last. (That way, things like -O2 passed down from the toplevel can
+# be overridden by --enable-debug.)
+
+# 2) In general, libtool expects an argument such as `--tag=CXX' when
+# using the C++ compiler, because that will enable the settings
+# detected when C++ support was being configured.  However, when no
+# such flag is given in the command line, libtool attempts to figure
+# it out by matching the compiler name in each configuration section
+# against a prefix of the command line.  The problem is that, if the
+# compiler name and its initial flags stored in the libtool
+# configuration file don't match those in the command line, libtool
+# can't decide which configuration to use, and it gives up.  The
+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe
+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to
+# attempt to infer which configuration to use.
+# We have to put --tag disable-shared after --tag CXX lest things
+# CXX undo the affect of disable-shared.
+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
+	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(EXTRA_CXX_FLAGS)
+
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+
+# 3) We'd have a problem when building the shared libstdc++ object if
+# the rules automake generates would be used.  We cannot allow g++ to
+# be used since this would add -lstdc++ to the link line which of
+# course is problematic at this point.  So, we get the top-level
+# directory to configure libstdc++-v3 to use gcc as the C++
+# compilation driver.
+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	  --mode=link $(CXX) \
+	  $(VTV_CXXLINKFLAGS) \
+	  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .S .cc .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/nonshared98/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign --ignore-deps src/nonshared98/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+$(top_srcdir)/fragment.am:
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+clean-noinstLTLIBRARIES:
+	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
+	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+libnonshared98convenience44.la: $(libnonshared98convenience44_la_OBJECTS) $(libnonshared98convenience44_la_DEPENDENCIES) $(EXTRA_libnonshared98convenience44_la_DEPENDENCIES) 
+	$(CXXLINK)  $(libnonshared98convenience44_la_OBJECTS) $(libnonshared98convenience44_la_LIBADD) $(LIBS)
+libnonshared98convenience48.la: $(libnonshared98convenience48_la_OBJECTS) $(libnonshared98convenience48_la_DEPENDENCIES) $(EXTRA_libnonshared98convenience48_la_DEPENDENCIES) 
+	$(CXXLINK)  $(libnonshared98convenience48_la_OBJECTS) $(libnonshared98convenience48_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+.S.o:
+	$(CPPASCOMPILE) -c -o $@ $<
+
+.S.obj:
+	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.S.lo:
+	$(LTCPPASCOMPILE) -c -o $@ $<
+
+.cc.o:
+	$(CXXCOMPILE) -c -o $@ $<
+
+.cc.obj:
+	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.cc.lo:
+	$(LTCXXCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am:
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am install-man \
+	install-pdf install-pdf-am install-ps install-ps-am \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
+	pdf pdf-am ps ps-am tags uninstall uninstall-am
+
+
+vpath % $(top_srcdir)/src/nonshared98
+vpath % $(top_srcdir)
+
+collate_members.lo: collate_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+messages_members.lo: messages_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+monetary_members.lo: monetary_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+numeric_members.lo: numeric_members.cc
+	$(LTCXXCOMPILE) -I. -c $<
+# Use special rules to compile with -fimplicit-templates.
+c++locale.lo: c++locale.cc
+	$(LTCXXCOMPILE) -I. -fimplicit-templates -c $<
+c++locale.o: c++locale.cc
+	$(CXXCOMPILE) -I. -fimplicit-templates -c $<
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libstdc++-v3/src/nonshared98/misc-inst.cc.jj	2016-07-22 11:37:16.389402738 +0200
+++ libstdc++-v3/src/nonshared98/misc-inst.cc	2016-07-22 11:37:16.389402738 +0200
@@ -0,0 +1,25 @@
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++98/misc-inst.cc"
+asm (".hidden _ZNKSt5ctypeIcE8do_widenEc");
+
--- libstdc++-v3/src/nonshared98/decimal-rtti.S.jj	2016-07-22 11:37:16.390402726 +0200
+++ libstdc++-v3/src/nonshared98/decimal-rtti.S	2016-07-22 11:37:16.390402726 +0200
@@ -0,0 +1,274 @@
+/* Copyright (C) 2012-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__ \
+    || defined __i386__ || defined __powerpc__ || defined __s390__
+#ifdef __i386__
+#define ALIGN1	.align 4
+#elif defined __x86_64__
+#define ALIGN1	.align 32
+#define ALIGN2	.align 16
+#elif defined __ia64__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 8
+#define SECTION3(x).section .gnu.linkonce.s.x,"aws",@progbits
+#define POINTER	data8
+#define FLAGS data4
+#define PAD .skip 4
+#define STRING stringz
+#elif defined __powerpc64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#elif defined __powerpc__
+#define ALIGN1	.align 2
+#define ALIGN3	.align 2
+#define SECTION2(x).section .gnu.linkonce.s.x,"aw",@progbits
+#define SECTION3(x)SECTION2(x)
+#elif defined __aarch64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#define POINTER	.xword
+#define FLAGS	.word
+#define OBJECT	%object
+#elif defined __s390x__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 2
+#elif defined __s390__
+#define ALIGN1	.align 4
+#define ALIGN3	.align 2
+#endif
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__
+#define SIZE1	32
+#define SIZE2	16
+#define OFF	16
+#ifndef POINTER
+#define POINTER	.quad
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD .zero 4
+#endif
+#else
+#define SIZE1	16
+#define SIZE2	8
+#define OFF	8
+#ifndef POINTER
+#define POINTER	.long
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD
+#endif
+#endif
+#ifndef SYM
+#define SYM(x)x
+#endif
+#ifndef ALIGN2
+#define ALIGN2 ALIGN1
+#endif
+#ifndef ALIGN3
+#define ALIGN3
+#endif
+#ifndef OBJECT
+#define OBJECT @object
+#endif
+#ifndef SECTION1
+#define SECTION1(x).section .gnu.linkonce.d.rel.ro.x,"aw",@progbits
+#endif
+#ifndef SECTION2
+#define SECTION2(x)SECTION1(x)
+#endif
+#ifndef SECTION3
+#define SECTION3(x).section .gnu.linkonce.r.x,"a",@progbits
+#endif
+#ifndef STRING
+#define STRING .string
+#endif
+
+	.weak	SYM(_ZTIPKDd)
+	SECTION1(_ZTIPKDd)
+	ALIGN1
+	.type	SYM(_ZTIPKDd), OBJECT
+	.size	SYM(_ZTIPKDd), SIZE1
+_ZTIPKDd:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKDd)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIDd)
+	.weak	SYM(_ZTIPDd)
+	SECTION1(_ZTIPDd)
+	ALIGN1
+	.type	SYM(_ZTIPDd), OBJECT
+	.size	SYM(_ZTIPDd), SIZE1
+_ZTIPDd:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPDd)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIDd)
+	.weak	SYM(_ZTIDd)
+	SECTION2(_ZTIDd)
+	ALIGN2
+	.type	SYM(_ZTIDd), OBJECT
+	.size	SYM(_ZTIDd), SIZE2
+_ZTIDd:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSDd)
+	.weak	SYM(_ZTIPKDe)
+	SECTION1(_ZTIPKDe)
+	ALIGN1
+	.type	SYM(_ZTIPKDe), OBJECT
+	.size	SYM(_ZTIPKDe), SIZE1
+_ZTIPKDe:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKDe)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIDe)
+	.weak	SYM(_ZTIPDe)
+	SECTION1(_ZTIPDe)
+	ALIGN1
+	.type	SYM(_ZTIPDe), OBJECT
+	.size	SYM(_ZTIPDe), SIZE1
+_ZTIPDe:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPDe)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIDe)
+	.weak	SYM(_ZTIDe)
+	SECTION2(_ZTIDe)
+	ALIGN2
+	.type	SYM(_ZTIDe), OBJECT
+	.size	SYM(_ZTIDe), SIZE2
+_ZTIDe:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSDe)
+	.weak	SYM(_ZTIPKDf)
+	SECTION1(_ZTIPKDf)
+	ALIGN1
+	.type	SYM(_ZTIPKDf), OBJECT
+	.size	SYM(_ZTIPKDf), SIZE1
+_ZTIPKDf:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKDf)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIDf)
+	.weak	SYM(_ZTIPDf)
+	SECTION1(_ZTIPDf)
+	ALIGN1
+	.type	SYM(_ZTIPDf), OBJECT
+	.size	SYM(_ZTIPDf), SIZE1
+_ZTIPDf:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPDf)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIDf)
+	.weak	SYM(_ZTIDf)
+	SECTION2(_ZTIDf)
+	ALIGN2
+	.type	SYM(_ZTIDf), OBJECT
+	.size	SYM(_ZTIDf), SIZE2
+_ZTIDf:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSDf)
+	.weak	SYM(_ZTSPKDd)
+	.hidden	SYM(_ZTSPKDd)
+	SECTION3(_ZTSPKDd)
+	ALIGN3
+	.type	SYM(_ZTSPKDd), OBJECT
+	.size	SYM(_ZTSPKDd), 5
+_ZTSPKDd:
+	STRING	"PKDd"
+	.weak	SYM(_ZTSPDd)
+	.hidden	SYM(_ZTSPDd)
+	SECTION3(_ZTSPDd)
+	ALIGN3
+	.type	SYM(_ZTSPDd), OBJECT
+	.size	SYM(_ZTSPDd), 4
+_ZTSPDd:
+	STRING	"PDd"
+	.weak	SYM(_ZTSDd)
+	.hidden	SYM(_ZTSDd)
+	SECTION3(_ZTSDd)
+	ALIGN3
+	.type	SYM(_ZTSDd), OBJECT
+	.size	SYM(_ZTSDd), 3
+_ZTSDd:
+	STRING	"Dd"
+	.weak	SYM(_ZTSPKDe)
+	.hidden	SYM(_ZTSPKDe)
+	SECTION3(_ZTSPKDe)
+	ALIGN3
+	.type	SYM(_ZTSPKDe), OBJECT
+	.size	SYM(_ZTSPKDe), 5
+_ZTSPKDe:
+	STRING	"PKDe"
+	.weak	SYM(_ZTSPDe)
+	.hidden	SYM(_ZTSPDe)
+	SECTION3(_ZTSPDe)
+	ALIGN3
+	.type	SYM(_ZTSPDe), OBJECT
+	.size	SYM(_ZTSPDe), 4
+_ZTSPDe:
+	STRING	"PDe"
+	.weak	SYM(_ZTSDe)
+	.hidden	SYM(_ZTSDe)
+	SECTION3(_ZTSDe)
+	ALIGN3
+	.type	SYM(_ZTSDe), OBJECT
+	.size	SYM(_ZTSDe), 3
+_ZTSDe:
+	STRING	"De"
+	.weak	SYM(_ZTSPKDf)
+	.hidden	SYM(_ZTSPKDf)
+	SECTION3(_ZTSPKDf)
+	ALIGN3
+	.type	SYM(_ZTSPKDf), OBJECT
+	.size	SYM(_ZTSPKDf), 5
+_ZTSPKDf:
+	STRING	"PKDf"
+	.weak	SYM(_ZTSPDf)
+	.hidden	SYM(_ZTSPDf)
+	SECTION3(_ZTSPDf)
+	ALIGN3
+	.type	SYM(_ZTSPDf), OBJECT
+	.size	SYM(_ZTSPDf), 4
+_ZTSPDf:
+	STRING	"PDf"
+	.weak	SYM(_ZTSDf)
+	.hidden	SYM(_ZTSDf)
+	SECTION3(_ZTSDf)
+	ALIGN3
+	.type	SYM(_ZTSDf), OBJECT
+	.size	SYM(_ZTSDf), 3
+_ZTSDf:
+	STRING	"Df"
+#endif
+	.section	.note.GNU-stack,"",@progbits
--- libstdc++-v3/src/nonshared98/eh_alloc48.cc.jj	2016-07-22 11:37:16.390402726 +0200
+++ libstdc++-v3/src/nonshared98/eh_alloc48.cc	2016-07-22 11:37:16.390402726 +0200
@@ -0,0 +1,36 @@
+// -*- C++ -*- Allocate exception objects.
+// Copyright (C) 2001-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+// This is derived from the C++ ABI for IA-64.  Where we diverge
+// for cross-architecture compatibility are noted with "@@@".
+
+#include <bits/c++config.h>
+
+namespace __gnu_cxx
+{
+  void
+  __freeres()
+  {
+  }
+}
--- libstdc++-v3/src/nonshared98/list.cc.jj	2016-07-22 11:37:16.390402726 +0200
+++ libstdc++-v3/src/nonshared98/list.cc	2016-07-22 11:37:16.390402726 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++98/list.cc"
--- libstdc++-v3/src/nonshared98/stdexcept.cc.jj	2016-07-22 11:37:16.391402713 +0200
+++ libstdc++-v3/src/nonshared98/stdexcept.cc	2016-07-22 11:37:16.391402713 +0200
@@ -0,0 +1,44 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#ifdef __ARM_EABI__
+#define RET const void *
+#else
+#define RET void
+#endif
+#define BASE_DTOR(name) \
+extern RET _ZN##name##D1Ev (const void *t); 	\
+RET _ZN##name##D2Ev (const void *t)		\
+{						\
+  return _ZN##name##D1Ev (t);			\
+}						\
+
+extern "C"
+{
+  BASE_DTOR (St11range_error)
+  BASE_DTOR (St12domain_error)
+  BASE_DTOR (St12length_error)
+  BASE_DTOR (St12out_of_range)
+  BASE_DTOR (St14overflow_error)
+  BASE_DTOR (St15underflow_error)
+  BASE_DTOR (St16invalid_argument)
+}
--- libstdc++-v3/src/nonshared98/float128.S.jj	2016-07-22 11:37:16.391402713 +0200
+++ libstdc++-v3/src/nonshared98/float128.S	2016-07-22 11:37:16.391402713 +0200
@@ -0,0 +1,162 @@
+/* Copyright (C) 2012-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined __x86_64__ || defined __i386__ || defined __ia64__
+#ifdef __i386__
+#define ALIGN1	.align 4
+#elif defined __x86_64__
+#define ALIGN1	.align 32
+#define ALIGN2	.align 16
+#elif defined __ia64__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 8
+#define SECTION3(x).section .gnu.linkonce.s.x,"aws",@progbits
+#define POINTER	data8
+#define FLAGS data4
+#define PAD .skip 4
+#define STRING stringz
+#elif defined __powerpc64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#elif defined __powerpc__
+#define ALIGN1	.align 2
+#define ALIGN3	.align 2
+#define SECTION2(x).section .gnu.linkonce.s.x,"aw",@progbits
+#define SECTION3(x)SECTION2(x)
+#elif defined __aarch64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#define POINTER	.xword
+#define FLAGS	.word
+#define OBJECT	%object
+#elif defined __s390x__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 2
+#elif defined __s390__
+#define ALIGN1	.align 4
+#define ALIGN3	.align 2
+#endif
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__
+#define SIZE1	32
+#define SIZE2	16
+#define OFF	16
+#ifndef POINTER
+#define POINTER	.quad
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD .zero 4
+#endif
+#else
+#define SIZE1	16
+#define SIZE2	8
+#define OFF	8
+#ifndef POINTER
+#define POINTER	.long
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD
+#endif
+#endif
+#ifndef SYM
+#define SYM(x)x
+#endif
+#ifndef ALIGN2
+#define ALIGN2 ALIGN1
+#endif
+#ifndef ALIGN3
+#define ALIGN3
+#endif
+#ifndef OBJECT
+#define OBJECT @object
+#endif
+#ifndef SECTION1
+#define SECTION1(x).section .gnu.linkonce.d.rel.ro.x,"aw",@progbits
+#endif
+#ifndef SECTION2
+#define SECTION2(x)SECTION1(x)
+#endif
+#ifndef SECTION3
+#define SECTION3(x).section .gnu.linkonce.r.x,"a",@progbits
+#endif
+#ifndef STRING
+#define STRING .string
+#endif
+
+	.weak	SYM(_ZTIPKg)
+	SECTION1(_ZTIPKg)
+	ALIGN1
+	.type	SYM(_ZTIPKg), OBJECT
+	.size	SYM(_ZTIPKg), SIZE1
+_ZTIPKg:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPKg)
+	FLAGS	1
+	PAD
+	POINTER	SYM(_ZTIg)
+	.weak	SYM(_ZTIPg)
+	SECTION1(_ZTIPg)
+	ALIGN1
+	.type	SYM(_ZTIPg), OBJECT
+	.size	SYM(_ZTIPg), SIZE1
+_ZTIPg:
+	POINTER	SYM(_ZTVN10__cxxabiv119__pointer_type_infoE)+OFF
+	POINTER	SYM(_ZTSPg)
+	FLAGS	0
+	PAD
+	POINTER	SYM(_ZTIg)
+	.weak	SYM(_ZTIg)
+	SECTION2(_ZTIg)
+	ALIGN2
+	.type	SYM(_ZTIg), OBJECT
+	.size	SYM(_ZTIg), SIZE2
+_ZTIg:
+	POINTER	SYM(_ZTVN10__cxxabiv123__fundamental_type_infoE)+OFF
+	POINTER	SYM(_ZTSg)
+	.weak	SYM(_ZTSPKg)
+	SECTION3(_ZTSPKg)
+	ALIGN3
+	.type	SYM(_ZTSPKg), OBJECT
+	.size	SYM(_ZTSPKg), 4
+_ZTSPKg:
+	STRING	"PKg"
+	.weak	SYM(_ZTSPg)
+	SECTION3(_ZTSPg)
+	ALIGN3
+	.type	SYM(_ZTSPg), OBJECT
+	.size	SYM(_ZTSPg), 3
+_ZTSPg:
+	STRING	"Pg"
+	.weak	SYM(_ZTSg)
+	SECTION3(_ZTSg)
+	ALIGN3
+	.type	SYM(_ZTSg), OBJECT
+	.size	SYM(_ZTSg), 2
+_ZTSg:
+	STRING	"g"
+#endif
+	.section	.note.GNU-stack,"",@progbits
--- libstdc++-v3/src/nonshared98/locale-inst.cc.jj	2016-07-22 11:37:16.391402713 +0200
+++ libstdc++-v3/src/nonshared98/locale-inst.cc	2016-07-22 11:37:16.391402713 +0200
@@ -0,0 +1,39 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <locale>
+
+#ifndef C
+# define C char
+#endif
+
+namespace std _GLIBCXX_VISIBILITY(default)   
+{
+
+  typedef time_get<C> S;
+
+  template
+  S::iter_type S::_M_extract_wday_or_month(iter_type, iter_type, int&,
+					   const C **, size_t, ios_base&,
+					   ios_base::iostate&) const;
+
+}
--- libstdc++-v3/src/nonshared98/istream-string.cc.jj	2016-07-22 11:37:16.391402713 +0200
+++ libstdc++-v3/src/nonshared98/istream-string.cc	2016-07-22 11:37:16.391402713 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++98/istream-string.cc"
--- libstdc++-v3/src/nonshared98/streambuf-inst.cc.jj	2016-07-22 11:37:16.392402701 +0200
+++ libstdc++-v3/src/nonshared98/streambuf-inst.cc	2016-07-22 11:37:16.392402701 +0200
@@ -0,0 +1,36 @@
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <ios>
+#include <streambuf>
+
+namespace std _GLIBCXX_VISIBILITY(default)   
+{
+
+  template void basic_streambuf<char>::__safe_gbump(std::streamsize);
+  template void basic_streambuf<char>::__safe_pbump(std::streamsize);
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template void basic_streambuf<wchar_t>::__safe_gbump(std::streamsize);
+  template void basic_streambuf<wchar_t>::__safe_pbump(std::streamsize);
+#endif
+
+}
--- libstdc++-v3/src/nonshared98/list_associated-2.cc.jj	2016-07-22 11:37:16.392402701 +0200
+++ libstdc++-v3/src/nonshared98/list_associated-2.cc	2016-07-22 11:37:16.392402701 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++98/list_associated-2.cc"
--- libstdc++-v3/src/nonshared98/locale.cc.jj	2016-07-22 11:37:16.392402701 +0200
+++ libstdc++-v3/src/nonshared98/locale.cc	2016-07-22 11:37:16.392402701 +0200
@@ -0,0 +1,84 @@
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include <locale>
+
+namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  const char* const category_names[6 + _GLIBCXX_NUM_CATEGORIES] =
+    {
+      "LC_CTYPE", 
+      "LC_NUMERIC",
+      "LC_TIME", 
+      "LC_COLLATE", 
+      "LC_MONETARY",
+      "LC_MESSAGES", 
+      "LC_PAPER", 
+      "LC_NAME", 
+      "LC_ADDRESS",
+      "LC_TELEPHONE", 
+      "LC_MEASUREMENT", 
+      "LC_IDENTIFICATION" 
+    };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  const char* const* const locale::_S_categories = __gnu_cxx::category_names;
+
+  _GLIBCXX_DEFAULT_ABI_TAG
+  string
+  locale::name() const
+  {
+    string __ret;
+    if (!_M_impl->_M_names[0])
+      __ret = '*';
+    else if (_M_impl->_M_check_same_name())
+      __ret = _M_impl->_M_names[0];
+    else
+      {
+	__ret.reserve(128);
+	__ret += _S_categories[0];
+	__ret += '=';
+	__ret += _M_impl->_M_names[0]; 
+	for (size_t __i = 1; __i < _S_categories_size; ++__i)
+	  {
+	    __ret += ';';
+	    __ret += _S_categories[__i];
+	    __ret += '=';
+	    __ret += _M_impl->_M_names[__i];
+	  }
+      }
+    return __ret;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
+
+asm (".hidden _ZNSt6locale13_S_categoriesE");
--- libstdc++-v3/src/nonshared11/eh_aux_runtime.cc.jj	2016-07-22 11:37:16.392402701 +0200
+++ libstdc++-v3/src/nonshared11/eh_aux_runtime.cc	2016-07-22 11:37:16.392402701 +0200
@@ -0,0 +1,38 @@
+// -*- C++ -*- Common throw conditions.
+// Copyright (C) 1994-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+//
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "typeinfo"
+#include "exception"
+#include "new"
+#include <cstdlib>
+#include "unwind-cxx.h"
+#include <bits/exception_defines.h>
+
+extern "C" void
+__cxxabiv1::__cxa_throw_bad_array_new_length ()
+{ _GLIBCXX_THROW_OR_ABORT(std::bad_array_new_length()); }
+
+//extern "C" void
+//__cxxabiv1::__cxa_throw_bad_array_length ()
+//{ _GLIBCXX_THROW_OR_ABORT(std::bad_array_length()); }
--- libstdc++-v3/src/nonshared11/thread48.cc.jj	2016-07-22 11:37:16.393402688 +0200
+++ libstdc++-v3/src/nonshared11/thread48.cc	2016-07-22 11:37:16.393402688 +0200
@@ -0,0 +1,28 @@
+// Copyright (C) 2008-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_44
+#define _GLIBCXX_NONSHARED_CXX11_48
+#include "../c++11/thread.cc"
+asm (".hidden _ZNSt15_Sp_counted_ptrIDnLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv");
--- libstdc++-v3/src/nonshared11/cxx11-locale-inst.cc.jj	2016-07-22 11:37:16.393402688 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-locale-inst.cc	2016-07-22 11:37:16.393402688 +0200
@@ -0,0 +1,45 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-locale-inst.cc"
+asm (".hidden _ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv");
+asm (".hidden _ZNKSt5ctypeIcE5widenEPKcS2_Pc");
+#if !defined (__powerpc__) && !defined (__s390__) && !defined (__s390x__)
+asm (".hidden _ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+#else
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ItEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IxEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IyEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+#endif
+asm (".hidden _ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_");
+asm (".hidden _ZNKSt5ctypeIcE8do_widenEPKcS2_Pc");
+asm (".hidden _ZNKSt5ctypeIcE8do_widenEc");
+asm (".hidden _ZNKSt5ctypeIcE9do_narrowEcc");
--- libstdc++-v3/src/nonshared11/shared_ptr44.cc.jj	2016-07-22 11:37:16.393402688 +0200
+++ libstdc++-v3/src/nonshared11/shared_ptr44.cc	2016-07-22 11:37:16.393402688 +0200
@@ -0,0 +1,43 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/shared_ptr.cc"
+asm (".hidden _ZTSSt12bad_weak_ptr");
+asm (".hidden _ZGVZNSt12_GLOBAL__N_19get_mutexEhE1m");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZNSt12_GLOBAL__N_19get_mutexEh");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZZNSt12_GLOBAL__N_19get_mutexEhE1m");
--- libstdc++-v3/src/nonshared11/functional.cc.jj	2016-07-22 11:37:16.393402688 +0200
+++ libstdc++-v3/src/nonshared11/functional.cc	2016-07-22 11:37:16.393402688 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/functional.cc"
+asm (".hidden _ZTSSt17bad_function_call");
--- libstdc++-v3/src/nonshared11/ostream-inst.cc.jj	2016-07-22 11:37:16.394402676 +0200
+++ libstdc++-v3/src/nonshared11/ostream-inst.cc	2016-07-22 11:37:16.394402676 +0200
@@ -0,0 +1,48 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <ostream>
+#include <iomanip>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template basic_ostream<char>::basic_ostream(basic_ostream&&);
+  template basic_ostream<char>& basic_ostream<char>::operator=(basic_ostream&&);
+  template void basic_ostream<char>::swap(basic_ostream&);
+  template basic_ostream<char>::basic_ostream(basic_iostream<char>&);
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template basic_ostream<wchar_t>::basic_ostream(basic_ostream&&);
+  template basic_ostream<wchar_t>& basic_ostream<wchar_t>::operator=(basic_ostream&&);
+  template void basic_ostream<wchar_t>::swap(basic_ostream&);
+  template basic_ostream<wchar_t>::basic_ostream(basic_iostream<wchar_t>&);
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/ios.cc.jj	2016-07-22 11:37:16.394402676 +0200
+++ libstdc++-v3/src/nonshared11/ios.cc	2016-07-22 11:37:16.394402676 +0200
@@ -0,0 +1,30 @@
+// Iostreams base classes -*- C++ -*-
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 27.4  Iostreams base classes
+//
+
+#define _GLIBCXX_NONSHARED_CXX11
+#include "../c++11/ios.cc"
--- libstdc++-v3/src/nonshared11/cow-shim_facets.cc.jj	2016-07-22 11:37:16.394402676 +0200
+++ libstdc++-v3/src/nonshared11/cow-shim_facets.cc	2016-07-22 11:52:03.980619192 +0200
@@ -0,0 +1,181 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cow-shim_facets.cc"
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE10do_compareEPKcS4_S4_S4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE12do_transformEPKcS4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE10do_compareEPKwS4_S4_S4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE12do_transformEPKwS4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE6do_getEiiiRKSs");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE7do_openERKSsRKSt6locale");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE8do_closeEi");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE6do_getEiiiRKSbIwSt11char_traitsIwESaIwEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE7do_openERKSsRKSt6locale");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE8do_closeEi");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_dateESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_timeESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_yearESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE13do_date_orderEv");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE14do_get_weekdayESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE16do_get_monthnameESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_dateESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_timeESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_yearESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE13do_date_orderEv");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE14do_get_weekdayESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE16do_get_monthnameESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRSs");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRSbIwS5_SaIwEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKSs");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKSbIwS5_SaIwEE");
+asm (".hidden _ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE");
+asm (".hidden _ZNKSt6locale5facet19_M_remove_referenceEv");
+asm (".hidden _ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc");
+asm (".hidden _ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc");
+#if !defined (__powerpc__) && !defined (__s390__) && !defined (__s390x__)
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basece");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewe");
+asm (".hidden _ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE");
+#else
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewg");
+asm (".hidden _ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePgPNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePgPNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_gPKNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_gPKNS_12__any_stringE");
+#endif
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIcEEvPv");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIwEEvPv");
+asm (".hidden _ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi");
+asm (".hidden _ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi");
+asm (".hidden _ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_");
+asm (".hidden _ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_");
+asm (".hidden _ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_");
+asm (".hidden _ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_");
+asm (".hidden _ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE");
+asm (".hidden _ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_112collate_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_112collate_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113messages_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113messages_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113time_get_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113time_get_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_get_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_get_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_put_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_put_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EEE");
+asm (".hidden _ZTINSt6locale5facet6__shimE");
+asm (".hidden _ZTSNSt6locale5facet6__shimE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_112collate_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_112collate_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113messages_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113messages_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EEE");
+asm (".hidden _ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E");
+asm (".hidden _ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j");
+asm (".hidden _ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_");
+#else
+asm (".hidden _ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_m");
+asm (".hidden _ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_m");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcmRKS3_");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcmRKS3_");
+#endif
--- libstdc++-v3/src/nonshared11/del_ops.cc.jj	2016-07-22 11:37:16.395402663 +0200
+++ libstdc++-v3/src/nonshared11/del_ops.cc	2016-07-22 11:37:16.395402663 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/del_ops.cc"
--- libstdc++-v3/src/nonshared11/wlocale-inst.cc.jj	2016-07-22 11:37:16.395402663 +0200
+++ libstdc++-v3/src/nonshared11/wlocale-inst.cc	2016-07-22 11:37:16.395402663 +0200
@@ -0,0 +1,36 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// Instantiate locales using COW std::wstring ABI
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <bits/c++config.h>
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+#define C wchar_t
+#include "locale-inst.cc"
+#endif
--- libstdc++-v3/src/nonshared11/wlocale-inst44.cc.jj	2016-07-22 11:37:16.395402663 +0200
+++ libstdc++-v3/src/nonshared11/wlocale-inst44.cc	2016-07-22 11:37:16.395402663 +0200
@@ -0,0 +1,31 @@
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+// Instantiate locales using COW std::wstring ABI
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <bits/c++config.h>
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+#define C wchar_t
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "locale-inst.cc"
+#endif
--- libstdc++-v3/src/nonshared11/condition_variable.cc.jj	2016-07-22 11:37:16.395402663 +0200
+++ libstdc++-v3/src/nonshared11/condition_variable.cc	2016-07-22 11:37:16.395402663 +0200
@@ -0,0 +1,27 @@
+// condition_variable -*- C++ -*-
+
+// Copyright (C) 2008-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11
+#include "../c++11/condition_variable.cc"
+asm (".hidden _ZSt16__at_thread_exitPSt20__at_thread_exit_elt");
--- libstdc++-v3/src/nonshared11/ctype.cc.jj	2016-07-22 11:37:16.396402651 +0200
+++ libstdc++-v3/src/nonshared11/ctype.cc	2016-07-22 11:37:16.396402651 +0200
@@ -0,0 +1,35 @@
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <locale>
+#include <cstdlib>
+#include <cstring>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  // Definitions for static const data members of ctype_base.
+  const ctype_base::mask ctype_base::blank;
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/atexit_thread.cc.jj	2016-07-22 11:37:16.396402651 +0200
+++ libstdc++-v3/src/nonshared11/atexit_thread.cc	2016-07-22 11:37:16.396402651 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/atexit_thread.cc"
--- libstdc++-v3/src/nonshared11/future.cc.jj	2016-07-22 11:37:16.396402651 +0200
+++ libstdc++-v3/src/nonshared11/future.cc	2016-07-22 11:37:16.396402651 +0200
@@ -0,0 +1,34 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <future>
+#undef _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE
+#include "../c++11/future.cc"
+const std::error_category* _ZSt15future_category = &__future_category_instance();
+asm (".hidden _ZNSt13__future_base11_State_base15_M_run_deferredEv");
+asm (".hidden _ZTSNSt13__future_base11_State_baseE");
+asm (".hidden _ZTSNSt13__future_base12_Result_baseE");
+asm (".hidden _ZNSt15_Sp_counted_ptrIDnLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv");
+asm (".hidden _ZSt16__at_thread_exitPSt20__at_thread_exit_elt");
+asm (".hidden _ZNSt13__future_base13_State_baseV211_Make_ready6_S_runEPv");
--- libstdc++-v3/src/nonshared11/cow-string-inst.cc.jj	2016-07-22 11:37:16.396402651 +0200
+++ libstdc++-v3/src/nonshared11/cow-string-inst.cc	2016-07-22 11:37:16.396402651 +0200
@@ -0,0 +1,101 @@
+// Components for manipulating sequences of characters -*- C++ -*-
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 21  Strings library
+//
+
+// Written by Jason Merrill based upon the specification by Takanori Adachi
+// in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers.
+
+// Instantiation configuration.
+#ifndef C
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "../c++11/cow-string-inst.cc"
+# define C char
+# define NARROW
+#else
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <string>
+#endif
+
+namespace std _GLIBCXX_VISIBILITY(default)   
+{
+
+  typedef basic_string<C> S;
+
+  template
+  S::const_iterator S::cbegin() const;
+
+  template
+  S::const_iterator S::cend() const;
+
+  template
+  S::const_reverse_iterator S::crbegin() const;
+
+  template
+  S::const_reverse_iterator S::crend() const;
+
+  template
+  S::basic_string(S&&);
+
+  template
+  S& S::operator=(S&&);
+
+  template
+  S& S::assign(S&&);
+
+  template
+  C *S::_S_construct_aux_2(size_type, C, const allocator_type&);
+
+  template
+  void S::shrink_to_fit();
+
+  template
+  C *S::_S_construct<S::iterator>(iterator, iterator, const allocator_type&, forward_iterator_tag);
+
+  template
+  C *S::_S_construct<C *>(C *, C *, const allocator_type&, forward_iterator_tag);
+
+  template
+  C *S::_S_construct<const C *>(const C *, const C *, const allocator_type&, forward_iterator_tag);
+
+  template
+  S::reference S::front();
+
+  template
+  S::const_reference S::front() const;
+
+  template
+  S::reference S::back();
+
+  template
+  S::const_reference S::back() const;
+
+  template
+  int S::_S_compare(size_type, size_type);
+
+  template
+  void S::pop_back();
+}
--- libstdc++-v3/src/nonshared11/system_error44.cc.jj	2016-07-22 11:37:16.397402638 +0200
+++ libstdc++-v3/src/nonshared11/system_error44.cc	2016-07-22 11:52:49.300071099 +0200
@@ -0,0 +1,46 @@
+// <system_error> implementation file
+
+// Copyright (C) 2007-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11
+#include "../c++11/system_error.cc"
+asm (".hidden _ZNSt12__sso_stringC1EOS_");
+asm (".hidden _ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNSt12__sso_stringC1ERKS_");
+asm (".hidden _ZNSt12__sso_stringC1Ev");
+asm (".hidden _ZNSt12__sso_stringC2EOS_");
+asm (".hidden _ZNSt12__sso_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNSt12__sso_stringC2ERKS_");
+asm (".hidden _ZNSt12__sso_stringC2Ev");
+asm (".hidden _ZNSt12__sso_stringD1Ev");
+asm (".hidden _ZNSt12__sso_stringD2Ev");
+asm (".hidden _ZNSt12__sso_stringaSEOS_");
+asm (".hidden _ZNSt12__sso_stringaSERKS_");
+asm (".hidden _ZTSNSt3_V214error_categoryE");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt12__sso_stringC1EPKcj");
+asm (".hidden _ZNSt12__sso_stringC2EPKcj");
+#else
+asm (".hidden _ZNSt12__sso_stringC1EPKcm");
+asm (".hidden _ZNSt12__sso_stringC2EPKcm");
+#endif
--- libstdc++-v3/src/nonshared11/compatibility-c++0x.cc.jj	2016-07-22 11:37:16.397402638 +0200
+++ libstdc++-v3/src/nonshared11/compatibility-c++0x.cc	2016-07-22 11:37:16.397402638 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "../c++11/compatibility-c++0x.cc"
--- libstdc++-v3/src/nonshared11/cxx11-shim_facets.cc.jj	2016-07-22 11:37:16.397402638 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-shim_facets.cc	2016-07-22 11:53:24.065650644 +0200
@@ -0,0 +1,181 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-shim_facets.cc"
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE10do_compareEPKcS4_S4_S4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE12do_transformEPKcS4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE10do_compareEPKwS4_S4_S4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE12do_transformEPKwS4_");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE6do_getEiiiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE7do_openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE8do_closeEi");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE6do_getEiiiRKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE7do_openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE8do_closeEi");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_dateESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_timeESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_yearESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE13do_date_orderEv");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE14do_get_weekdayESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE16do_get_monthnameESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_dateESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_timeESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_yearESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE13do_date_orderEv");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE14do_get_weekdayESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE16do_get_monthnameESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIcS5_SaIcEEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIwS5_SaIwEEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKNSt7__cxx1112basic_stringIcS5_SaIcEEE");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKNSt7__cxx1112basic_stringIwS5_SaIwEEE");
+asm (".hidden _ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE");
+asm (".hidden _ZNKSt6locale5facet19_M_remove_referenceEv");
+asm (".hidden _ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc");
+asm (".hidden _ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc");
+#if !defined (__powerpc__) && !defined (__s390__) && !defined (__s390x__)
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basece");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewe");
+asm (".hidden _ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE");
+#else
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecg");
+asm (".hidden _ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewg");
+asm (".hidden _ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePgPNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePgPNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_gPKNS_12__any_stringE");
+asm (".hidden _ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_gPKNS_12__any_stringE");
+#endif
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED0Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED2Ev");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIcEEvPv");
+asm (".hidden _ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIwEEvPv");
+asm (".hidden _ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi");
+asm (".hidden _ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi");
+asm (".hidden _ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_");
+asm (".hidden _ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_");
+asm (".hidden _ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_");
+asm (".hidden _ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_");
+asm (".hidden _ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE");
+asm (".hidden _ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE");
+asm (".hidden _ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E");
+asm (".hidden _ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_112collate_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_112collate_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113messages_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113messages_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113time_get_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_113time_get_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_get_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_get_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_put_shimIcEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_114money_put_shimIwEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EEE");
+asm (".hidden _ZTINSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EEE");
+asm (".hidden _ZTINSt6locale5facet6__shimE");
+asm (".hidden _ZTSNSt6locale5facet6__shimE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_112collate_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_112collate_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113messages_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113messages_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EEE");
+asm (".hidden _ZTVNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EEE");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j");
+asm (".hidden _ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_");
+#else
+asm (".hidden _ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_m");
+asm (".hidden _ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_m");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcmRKS3_");
+asm (".hidden _ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcmRKS3_");
+#endif
--- libstdc++-v3/src/nonshared11/thread44.cc.jj	2016-07-22 11:37:16.398402626 +0200
+++ libstdc++-v3/src/nonshared11/thread44.cc	2016-07-22 11:37:16.398402626 +0200
@@ -0,0 +1,27 @@
+// Copyright (C) 2008-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "../c++11/thread.cc"
+asm (".hidden _ZNSt15_Sp_counted_ptrIDnLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv");
+asm (".hidden _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv");
--- libstdc++-v3/src/nonshared11/random48.cc.jj	2016-07-22 11:37:16.398402626 +0200
+++ libstdc++-v3/src/nonshared11/random48.cc	2016-07-22 11:37:16.398402626 +0200
@@ -0,0 +1,72 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_48
+#include "../c++11/random.cc"
+
+#if __WORDSIZE == 64
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE10shift_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE10state_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_bE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_cE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_dE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_lE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_sE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_tE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_uE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE12default_seedE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE25initialization_multiplierE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE3maxEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE3minEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE4seedEm");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE7discardEy");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE8xor_maskE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE9mask_bitsE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE9word_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEC1Em");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEC2Em");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv");
+#else
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE10shift_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE10state_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_bE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_cE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_dE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_lE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_sE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_tE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_uE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE12default_seedE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE25initialization_multiplierE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3maxEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3minEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE7discardEy");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE8xor_maskE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE9mask_bitsE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE9word_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC1Ej");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv");
+#endif
--- libstdc++-v3/src/nonshared11/placeholders.cc.jj	2016-07-22 11:37:16.398402626 +0200
+++ libstdc++-v3/src/nonshared11/placeholders.cc	2016-07-22 11:37:16.398402626 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/placeholders.cc"
--- libstdc++-v3/src/nonshared11/iostream-inst.cc.jj	2016-07-22 11:37:16.399402613 +0200
+++ libstdc++-v3/src/nonshared11/iostream-inst.cc	2016-07-22 11:37:16.398402626 +0200
@@ -0,0 +1,46 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <iomanip>
+#include <istream>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template basic_iostream<char>::basic_iostream(basic_iostream&&);
+  template basic_iostream<char>& basic_iostream<char>::operator=(basic_iostream&&);
+  template void basic_iostream<char>::swap(basic_iostream&);
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template basic_iostream<wchar_t>::basic_iostream(basic_iostream&&);
+  template basic_iostream<wchar_t>& basic_iostream<wchar_t>::operator=(basic_iostream&&);
+  template void basic_iostream<wchar_t>::swap(basic_iostream&);
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/debug.cc.jj	2016-07-22 11:37:16.399402613 +0200
+++ libstdc++-v3/src/nonshared11/debug.cc	2016-07-22 11:37:16.399402613 +0200
@@ -0,0 +1,234 @@
+// Copyright (C) 2003-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <debug/debug.h>
+#include <debug/safe_sequence.h>
+#include <debug/safe_unordered_container.h>
+#include <debug/safe_iterator.h>
+#include <debug/safe_local_iterator.h>
+#include <algorithm>
+#include <cassert>
+#include <cstring>
+#include <cctype>
+#include <cstdio>
+#include <cstdlib>
+
+using namespace std;
+
+namespace
+{
+  void
+  swap_its(__gnu_debug::_Safe_sequence_base& __lhs,
+	   __gnu_debug::_Safe_iterator_base*& __lhs_its,
+	   __gnu_debug::_Safe_sequence_base& __rhs,
+	   __gnu_debug::_Safe_iterator_base*& __rhs_its)
+  {
+    swap(__lhs_its, __rhs_its);
+    __gnu_debug::_Safe_iterator_base* __iter;
+    for (__iter = __rhs_its; __iter; __iter = __iter->_M_next)
+      __iter->_M_sequence = &__rhs;
+    for (__iter = __lhs_its; __iter; __iter = __iter->_M_next)
+      __iter->_M_sequence = &__lhs;
+  }
+
+  void
+  swap_seq(__gnu_debug::_Safe_sequence_base& __lhs,
+	   __gnu_debug::_Safe_sequence_base& __rhs)
+  {
+    swap(__lhs._M_version, __rhs._M_version);
+    swap_its(__lhs, __lhs._M_iterators,
+	     __rhs, __rhs._M_iterators);
+    swap_its(__lhs, __lhs._M_const_iterators,
+	     __rhs, __rhs._M_const_iterators);
+  }
+
+  void
+  swap_ucont(__gnu_debug::_Safe_unordered_container_base& __lhs,
+	    __gnu_debug::_Safe_unordered_container_base& __rhs)
+  {
+    swap_seq(__lhs, __rhs);
+    swap_its(__lhs, __lhs._M_local_iterators,
+	     __rhs, __rhs._M_local_iterators);
+    swap_its(__lhs, __lhs._M_const_local_iterators,
+	     __rhs, __rhs._M_const_local_iterators);
+  }
+
+  void
+  detach_all(__gnu_debug::_Safe_iterator_base* __iter)
+  {
+    for (; __iter;)
+      {
+	__gnu_debug::_Safe_iterator_base* __old = __iter;
+	__iter = __iter->_M_next;
+	__old->_M_reset();
+      }
+  }
+} // anonymous namespace
+
+namespace __gnu_debug
+{
+  void
+  _Safe_iterator_base::
+  _M_reset() throw ()
+  {
+    _M_sequence = 0;
+    _M_version = 0;
+    _M_prior = 0;
+    _M_next = 0;
+  }
+
+  _Safe_unordered_container_base*
+  _Safe_local_iterator_base::
+  _M_get_container() const _GLIBCXX_NOEXCEPT
+  { return static_cast<_Safe_unordered_container_base*>(_M_sequence); }
+
+  void
+  _Safe_local_iterator_base::
+  _M_attach(_Safe_sequence_base* __cont, bool __constant)
+  {
+    _M_detach();
+    
+    // Attach to the new container (if there is one)
+    if (__cont)
+      {
+	_M_sequence = __cont;
+	_M_version = _M_sequence->_M_version;
+	_M_get_container()->_M_attach_local(this, __constant);
+      }
+  }
+
+  void
+  _Safe_local_iterator_base::
+  _M_detach()
+  {
+    if (_M_sequence)
+      _M_get_container()->_M_detach_local(this);
+
+    _M_reset();
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_detach_all()
+  {
+    __gnu_cxx::__scoped_lock sentry(_M_get_mutex());
+    detach_all(_M_iterators);
+    _M_iterators = 0;
+    
+    detach_all(_M_const_iterators);
+    _M_const_iterators = 0;
+
+    detach_all(_M_local_iterators);
+    _M_local_iterators = 0;
+
+    detach_all(_M_const_local_iterators);
+    _M_const_local_iterators = 0;
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_swap(_Safe_unordered_container_base& __x) noexcept
+  {
+    // We need to lock both containers to swap
+    using namespace __gnu_cxx;
+    __mutex *__this_mutex = &_M_get_mutex();
+    __mutex *__x_mutex = &__x._M_get_mutex();
+    if (__this_mutex == __x_mutex)
+      {
+	__scoped_lock __lock(*__this_mutex);
+	swap_ucont(*this, __x);
+      }
+    else
+      {
+	__scoped_lock __l1(__this_mutex < __x_mutex
+			     ? *__this_mutex : *__x_mutex);
+	__scoped_lock __l2(__this_mutex < __x_mutex
+			     ? *__x_mutex : *__this_mutex);
+	swap_ucont(*this, __x);
+      }
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_attach_local(_Safe_iterator_base* __it, bool __constant)
+  {
+    __gnu_cxx::__scoped_lock sentry(_M_get_mutex());
+    _M_attach_local_single(__it, __constant);
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_attach_local_single(_Safe_iterator_base* __it, bool __constant) throw ()
+  {
+    _Safe_iterator_base*& __its =
+      __constant ? _M_const_local_iterators : _M_local_iterators;
+    __it->_M_next = __its;
+    if (__it->_M_next)
+      __it->_M_next->_M_prior = __it;
+    __its = __it;
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_detach_local(_Safe_iterator_base* __it)
+  {
+    // Remove __it from this container's list
+    __gnu_cxx::__scoped_lock sentry(_M_get_mutex());
+    _M_detach_local_single(__it);
+  }
+
+  void
+  _Safe_unordered_container_base::
+  _M_detach_local_single(_Safe_iterator_base* __it) throw ()
+  {
+    // Remove __it from this container's list
+    __it->_M_unlink();
+    if (_M_const_local_iterators == __it)
+      _M_const_local_iterators = __it->_M_next;
+    if (_M_local_iterators == __it)
+      _M_local_iterators = __it->_M_next;
+  }
+
+} // namespace __gnu_debug
+
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZN11__gnu_debug19_Safe_iterator_base8_M_resetEv");
+asm (".hidden _ZN11__gnu_debug30_Safe_unordered_container_base15_M_attach_localEPNS_19_Safe_iterator_baseEb");
+asm (".hidden _ZN11__gnu_debug30_Safe_unordered_container_base15_M_detach_localEPNS_19_Safe_iterator_baseE");
+asm (".hidden _ZN11__gnu_debug30_Safe_unordered_container_base22_M_attach_local_singleEPNS_19_Safe_iterator_baseEb");
+asm (".hidden _ZN11__gnu_debug30_Safe_unordered_container_base22_M_detach_local_singleEPNS_19_Safe_iterator_baseE");
+asm (".hidden _ZNK11__gnu_debug25_Safe_local_iterator_base16_M_get_containerEv");
--- libstdc++-v3/src/nonshared11/hashtable_c++0x.cc.jj	2016-07-22 11:37:16.399402613 +0200
+++ libstdc++-v3/src/nonshared11/hashtable_c++0x.cc	2016-07-22 11:37:16.399402613 +0200
@@ -0,0 +1,40 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <initializer_list>
+#include <tuple>
+#include <ext/aligned_buffer.h>
+#include <ext/alloc_traits.h>
+#include <bits/hashtable_policy.h>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+namespace __detail
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+  extern const unsigned long __prime_list[256 + (sizeof (long) == 8 ? 48 : 0) + 1];
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace __detail
+} // namespace std
+
+#define HASHTABLE_AUX_CC 1
+#include "../c++11/hashtable_c++0x.cc"
--- libstdc++-v3/src/nonshared11/futex.cc.jj	2016-07-22 11:37:16.399402613 +0200
+++ libstdc++-v3/src/nonshared11/futex.cc	2016-07-22 11:37:16.399402613 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/futex.cc"
--- libstdc++-v3/src/nonshared11/cxx11-stdexcept.cc.jj	2016-07-22 11:37:16.400402601 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-stdexcept.cc	2016-07-22 11:37:16.400402601 +0200
@@ -0,0 +1,25 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-stdexcept.cc"
+asm (".hidden _ZNSt12__cow_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNSt12__cow_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
--- libstdc++-v3/src/nonshared11/locale-inst44.cc.jj	2016-07-22 11:37:16.400402601 +0200
+++ libstdc++-v3/src/nonshared11/locale-inst44.cc	2016-07-22 11:37:16.400402601 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "locale-inst.cc"
--- libstdc++-v3/src/nonshared11/random.cc.jj	2016-07-22 11:37:16.400402601 +0200
+++ libstdc++-v3/src/nonshared11/random.cc	2016-07-22 11:37:16.400402601 +0200
@@ -0,0 +1,71 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/random.cc"
+
+#if __WORDSIZE == 64
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE10shift_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE10state_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_bE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_cE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_dE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_lE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_sE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_tE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11tempering_uE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE12default_seedE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE25initialization_multiplierE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE3maxEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE3minEv");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE4seedEm");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE7discardEy");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE8xor_maskE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE9mask_bitsE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE9word_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEC1Em");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEC2Em");
+asm (".hidden _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv");
+#else
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE10shift_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE10state_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_bE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_cE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_dE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_lE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_sE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_tE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11tempering_uE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE12default_seedE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE25initialization_multiplierE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3maxEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3minEv");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE7discardEy");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE8xor_maskE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE9mask_bitsE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE9word_sizeE");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC1Ej");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej");
+asm (".hidden _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv");
+#endif
--- libstdc++-v3/src/nonshared11/shared_ptr48.cc.jj	2016-07-22 11:37:16.400402601 +0200
+++ libstdc++-v3/src/nonshared11/shared_ptr48.cc	2016-07-22 11:37:16.400402601 +0200
@@ -0,0 +1,43 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_48
+#include "../c++11/shared_ptr.cc"
+asm (".hidden _ZGVZNSt12_GLOBAL__N_19get_mutexEhE1m");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZNSt12_GLOBAL__N_19get_mutexEh");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZZNSt12_GLOBAL__N_19get_mutexEhE1m");
--- libstdc++-v3/src/nonshared11/functexcept48.cc.jj	2016-07-22 11:37:16.401402588 +0200
+++ libstdc++-v3/src/nonshared11/functexcept48.cc	2016-07-22 11:37:16.401402588 +0200
@@ -0,0 +1,66 @@
+// Copyright (C) 2001-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <bits/functexcept.h>
+#include <cstdlib>
+#include <exception>
+#include <stdexcept>
+#include <new>
+#include <typeinfo>
+#include <ios>
+#include <stdarg.h>
+
+#ifdef _GLIBCXX_USE_NLS
+# include <libintl.h>
+# define _(msgid)   gettext (msgid)
+#else
+# define _(msgid)   (msgid)
+#endif
+
+namespace __gnu_cxx
+{
+  int __snprintf_lite(char *__buf, size_t __bufsize, const char *__fmt,
+		      va_list __ap);
+}
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  void
+  __throw_out_of_range_fmt(const char* __fmt, ...)
+  {
+    const size_t __len = __builtin_strlen(__fmt);
+    // We expect at most 2 numbers, and 1 short string. The additional
+    // 512 bytes should provide more than enough space for expansion.
+    const size_t __alloca_size = __len + 512;
+    char *const __s = static_cast<char*>(__builtin_alloca(__alloca_size));
+    va_list __ap;
+
+    va_start(__ap, __fmt);
+    __gnu_cxx::__snprintf_lite(__s, __alloca_size, __fmt, __ap);
+    _GLIBCXX_THROW_OR_ABORT(out_of_range(_(__s)));
+    va_end(__ap);  // Not reached.
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/compatibility-atomic-c++0x.cc.jj	2016-07-22 11:37:16.401402588 +0200
+++ libstdc++-v3/src/nonshared11/compatibility-atomic-c++0x.cc	2016-07-22 11:37:16.401402588 +0200
@@ -0,0 +1,42 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <atomic>
+
+extern "C"
+{
+  extern bool _ZNVSt9__atomic011atomic_flag5clearESt12memory_order (std::memory_order);
+
+  bool
+  _ZNSt9__atomic011atomic_flag5clearESt12memory_order (std::memory_order m)
+  {
+    return _ZNVSt9__atomic011atomic_flag5clearESt12memory_order (m);
+  }
+
+  extern void _ZNVSt9__atomic011atomic_flag12test_and_setESt12memory_order (std::memory_order);
+
+  void
+  _ZNSt9__atomic011atomic_flag12test_and_setESt12memory_order (std::memory_order m)
+  {
+    _ZNVSt9__atomic011atomic_flag12test_and_setESt12memory_order (m);
+  }
+}
--- libstdc++-v3/src/nonshared11/cow-wstring-inst.cc.jj	2016-07-22 11:37:16.401402588 +0200
+++ libstdc++-v3/src/nonshared11/cow-wstring-inst.cc	2016-07-22 11:37:16.401402588 +0200
@@ -0,0 +1,35 @@
+// wide string support -*- C++ -*-
+
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 21  Strings library
+//
+
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <bits/c++config.h>
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+#define C wchar_t
+#include "cow-string-inst.cc"
+#endif
--- libstdc++-v3/src/nonshared11/sstream-inst.cc.jj	2016-07-22 11:37:16.401402588 +0200
+++ libstdc++-v3/src/nonshared11/sstream-inst.cc	2016-07-22 11:37:16.401402588 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/sstream-inst.cc"
--- libstdc++-v3/src/nonshared11/istream-inst.cc.jj	2016-07-22 11:37:16.402402576 +0200
+++ libstdc++-v3/src/nonshared11/istream-inst.cc	2016-07-22 11:37:16.402402576 +0200
@@ -0,0 +1,46 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <istream>
+#include <iomanip>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template basic_istream<char>::basic_istream(basic_istream&&);
+  template basic_istream<char>& basic_istream<char>::operator=(basic_istream&&);
+  template void basic_istream<char>::swap(basic_istream&);
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template basic_istream<wchar_t>::basic_istream(basic_istream&&);
+  template basic_istream<wchar_t>& basic_istream<wchar_t>::operator=(basic_istream&&);
+  template void basic_istream<wchar_t>::swap(basic_istream&);
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/del_opvnt.cc.jj	2016-07-22 11:37:16.402402576 +0200
+++ libstdc++-v3/src/nonshared11/del_opvnt.cc	2016-07-22 11:37:16.402402576 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/del_opvnt.cc"
--- libstdc++-v3/src/nonshared11/cxx11-ios_failure.cc.jj	2016-07-22 11:37:16.402402576 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-ios_failure.cc	2016-07-22 11:37:16.402402576 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-ios_failure.cc"
--- libstdc++-v3/src/nonshared11/cow-stdexcept.cc.jj	2016-07-22 11:37:16.402402576 +0200
+++ libstdc++-v3/src/nonshared11/cow-stdexcept.cc	2016-07-22 11:54:30.872842678 +0200
@@ -0,0 +1,51 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cow-stdexcept.cc"
+asm (".hidden _ZNSt12__cow_stringC1EOS_");
+asm (".hidden _ZNSt12__cow_stringC1ERKS_");
+asm (".hidden _ZNSt12__cow_stringC1ERKSs");
+asm (".hidden _ZNSt12__cow_stringC1Ev");
+asm (".hidden _ZNSt12__cow_stringC2EOS_");
+asm (".hidden _ZNSt12__cow_stringC2ERKS_");
+asm (".hidden _ZNSt12__cow_stringC2ERKSs");
+asm (".hidden _ZNSt12__cow_stringC2Ev");
+asm (".hidden _ZNSt12__cow_stringD1Ev");
+asm (".hidden _ZNSt12__cow_stringD2Ev");
+asm (".hidden _ZNSt12__cow_stringaSEOS_");
+asm (".hidden _ZNSt12__cow_stringaSERKS_");
+asm (".hidden _ZNSt12__sso_stringC1ERKSs");
+asm (".hidden _ZNSt12__sso_stringC2ERKSs");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt12__cow_stringC1EPKcj");
+asm (".hidden _ZNSt12__cow_stringC2EPKcj");
+#else
+asm (".hidden _ZNSt12__cow_stringC1EPKcm");
+asm (".hidden _ZNSt12__cow_stringC2EPKcm");
+#endif
+asm (".hidden _Z20_txnal_cow_string_D1Pv");
+asm (".hidden _Z23_txnal_cow_string_c_strPKv");
+asm (".hidden _Z23_txnal_sso_string_c_strPKv");
+asm (".hidden _Z26_txnal_logic_error_get_msgPv");
+asm (".hidden _Z27_txnal_cow_string_D1_commitPv");
+asm (".hidden _Z28_txnal_runtime_error_get_msgPv");
+asm (".hidden _Z35_txnal_cow_string_C1_for_exceptionsPvPKcS_");
--- libstdc++-v3/src/nonshared11/chrono.cc.jj	2016-07-22 11:37:16.403402563 +0200
+++ libstdc++-v3/src/nonshared11/chrono.cc	2016-07-22 11:37:16.403402563 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/chrono.cc"
--- libstdc++-v3/src/nonshared11/functexcept.cc.jj	2016-07-22 11:37:16.403402563 +0200
+++ libstdc++-v3/src/nonshared11/functexcept.cc	2016-07-22 11:37:16.403402563 +0200
@@ -0,0 +1,85 @@
+// Copyright (C) 2001-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <bits/functexcept.h>
+#include <cstdlib>
+#include <exception>
+#include <stdexcept>
+#include <new>
+#include <typeinfo>
+#include <ios>
+#include <system_error>
+#include <future>
+#include <functional>
+#include <bits/regex_error.h>
+#include <stdarg.h>
+
+#ifdef _GLIBCXX_USE_NLS
+# include <libintl.h>
+# define _(msgid)   gettext (msgid)
+#else
+# define _(msgid)   (msgid)
+#endif
+
+namespace __gnu_cxx
+{
+  int __snprintf_lite(char *__buf, size_t __bufsize, const char *__fmt,
+		      va_list __ap);
+}
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  void
+  __throw_out_of_range_fmt(const char* __fmt, ...)
+  {
+    const size_t __len = __builtin_strlen(__fmt);
+    // We expect at most 2 numbers, and 1 short string. The additional
+    // 512 bytes should provide more than enough space for expansion.
+    const size_t __alloca_size = __len + 512;
+    char *const __s = static_cast<char*>(__builtin_alloca(__alloca_size));
+    va_list __ap;
+
+    va_start(__ap, __fmt);
+    __gnu_cxx::__snprintf_lite(__s, __alloca_size, __fmt, __ap);
+    _GLIBCXX_THROW_OR_ABORT(out_of_range(_(__s)));
+    va_end(__ap);  // Not reached.
+  }
+
+  void
+  __throw_future_error(int __i __attribute__((unused)))
+  { _GLIBCXX_THROW_OR_ABORT(future_error(make_error_code(future_errc(__i)))); }
+
+  void
+  __throw_bad_function_call()
+  { _GLIBCXX_THROW_OR_ABORT(bad_function_call()); }
+
+  void
+  __throw_regex_error(regex_constants::error_type __ecode
+		      __attribute__((unused)))
+  { _GLIBCXX_THROW_OR_ABORT(regex_error(__ecode)); }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
+asm (".hidden _ZNSt12future_errorC1ESt10error_code");
+asm (".hidden _ZNSt12future_errorC2ESt10error_code");
--- libstdc++-v3/src/nonshared11/cxx11-hash_tr1.cc.jj	2016-07-22 11:37:16.403402563 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-hash_tr1.cc	2016-07-22 11:37:16.403402563 +0200
@@ -0,0 +1,25 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-hash_tr1.cc"
+asm (".hidden _ZNKSt3tr14hashIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclES8_");
+asm (".hidden _ZNKSt3tr14hashIRKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEclES8_");
--- libstdc++-v3/src/nonshared11/cxx11-wlocale-inst.cc.jj	2016-07-22 11:37:16.403402563 +0200
+++ libstdc++-v3/src/nonshared11/cxx11-wlocale-inst.cc	2016-07-22 11:54:57.649518841 +0200
@@ -0,0 +1,48 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/cxx11-wlocale-inst.cc"
+asm (".hidden _ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale");
+asm (".hidden _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv");
+#if !defined (__powerpc__) && !defined (__s390__) && !defined (__s390x__)
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_");
+#else
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ItEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IxEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+asm (".hidden _ZNKSt17__gnu_cxx_ldbl1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IyEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_");
+#endif
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEC1ERKNSt7__cxx1112basic_stringIcS1_IcESaIcEEEj");
+asm (".hidden _ZNSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEC2ERKNSt7__cxx1112basic_stringIcS1_IcESaIcEEEj");
+#else
+asm (".hidden _ZNSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEC1ERKNSt7__cxx1112basic_stringIcS1_IcESaIcEEEm");
+asm (".hidden _ZNSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEC2ERKNSt7__cxx1112basic_stringIcS1_IcESaIcEEEm");
+#endif
+asm (".hidden _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_");
--- libstdc++-v3/src/nonshared11/system_error48.cc.jj	2016-07-22 11:37:16.404402551 +0200
+++ libstdc++-v3/src/nonshared11/system_error48.cc	2016-07-22 11:52:58.808956098 +0200
@@ -0,0 +1,46 @@
+// <system_error> implementation file
+
+// Copyright (C) 2007-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11
+#include "../c++11/system_error.cc"
+asm (".hidden _ZNSt12__sso_stringC1EOS_");
+asm (".hidden _ZNSt12__sso_stringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNSt12__sso_stringC1ERKS_");
+asm (".hidden _ZNSt12__sso_stringC1Ev");
+asm (".hidden _ZNSt12__sso_stringC2EOS_");
+asm (".hidden _ZNSt12__sso_stringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE");
+asm (".hidden _ZNSt12__sso_stringC2ERKS_");
+asm (".hidden _ZNSt12__sso_stringC2Ev");
+asm (".hidden _ZNSt12__sso_stringD1Ev");
+asm (".hidden _ZNSt12__sso_stringD2Ev");
+asm (".hidden _ZNSt12__sso_stringaSEOS_");
+asm (".hidden _ZNSt12__sso_stringaSERKS_");
+asm (".hidden _ZTSNSt3_V214error_categoryE");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZNSt12__sso_stringC1EPKcj");
+asm (".hidden _ZNSt12__sso_stringC2EPKcj");  
+#else
+asm (".hidden _ZNSt12__sso_stringC1EPKcm");
+asm (".hidden _ZNSt12__sso_stringC2EPKcm");
+#endif
--- libstdc++-v3/src/nonshared11/ext11-inst.cc.jj	2016-07-22 11:37:16.404402551 +0200
+++ libstdc++-v3/src/nonshared11/ext11-inst.cc	2016-07-22 11:37:16.404402551 +0200
@@ -0,0 +1,38 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <ext/stdio_filebuf.h>
+#include <ext/stdio_sync_filebuf.h>
+
+namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template stdio_sync_filebuf<char>::stdio_sync_filebuf(stdio_sync_filebuf&&) noexcept;
+  template stdio_sync_filebuf<char>& stdio_sync_filebuf<char>::operator=(stdio_sync_filebuf&&) noexcept;
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template stdio_sync_filebuf<wchar_t>::stdio_sync_filebuf(stdio_sync_filebuf&&) noexcept;
+  template stdio_sync_filebuf<wchar_t>& stdio_sync_filebuf<wchar_t>::operator=(stdio_sync_filebuf&&) noexcept;
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/locale-inst-asm.S.jj	2016-07-22 11:37:16.404402551 +0200
+++ libstdc++-v3/src/nonshared11/locale-inst-asm.S	2016-07-22 11:37:16.404402551 +0200
@@ -0,0 +1,291 @@
+/* Copyright (C) 2015-2016 Free Software Foundation, Inc.
+
+   This file is part of the GNU ISO C++ Library.  This library is free
+   software; you can redistribute it and/or modify it under the
+   terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   Under Section 7 of GPL version 3, you are granted additional
+   permissions described in the GCC Runtime Library Exception, version
+   3.1, as published by the Free Software Foundation.
+
+   You should have received a copy of the GNU General Public License and
+   a copy of the GCC Runtime Library Exception along with this program;
+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#ifdef __i386__
+#define ALIGN1	.align 4
+#elif defined __x86_64__
+#define ALIGN1	.align 32
+#define ALIGN2	.align 16
+#elif defined __ia64__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 8
+#define SECTION3(x).section .gnu.linkonce.s.x,"aws",@progbits
+#define POINTER	data8
+#define FLAGS data4
+#define PAD .skip 4
+#define STRING stringz
+#define VPTR(x) data16.ua @iplt(x)
+#define SIZE3	48
+#elif defined __powerpc64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#elif defined __powerpc__
+#define ALIGN1	.align 2
+#define ALIGN3	.align 2
+#define SECTION2(x).section .gnu.linkonce.s.x,"aw",@progbits
+#define SECTION3(x)SECTION2(x)
+#elif defined __aarch64__
+#define ALIGN1	.align 3
+#define ALIGN3	.align 3
+#define POINTER	.xword
+#define FLAGS	.word
+#define OBJECT	%object
+#elif defined __s390x__
+#define ALIGN1	.align 8
+#define ALIGN3	.align 2
+#elif defined __s390__
+#define ALIGN1	.align 4
+#define ALIGN3	.align 2
+#endif
+#if defined __x86_64__ || defined __powerpc64__ || defined __s390x__ || defined __ia64__ || defined __aarch64__
+#define SIZE1	32
+#define SIZE2	16
+#define OFF	16
+#ifndef POINTER
+#define POINTER	.quad
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD .zero 4
+#endif
+#else
+#define SIZE1	16
+#define SIZE2	8
+#define OFF	8
+#ifndef POINTER
+#define POINTER	.long
+#endif
+#ifndef FLAGS
+#define FLAGS .long
+#endif
+#ifndef PAD
+#define PAD
+#endif
+#endif
+#ifndef SYM
+#define SYM(x)x
+#endif
+#ifndef ALIGN2
+#define ALIGN2 ALIGN1
+#endif
+#ifndef ALIGN3
+#define ALIGN3
+#endif
+#ifndef OBJECT
+#define OBJECT @object
+#endif
+#ifndef SECTION1
+#define SECTION1(x).section .gnu.linkonce.d.rel.ro.x,"aw",@progbits
+#endif
+#ifndef SECTION2
+#define SECTION2(x)SECTION1(x)
+#endif
+#ifndef SECTION3
+#define SECTION3(x).section .gnu.linkonce.r.x,"a",@progbits
+#endif
+#ifndef STRING
+#define STRING .string
+#endif
+#ifndef SIZE3
+#define SIZE3 SIZE1
+#endif
+#ifndef VPTR
+#define VPTR(x) POINTER SYM(x)
+#endif
+
+	.weak	SYM(_ZTISt18__moneypunct_cacheIcLb0EE)
+	.hidden	SYM(_ZTISt18__moneypunct_cacheIcLb0EE)
+	SECTION1(_ZTISt18__moneypunct_cacheIcLb0EE)
+	ALIGN1
+	.type	SYM(_ZTISt18__moneypunct_cacheIcLb0EE), OBJECT
+	.size	SYM(_ZTISt18__moneypunct_cacheIcLb0EE), SIZE1+SIZE2
+_ZTISt18__moneypunct_cacheIcLb0EE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt18__moneypunct_cacheIcLb0EE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt18__moneypunct_cacheIcLb0EE)
+	.hidden	SYM(_ZTSSt18__moneypunct_cacheIcLb0EE)
+	SECTION3(_ZTSSt18__moneypunct_cacheIcLb0EE)
+	ALIGN3
+	.type	SYM(_ZTSSt18__moneypunct_cacheIcLb0EE), OBJECT
+	.size	SYM(_ZTSSt18__moneypunct_cacheIcLb0EE), 30
+_ZTSSt18__moneypunct_cacheIcLb0EE:
+	STRING	"St18__moneypunct_cacheIcLb0EE"
+	.weak	SYM(_ZTVSt18__moneypunct_cacheIcLb0EE)
+	.hidden	SYM(_ZTVSt18__moneypunct_cacheIcLb0EE)
+	SECTION1(_ZTVSt18__moneypunct_cacheIcLb0EE)
+	ALIGN1
+	.type	SYM(_ZTVSt18__moneypunct_cacheIcLb0EE), OBJECT
+	.size	SYM(_ZTVSt18__moneypunct_cacheIcLb0EE), SIZE3
+_ZTVSt18__moneypunct_cacheIcLb0EE:
+	POINTER	0
+	POINTER	SYM(_ZTISt18__moneypunct_cacheIcLb0EE)
+	VPTR(_ZNSt18__moneypunct_cacheIcLb0EED1Ev)
+	VPTR(_ZNSt18__moneypunct_cacheIcLb0EED0Ev)
+	.weak	SYM(_ZTISt18__moneypunct_cacheIcLb1EE)
+	.hidden	SYM(_ZTISt18__moneypunct_cacheIcLb1EE)
+	SECTION1(_ZTISt18__moneypunct_cacheIcLb1EE)
+	ALIGN1
+	.type	SYM(_ZTISt18__moneypunct_cacheIcLb1EE), OBJECT
+	.size	SYM(_ZTISt18__moneypunct_cacheIcLb1EE), SIZE1+SIZE2
+_ZTISt18__moneypunct_cacheIcLb1EE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt18__moneypunct_cacheIcLb1EE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt18__moneypunct_cacheIcLb1EE)
+	.hidden	SYM(_ZTSSt18__moneypunct_cacheIcLb1EE)
+	SECTION3(_ZTSSt18__moneypunct_cacheIcLb1EE)
+	ALIGN3
+	.type	SYM(_ZTSSt18__moneypunct_cacheIcLb1EE), OBJECT
+	.size	SYM(_ZTSSt18__moneypunct_cacheIcLb1EE), 30
+_ZTSSt18__moneypunct_cacheIcLb1EE:
+	STRING	"St18__moneypunct_cacheIcLb1EE"
+	.weak	SYM(_ZTVSt18__moneypunct_cacheIcLb1EE)
+	.hidden	SYM(_ZTVSt18__moneypunct_cacheIcLb1EE)
+	SECTION1(_ZTVSt18__moneypunct_cacheIcLb1EE)
+	ALIGN1
+	.type	SYM(_ZTVSt18__moneypunct_cacheIcLb1EE), OBJECT
+	.size	SYM(_ZTVSt18__moneypunct_cacheIcLb1EE), SIZE3
+_ZTVSt18__moneypunct_cacheIcLb1EE:
+	POINTER	0
+	POINTER	SYM(_ZTISt18__moneypunct_cacheIcLb1EE)
+	VPTR(_ZNSt18__moneypunct_cacheIcLb1EED1Ev)
+	VPTR(_ZNSt18__moneypunct_cacheIcLb1EED0Ev)
+	.weak	SYM(_ZTISt18__moneypunct_cacheIwLb0EE)
+	.hidden	SYM(_ZTISt18__moneypunct_cacheIwLb0EE)
+	SECTION1(_ZTISt18__moneypunct_cacheIwLb0EE)
+	ALIGN1
+	.type	SYM(_ZTISt18__moneypunct_cacheIwLb0EE), OBJECT
+	.size	SYM(_ZTISt18__moneypunct_cacheIwLb0EE), SIZE1+SIZE2
+_ZTISt18__moneypunct_cacheIwLb0EE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt18__moneypunct_cacheIwLb0EE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt18__moneypunct_cacheIwLb0EE)
+	.hidden	SYM(_ZTSSt18__moneypunct_cacheIwLb0EE)
+	SECTION3(_ZTSSt18__moneypunct_cacheIwLb0EE)
+	ALIGN3
+	.type	SYM(_ZTSSt18__moneypunct_cacheIwLb0EE), OBJECT
+	.size	SYM(_ZTSSt18__moneypunct_cacheIwLb0EE), 30
+_ZTSSt18__moneypunct_cacheIwLb0EE:
+	STRING	"St18__moneypunct_cacheIwLb0EE"
+	.weak	SYM(_ZTVSt18__moneypunct_cacheIwLb0EE)
+	.hidden	SYM(_ZTVSt18__moneypunct_cacheIwLb0EE)
+	SECTION1(_ZTVSt18__moneypunct_cacheIwLb0EE)
+	ALIGN1
+	.type	SYM(_ZTVSt18__moneypunct_cacheIwLb0EE), OBJECT
+	.size	SYM(_ZTVSt18__moneypunct_cacheIwLb0EE), SIZE3
+_ZTVSt18__moneypunct_cacheIwLb0EE:
+	POINTER	0
+	POINTER	SYM(_ZTISt18__moneypunct_cacheIwLb0EE)
+	VPTR(_ZNSt18__moneypunct_cacheIwLb0EED1Ev)
+	VPTR(_ZNSt18__moneypunct_cacheIwLb0EED0Ev)
+	.weak	SYM(_ZTISt18__moneypunct_cacheIwLb1EE)
+	.hidden	SYM(_ZTISt18__moneypunct_cacheIwLb1EE)
+	SECTION1(_ZTISt18__moneypunct_cacheIwLb1EE)
+	ALIGN1
+	.type	SYM(_ZTISt18__moneypunct_cacheIwLb1EE), OBJECT
+	.size	SYM(_ZTISt18__moneypunct_cacheIwLb1EE), SIZE1+SIZE2
+_ZTISt18__moneypunct_cacheIwLb1EE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt18__moneypunct_cacheIwLb1EE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt18__moneypunct_cacheIwLb1EE)
+	.hidden	SYM(_ZTSSt18__moneypunct_cacheIwLb1EE)
+	SECTION3(_ZTSSt18__moneypunct_cacheIwLb1EE)
+	ALIGN3
+	.type	SYM(_ZTSSt18__moneypunct_cacheIwLb1EE), OBJECT
+	.size	SYM(_ZTSSt18__moneypunct_cacheIwLb1EE), 30
+_ZTSSt18__moneypunct_cacheIwLb1EE:
+	STRING	"St18__moneypunct_cacheIwLb1EE"
+	.weak	SYM(_ZTVSt18__moneypunct_cacheIwLb1EE)
+	.hidden	SYM(_ZTVSt18__moneypunct_cacheIwLb1EE)
+	SECTION1(_ZTVSt18__moneypunct_cacheIwLb1EE)
+	ALIGN1
+	.type	SYM(_ZTVSt18__moneypunct_cacheIwLb1EE), OBJECT
+	.size	SYM(_ZTVSt18__moneypunct_cacheIwLb1EE), SIZE3
+_ZTVSt18__moneypunct_cacheIwLb1EE:
+	POINTER	0
+	POINTER	SYM(_ZTISt18__moneypunct_cacheIwLb1EE)
+	VPTR(_ZNSt18__moneypunct_cacheIwLb1EED1Ev)
+	VPTR(_ZNSt18__moneypunct_cacheIwLb1EED0Ev)
+	.weak	SYM(_ZTISt16__numpunct_cacheIcE)
+	.hidden	SYM(_ZTISt16__numpunct_cacheIcE)
+	SECTION1(_ZTISt16__numpunct_cacheIcE)
+	ALIGN1
+	.type	SYM(_ZTISt16__numpunct_cacheIcE), OBJECT
+	.size	SYM(_ZTISt16__numpunct_cacheIcE), SIZE1+SIZE2
+_ZTISt16__numpunct_cacheIcE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt16__numpunct_cacheIcE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt16__numpunct_cacheIcE)
+	.hidden	SYM(_ZTSSt16__numpunct_cacheIcE)
+	SECTION3(_ZTSSt16__numpunct_cacheIcE)
+	ALIGN3
+	.type	SYM(_ZTSSt16__numpunct_cacheIcE), OBJECT
+	.size	SYM(_ZTSSt16__numpunct_cacheIcE), 24
+_ZTSSt16__numpunct_cacheIcE:
+	STRING	"St16__numpunct_cacheIcE"
+	.weak	SYM(_ZTVSt16__numpunct_cacheIcE)
+	.hidden	SYM(_ZTVSt16__numpunct_cacheIcE)
+	SECTION1(_ZTVSt16__numpunct_cacheIcE)
+	ALIGN1
+	.type	SYM(_ZTVSt16__numpunct_cacheIcE), OBJECT
+	.size	SYM(_ZTVSt16__numpunct_cacheIcE), SIZE3
+_ZTVSt16__numpunct_cacheIcE:
+	POINTER	0
+	POINTER	SYM(_ZTISt16__numpunct_cacheIcE)
+	VPTR(_ZNSt16__numpunct_cacheIcED1Ev)
+	VPTR(_ZNSt16__numpunct_cacheIcED0Ev)
+	.weak	SYM(_ZTISt16__numpunct_cacheIwE)
+	.hidden	SYM(_ZTISt16__numpunct_cacheIwE)
+	SECTION1(_ZTISt16__numpunct_cacheIwE)
+	ALIGN1
+	.type	SYM(_ZTISt16__numpunct_cacheIwE), OBJECT
+	.size	SYM(_ZTISt16__numpunct_cacheIwE), SIZE1+SIZE2
+_ZTISt16__numpunct_cacheIwE:
+	POINTER	SYM(_ZTVN10__cxxabiv120__si_class_type_infoE)+OFF
+	POINTER	SYM(_ZTSSt16__numpunct_cacheIwE)
+	POINTER SYM(_ZTINSt6locale5facetE)
+	.weak	SYM(_ZTSSt16__numpunct_cacheIwE)
+	.hidden	SYM(_ZTSSt16__numpunct_cacheIwE)
+	SECTION3(_ZTSSt16__numpunct_cacheIwE)
+	ALIGN3
+	.type	SYM(_ZTSSt16__numpunct_cacheIwE), OBJECT
+	.size	SYM(_ZTSSt16__numpunct_cacheIwE), 24
+_ZTSSt16__numpunct_cacheIwE:
+	STRING	"St16__numpunct_cacheIwE"
+	.weak	SYM(_ZTVSt16__numpunct_cacheIwE)
+	.hidden	SYM(_ZTVSt16__numpunct_cacheIwE)
+	SECTION1(_ZTVSt16__numpunct_cacheIwE)
+	ALIGN1
+	.type	SYM(_ZTVSt16__numpunct_cacheIwE), OBJECT
+	.size	SYM(_ZTVSt16__numpunct_cacheIwE), SIZE3
+_ZTVSt16__numpunct_cacheIwE:
+	POINTER	0
+	POINTER	SYM(_ZTISt16__numpunct_cacheIwE)
+	VPTR(_ZNSt16__numpunct_cacheIwED1Ev)
+	VPTR(_ZNSt16__numpunct_cacheIwED0Ev)
+	.section	.note.GNU-stack,"",@progbits
--- libstdc++-v3/src/nonshared11/del_opvs.cc.jj	2016-07-22 11:37:16.404402551 +0200
+++ libstdc++-v3/src/nonshared11/del_opvs.cc	2016-07-22 11:37:16.404402551 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/del_opvs.cc"
--- libstdc++-v3/src/nonshared11/cow-sstream-inst.cc.jj	2016-07-22 11:37:16.405402538 +0200
+++ libstdc++-v3/src/nonshared11/cow-sstream-inst.cc	2016-07-22 11:37:16.405402538 +0200
@@ -0,0 +1,78 @@
+// Explicit instantiation file.
+
+// Copyright (C) 2014-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <sstream>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template basic_stringbuf<char>::basic_stringbuf(basic_stringbuf&&);
+  template basic_stringbuf<char>& basic_stringbuf<char>::operator=(basic_stringbuf&&);
+  template void basic_stringbuf<char>::swap(basic_stringbuf&);
+  template basic_istringstream<char>::basic_istringstream(basic_istringstream&&);
+  template basic_istringstream<char>& basic_istringstream<char>::operator=(basic_istringstream&&);
+  template void basic_istringstream<char>::swap(basic_istringstream&);
+  template basic_ostringstream<char>::basic_ostringstream(basic_ostringstream&&);
+  template basic_ostringstream<char>& basic_ostringstream<char>::operator=(basic_ostringstream&&);
+  template void basic_ostringstream<char>::swap(basic_ostringstream&);
+  template basic_stringstream<char>::basic_stringstream(basic_stringstream&&);
+  template basic_stringstream<char>& basic_stringstream<char>::operator=(basic_stringstream&&);
+  template void basic_stringstream<char>::swap(basic_stringstream&);
+#ifdef _GLIBCXX_NONSHARED_CXX11_44
+  template void basic_stringbuf<char>::_M_pbump(char_type*, char_type*, off_type);
+#endif
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template basic_stringbuf<wchar_t>::basic_stringbuf(basic_stringbuf&&);
+  template basic_stringbuf<wchar_t>& basic_stringbuf<wchar_t>::operator=(basic_stringbuf&&);
+  template void basic_stringbuf<wchar_t>::swap(basic_stringbuf&);
+  template basic_istringstream<wchar_t>::basic_istringstream(basic_istringstream&&);
+  template basic_istringstream<wchar_t>& basic_istringstream<wchar_t>::operator=(basic_istringstream&&);
+  template void basic_istringstream<wchar_t>::swap(basic_istringstream&);
+  template basic_ostringstream<wchar_t>::basic_ostringstream(basic_ostringstream&&);
+  template basic_ostringstream<wchar_t>& basic_ostringstream<wchar_t>::operator=(basic_ostringstream&&);
+  template void basic_ostringstream<wchar_t>::swap(basic_ostringstream&);
+  template basic_stringstream<wchar_t>::basic_stringstream(basic_stringstream&&);
+  template basic_stringstream<wchar_t>& basic_stringstream<wchar_t>::operator=(basic_stringstream&&);
+  template void basic_stringstream<wchar_t>::swap(basic_stringstream&);
+#ifdef _GLIBCXX_NONSHARED_CXX11_44
+  template void basic_stringbuf<wchar_t>::_M_pbump(char_type*, char_type*, off_type);
+#endif
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
+
+asm (".hidden _ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED0Ev");
+asm (".hidden _ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev");
+asm (".hidden _ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED2Ev");
+asm (".hidden _ZNSt15basic_stringbufIwSt11char_traitsIwESaIwEED0Ev");
+asm (".hidden _ZNSt15basic_stringbufIwSt11char_traitsIwESaIwEED1Ev");
+asm (".hidden _ZNSt15basic_stringbufIwSt11char_traitsIwESaIwEED2Ev");
--- libstdc++-v3/src/nonshared11/new_handler.cc.jj	2016-07-22 11:37:16.405402538 +0200
+++ libstdc++-v3/src/nonshared11/new_handler.cc	2016-07-22 11:37:16.405402538 +0200
@@ -0,0 +1,72 @@
+// Implementation file for the -*- C++ -*- dynamic memory management header.
+
+// Copyright (C) 1996-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <new>
+#include <ext/concurrence.h>
+
+// This is inherently thread-unsafe, but so is libstdc++ < 4.9
+// std::set_new_handler and this hopefully doesn't make things much worse
+// than that.
+namespace
+{
+  __gnu_cxx::__mutex mx;
+  std::new_handler handler;
+
+  void new_handler_wrapper ()
+  {
+    std::new_handler h;
+    {
+      __gnu_cxx::__scoped_lock l(mx);
+      h = handler;
+    }
+    h ();
+  }
+}
+
+std::new_handler
+std::get_new_handler () noexcept
+{
+  __gnu_cxx::__scoped_lock l(mx);
+  handler = std::set_new_handler (new_handler_wrapper);
+  std::set_new_handler (handler);
+  return handler;
+}
+
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
--- libstdc++-v3/src/nonshared11/codecvt.cc.jj	2016-07-22 11:37:16.405402538 +0200
+++ libstdc++-v3/src/nonshared11/codecvt.cc	2016-07-22 11:37:16.405402538 +0200
@@ -0,0 +1,31 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/codecvt.cc"
+asm (".hidden _ZTISt12codecvt_base");
+asm (".hidden _ZTSSt12codecvt_base");
+asm (".hidden _ZTISt23__codecvt_abstract_baseIDic11__mbstate_tE");
+asm (".hidden _ZTISt23__codecvt_abstract_baseIDsc11__mbstate_tE");
+asm (".hidden _ZTSSt23__codecvt_abstract_baseIDic11__mbstate_tE");
+asm (".hidden _ZTSSt23__codecvt_abstract_baseIDsc11__mbstate_tE");
+asm (".hidden _ZTVSt23__codecvt_abstract_baseIDic11__mbstate_tE");
+asm (".hidden _ZTVSt23__codecvt_abstract_baseIDsc11__mbstate_tE");
--- libstdc++-v3/src/nonshared11/regex48.cc.jj	2016-07-22 11:37:16.405402538 +0200
+++ libstdc++-v3/src/nonshared11/regex48.cc	2016-07-22 11:37:16.405402538 +0200
@@ -0,0 +1,30 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/regex.cc"
+
+asm (".hidden _ZNSt11regex_errorD0Ev");
+asm (".hidden _ZNSt11regex_errorD1Ev");
+asm (".hidden _ZNSt11regex_errorD2Ev");
+asm (".hidden _ZTSSt11regex_error");
+asm (".hidden _ZTISt11regex_error");
+asm (".hidden _ZTVSt11regex_error");
--- libstdc++-v3/src/nonshared11/eh_terminate.cc.jj	2016-07-22 11:37:16.406402526 +0200
+++ libstdc++-v3/src/nonshared11/eh_terminate.cc	2016-07-22 11:37:16.406402526 +0200
@@ -0,0 +1,92 @@
+// Implementation file for the -*- C++ -*- dynamic memory management header.
+
+// Copyright (C) 1994-2016 Free Software Foundation, Inc.
+//
+// This file is part of GCC.
+//
+// GCC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// GCC is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <exception>
+#include <ext/concurrence.h>
+
+// This is inherently thread-unsafe, but so is libstdc++ < 4.9
+// std::set_terminate and std::set_unexpected and this hopefully
+// doesn't make things much worse than that.
+namespace
+{
+  __gnu_cxx::__mutex mx;
+  std::terminate_handler thandler;
+  std::unexpected_handler uhandler;
+
+  void terminate_handler_wrapper ()
+  {
+    std::terminate_handler h;
+    {
+      __gnu_cxx::__scoped_lock l(mx);
+      h = thandler;
+    }
+    h ();
+  }
+
+  void unexpected_handler_wrapper ()
+  {
+    std::terminate_handler h;
+    {
+      __gnu_cxx::__scoped_lock l(mx);
+      h = uhandler;
+    }
+    h ();
+  }
+}
+
+std::terminate_handler
+std::get_terminate () noexcept
+{
+  __gnu_cxx::__scoped_lock l(mx);
+  thandler = std::set_terminate (terminate_handler_wrapper);
+  std::set_terminate (thandler);
+  return thandler;
+}
+
+std::unexpected_handler
+std::get_unexpected () noexcept
+{
+  __gnu_cxx::__scoped_lock l(mx);
+  uhandler = std::set_unexpected (unexpected_handler_wrapper);
+  std::set_unexpected (uhandler);
+  return uhandler;
+}
+
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx24__concurrence_lock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev");
+asm (".hidden _ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev");
+asm (".hidden _ZN9__gnu_cxx30__throw_concurrence_lock_errorEv");
+asm (".hidden _ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv");
+asm (".hidden _ZNK9__gnu_cxx24__concurrence_lock_error4whatEv");
+asm (".hidden _ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv");
+asm (".hidden _ZTIN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTIN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTSN9__gnu_cxx26__concurrence_unlock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx24__concurrence_lock_errorE");
+asm (".hidden _ZTVN9__gnu_cxx26__concurrence_unlock_errorE");
--- libstdc++-v3/src/nonshared11/snprintf_lite.cc.jj	2016-07-22 11:37:16.406402526 +0200
+++ libstdc++-v3/src/nonshared11/snprintf_lite.cc	2016-07-22 11:42:07.802829363 +0200
@@ -0,0 +1,40 @@
+// Copyright (C) 2014-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/snprintf_lite.cc"
+#ifdef __powerpc64__
+asm (".hidden _ZN9__gnu_cxx15__concat_size_tEPcmm");
+asm (".hidden _ZN9__gnu_cxx15__snprintf_liteEPcmPKcS0_");
+#elif defined(__i386__)
+asm (".hidden _ZN9__gnu_cxx15__concat_size_tEPcjj");
+asm (".hidden _ZN9__gnu_cxx15__snprintf_liteEPcjPKcS0_");
+#elif defined(__powerpc__)
+asm (".hidden _ZN9__gnu_cxx15__concat_size_tEPcjj");
+asm (".hidden _ZN9__gnu_cxx15__snprintf_liteEPcjPKcP13__va_list_tag");
+#elif defined(__aarch64__)
+asm (".hidden _ZN9__gnu_cxx15__concat_size_tEPcmm");
+asm (".hidden _ZN9__gnu_cxx15__snprintf_liteEPcmPKcSt9__va_list");
+#else
+asm (".hidden _ZN9__gnu_cxx15__concat_size_tEPcmm");
+asm (".hidden _ZN9__gnu_cxx15__snprintf_liteEPcmPKcP13__va_list_tag");
+#endif
+asm (".hidden _ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_");
--- libstdc++-v3/src/nonshared11/string-inst.cc.jj	2016-07-22 11:37:16.406402526 +0200
+++ libstdc++-v3/src/nonshared11/string-inst.cc	2016-07-22 11:37:16.406402526 +0200
@@ -0,0 +1,34 @@
+// Components for manipulating sequences of characters -*- C++ -*-
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 21  Strings library
+//
+
+// Written by Jason Merrill based upon the specification by Takanori Adachi
+// in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers.
+
+#include "../c++11/string-inst.cc"
+asm (".hidden _ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_");
+asm (".hidden _ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_");
--- libstdc++-v3/src/nonshared11/Makefile.am.jj	2016-07-22 11:37:16.407402513 +0200
+++ libstdc++-v3/src/nonshared11/Makefile.am	2016-07-22 11:37:16.407402513 +0200
@@ -0,0 +1,179 @@
+## Makefile for the C++03 sources of the GNU C++ Standard library.
+##
+## Copyright (C) 1997-2016 Free Software Foundation, Inc.
+##
+## This file is part of the libstdc++ version 3 distribution.
+## Process this file with automake to produce Makefile.in.
+
+## This file is part of the GNU ISO C++ Library.  This library is free
+## software; you can redistribute it and/or modify it under the
+## terms of the GNU General Public License as published by the
+## Free Software Foundation; either version 3, or (at your option)
+## any later version.
+
+## This library is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+
+## You should have received a copy of the GNU General Public License along
+## with this library; see the file COPYING3.  If not see
+## <http://www.gnu.org/licenses/>.
+
+include $(top_srcdir)/fragment.am
+
+# Convenience library for C++11 runtime.
+noinst_LTLIBRARIES = libnonshared11convenience44.la \
+		     libnonshared11convenience48.la
+
+headers =
+
+sources = \
+	bad_array_length.cc \
+	bad_array_new.cc \
+	codecvt.cc \
+	condition_variable.cc \
+	cow-shim_facets.cc \
+	cow-stdexcept.cc \
+	ctype.cc \
+	cxx11-hash_tr1.cc \
+	cxx11-ios_failure.cc \
+	cxx11-shim_facets.cc \
+	cxx11-stdexcept.cc \
+	del_ops.cc \
+	del_opvs.cc \
+	eh_aux_runtime.cc \
+	eh_terminate.cc \
+	futex.cc \
+	ios.cc \
+	new_handler.cc \
+	snprintf_lite.cc \
+	$(inst_sources)
+
+sources44 = \
+	limits.cc \
+	future.cc \
+	functexcept.cc \
+	placeholders.cc \
+	regex.cc \
+	functional.cc \
+	shared_ptr44.cc \
+	nested_exception.cc \
+	debug.cc \
+	compatibility-thread-c++0x.cc \
+	atexit_thread.cc \
+	random.cc \
+	chrono.cc \
+	compatibility-atomic-c++0x.cc \
+	compatibility-c++0x.cc \
+	hashtable_c++0x.cc \
+	system_error44.cc \
+	thread44.cc \
+	$(inst_sources44)
+
+sources48 = \
+	functexcept48.cc \
+	future48.cc \
+	random48.cc \
+	regex48.cc \
+	shared_ptr48.cc \
+	system_error48.cc \
+	thread48.cc \
+	$(inst_sources48)
+
+if ENABLE_EXTERN_TEMPLATE
+# XTEMPLATE_FLAGS = -fno-implicit-templates
+inst_sources = \
+	cxx11-locale-inst.cc \
+	cxx11-wlocale-inst.cc \
+	ext11-inst.cc \
+	fstream-inst.cc \
+	ios-inst.cc \
+	iostream-inst.cc \
+	istream-inst.cc \
+	locale-inst-asm.S \
+	ostream-inst.cc \
+	sstream-inst.cc \
+	streambuf-inst.cc \
+	string-inst.cc \
+	wstring-inst.cc
+inst_sources44 = \
+	cow-sstream-inst44.cc \
+	cow-string-inst.cc \
+	cow-wstring-inst.cc \
+	cow-fstream-inst.cc \
+	locale-inst44.cc \
+	wlocale-inst44.cc
+inst_sources48 = \
+	cow-sstream-inst.cc \
+	locale-inst.cc \
+	wlocale-inst.cc
+else
+# XTEMPLATE_FLAGS =
+inst_sources =
+inst_sources44 =
+inst_sources48 =
+endif
+
+vpath % $(top_srcdir)/src/nonshared11
+vpath % $(top_srcdir)
+
+libnonshared11convenience44_la_SOURCES = $(sources) $(sources44)
+libnonshared11convenience48_la_SOURCES = $(sources) $(sources48)
+
+# AM_CXXFLAGS needs to be in each subdirectory so that it can be
+# modified in a per-library or per-sub-library way.  Need to manually
+# set this option because CONFIG_CXXFLAGS has to be after
+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden
+# as the occasion calls for it.
+AM_CXXFLAGS = \
+	-std=gnu++11 \
+	$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \
+	$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \
+	$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)
+
+AM_MAKEFLAGS = \
+	"gxx_include_dir=$(gxx_include_dir)"
+
+# Libtool notes
+
+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is
+# last. (That way, things like -O2 passed down from the toplevel can
+# be overridden by --enable-debug.)
+
+# 2) In general, libtool expects an argument such as `--tag=CXX' when
+# using the C++ compiler, because that will enable the settings
+# detected when C++ support was being configured.  However, when no
+# such flag is given in the command line, libtool attempts to figure
+# it out by matching the compiler name in each configuration section
+# against a prefix of the command line.  The problem is that, if the
+# compiler name and its initial flags stored in the libtool
+# configuration file don't match those in the command line, libtool
+# can't decide which configuration to use, and it gives up.  The
+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe
+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to
+# attempt to infer which configuration to use.
+# We have to put --tag disable-shared after --tag CXX lest things
+# CXX undo the affect of disable-shared.
+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
+	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(EXTRA_CXX_FLAGS)
+
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+
+# 3) We'd have a problem when building the shared libstdc++ object if
+# the rules automake generates would be used.  We cannot allow g++ to
+# be used since this would add -lstdc++ to the link line which of
+# course is problematic at this point.  So, we get the top-level
+# directory to configure libstdc++-v3 to use gcc as the C++
+# compilation driver.
+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	  --mode=link $(CXX) \
+	  $(VTV_CXXLINKFLAGS) \
+	  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@
+
+# Use special rules for the C++14 sources so that the proper flags are passed.
+del_ops.lo: del_ops.cc
+	$(LTCXXCOMPILE) -std=gnu++14 -Wno-sized-deallocation -c $<
+del_opvs.lo: del_opvs.cc
+	$(LTCXXCOMPILE) -std=gnu++14 -Wno-sized-deallocation -c $<
--- libstdc++-v3/src/nonshared11/Makefile.in.jj	2016-07-22 11:37:16.407402513 +0200
+++ libstdc++-v3/src/nonshared11/Makefile.in	2016-07-22 11:37:16.407402513 +0200
@@ -0,0 +1,788 @@
+# Makefile.in generated by automake 1.11.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
+# Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+am__make_dryrun = \
+  { \
+    am__dry=no; \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
+          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
+      *) \
+        for am__flg in $$MAKEFLAGS; do \
+          case $$am__flg in \
+            *=*|--*) ;; \
+            *n*) am__dry=yes; break;; \
+          esac; \
+        done;; \
+    esac; \
+    test $$am__dry = yes; \
+  }
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+DIST_COMMON = $(top_srcdir)/fragment.am $(srcdir)/Makefile.in \
+	$(srcdir)/Makefile.am
+subdir = src/nonshared11
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \
+	$(top_srcdir)/../config/enable.m4 \
+	$(top_srcdir)/../config/futex.m4 \
+	$(top_srcdir)/../config/iconv.m4 \
+	$(top_srcdir)/../config/lead-dot.m4 \
+	$(top_srcdir)/../config/lib-ld.m4 \
+	$(top_srcdir)/../config/lib-link.m4 \
+	$(top_srcdir)/../config/lib-prefix.m4 \
+	$(top_srcdir)/../config/lthostflags.m4 \
+	$(top_srcdir)/../config/multi.m4 \
+	$(top_srcdir)/../config/no-executables.m4 \
+	$(top_srcdir)/../config/override.m4 \
+	$(top_srcdir)/../config/stdint.m4 \
+	$(top_srcdir)/../config/unwind_ipinfo.m4 \
+	$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \
+	$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \
+	$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \
+	$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \
+	$(top_srcdir)/../config/gc++filt.m4 \
+	$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../config/gthr.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+LTLIBRARIES = $(noinst_LTLIBRARIES)
+libnonshared11convenience44_la_LIBADD =
+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_1 = cxx11-locale-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cxx11-wlocale-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ext11-inst.lo fstream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ios-inst.lo iostream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	istream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst-asm.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ostream-inst.lo sstream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	streambuf-inst.lo string-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wstring-inst.lo
+am__objects_2 = bad_array_length.lo bad_array_new.lo codecvt.lo \
+	condition_variable.lo cow-shim_facets.lo cow-stdexcept.lo \
+	ctype.lo cxx11-hash_tr1.lo cxx11-ios_failure.lo \
+	cxx11-shim_facets.lo cxx11-stdexcept.lo del_ops.lo del_opvs.lo \
+	eh_aux_runtime.lo eh_terminate.lo futex.lo ios.lo \
+	new_handler.lo snprintf_lite.lo $(am__objects_1)
+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_3 = cow-sstream-inst44.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-string-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-wstring-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-fstream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst44.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wlocale-inst44.lo
+am__objects_4 = limits.lo future.lo functexcept.lo placeholders.lo \
+	regex.lo functional.lo shared_ptr44.lo nested_exception.lo \
+	debug.lo compatibility-thread-c++0x.lo atexit_thread.lo \
+	random.lo chrono.lo compatibility-atomic-c++0x.lo \
+	compatibility-c++0x.lo hashtable_c++0x.lo system_error44.lo \
+	thread44.lo $(am__objects_3)
+am_libnonshared11convenience44_la_OBJECTS = $(am__objects_2) \
+	$(am__objects_4)
+libnonshared11convenience44_la_OBJECTS =  \
+	$(am_libnonshared11convenience44_la_OBJECTS)
+libnonshared11convenience48_la_LIBADD =
+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_5 = cow-sstream-inst.lo \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst.lo wlocale-inst.lo
+am__objects_6 = functexcept48.lo future48.lo random48.lo regex48.lo \
+	shared_ptr48.lo system_error48.lo thread48.lo $(am__objects_5)
+am_libnonshared11convenience48_la_OBJECTS = $(am__objects_2) \
+	$(am__objects_6)
+libnonshared11convenience48_la_OBJECTS =  \
+	$(am_libnonshared11convenience48_la_OBJECTS)
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp =
+am__depfiles_maybe =
+CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
+LTCPPASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libnonshared11convenience44_la_SOURCES) \
+	$(libnonshared11convenience48_la_SOURCES)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+ETAGS = etags
+CTAGS = ctags
+ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@
+ACLOCAL = @ACLOCAL@
+ALLOCATOR_H = @ALLOCATOR_H@
+ALLOCATOR_NAME = @ALLOCATOR_NAME@
+AMTAR = @AMTAR@
+AR = @AR@
+AS = @AS@
+ATOMICITY_SRCDIR = @ATOMICITY_SRCDIR@
+ATOMIC_FLAGS = @ATOMIC_FLAGS@
+ATOMIC_WORD_SRCDIR = @ATOMIC_WORD_SRCDIR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BASIC_FILE_CC = @BASIC_FILE_CC@
+BASIC_FILE_H = @BASIC_FILE_H@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCODECVT_CC = @CCODECVT_CC@
+CCOLLATE_CC = @CCOLLATE_CC@
+CCTYPE_CC = @CCTYPE_CC@
+CFLAGS = @CFLAGS@
+CLOCALE_CC = @CLOCALE_CC@
+CLOCALE_H = @CLOCALE_H@
+CLOCALE_INTERNAL_H = @CLOCALE_INTERNAL_H@
+CMESSAGES_CC = @CMESSAGES_CC@
+CMESSAGES_H = @CMESSAGES_H@
+CMONEY_CC = @CMONEY_CC@
+CNUMERIC_CC = @CNUMERIC_CC@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@
+CPU_OPT_BITS_RANDOM = @CPU_OPT_BITS_RANDOM@
+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@
+CSTDIO_H = @CSTDIO_H@
+CTIME_CC = @CTIME_CC@
+CTIME_H = @CTIME_H@
+CXX = @CXX@
+CXXCPP = @CXXCPP@
+CXXFILT = @CXXFILT@
+CXXFLAGS = @CXXFLAGS@
+CYGPATH_W = @CYGPATH_W@
+C_INCLUDE_DIR = @C_INCLUDE_DIR@
+DBLATEX = @DBLATEX@
+DEBUG_FLAGS = @DEBUG_FLAGS@
+DEFS = @DEFS@
+DOT = @DOT@
+DOXYGEN = @DOXYGEN@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@
+EXEEXT = @EXEEXT@
+EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@
+FGREP = @FGREP@
+GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@
+GLIBCXX_LIBS = @GLIBCXX_LIBS@
+GREP = @GREP@
+HWCAP_FLAGS = @HWCAP_FLAGS@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBICONV = @LIBICONV@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBICONV = @LTLIBICONV@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@
+OPT_LDFLAGS = @OPT_LDFLAGS@
+OS_INC_SRCDIR = @OS_INC_SRCDIR@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PDFLATEX = @PDFLATEX@
+RANLIB = @RANLIB@
+SECTION_FLAGS = @SECTION_FLAGS@
+SECTION_LDFLAGS = @SECTION_LDFLAGS@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+SYMVER_FILE = @SYMVER_FILE@
+TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@
+USE_NLS = @USE_NLS@
+VERSION = @VERSION@
+VTV_CXXFLAGS = @VTV_CXXFLAGS@
+VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@
+VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@
+WARN_FLAGS = @WARN_FLAGS@
+WERROR = @WERROR@
+XMLLINT = @XMLLINT@
+XSLTPROC = @XSLTPROC@
+XSL_STYLE_DIR = @XSL_STYLE_DIR@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_CXX = @ac_ct_CXX@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__leading_dot = @am__leading_dot@
+am__tar = @am__tar@
+am__untar = @am__untar@
+baseline_dir = @baseline_dir@
+baseline_subdir_switch = @baseline_subdir_switch@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+check_msgfmt = @check_msgfmt@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+enable_shared = @enable_shared@
+enable_static = @enable_static@
+exec_prefix = @exec_prefix@
+glibcxx_MOFILES = @glibcxx_MOFILES@
+glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@
+glibcxx_POFILES = @glibcxx_POFILES@
+glibcxx_builddir = @glibcxx_builddir@
+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@
+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@
+glibcxx_cxx98_abi = @glibcxx_cxx98_abi@
+glibcxx_localedir = @glibcxx_localedir@
+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@
+glibcxx_prefixdir = @glibcxx_prefixdir@
+glibcxx_srcdir = @glibcxx_srcdir@
+glibcxx_toolexecdir = @glibcxx_toolexecdir@
+glibcxx_toolexeclibdir = @glibcxx_toolexeclibdir@
+gxx_include_dir = @gxx_include_dir@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+libtool_VERSION = @libtool_VERSION@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_host_flags = @lt_host_flags@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+multi_basedir = @multi_basedir@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+port_specific_symbol_files = @port_specific_symbol_files@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+python_mod_dir = @python_mod_dir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+thread_header = @thread_header@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+toplevel_builddir = @toplevel_builddir@
+toplevel_srcdir = @toplevel_srcdir@
+
+# May be used by various substitution variables.
+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)
+MAINT_CHARSET = latin1
+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs
+PWD_COMMAND = $${PWDCMD-pwd}
+STAMP = echo timestamp >
+toolexecdir = $(glibcxx_toolexecdir)
+toolexeclibdir = $(glibcxx_toolexeclibdir)
+@ENABLE_WERROR_FALSE@WERROR_FLAG = 
+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)
+@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = 
+@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates
+
+# These bits are all figured out from configure.  Look in acinclude.m4
+# or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.
+CONFIG_CXXFLAGS = \
+	$(SECTION_FLAGS) $(HWCAP_FLAGS) -frandom-seed=$@
+
+WARN_CXXFLAGS = \
+	$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once 
+
+
+# -I/-D flags to pass when compiling.
+AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)
+
+# Convenience library for C++11 runtime.
+noinst_LTLIBRARIES = libnonshared11convenience44.la \
+		     libnonshared11convenience48.la
+
+headers = 
+sources = \
+	bad_array_length.cc \
+	bad_array_new.cc \
+	codecvt.cc \
+	condition_variable.cc \
+	cow-shim_facets.cc \
+	cow-stdexcept.cc \
+	ctype.cc \
+	cxx11-hash_tr1.cc \
+	cxx11-ios_failure.cc \
+	cxx11-shim_facets.cc \
+	cxx11-stdexcept.cc \
+	del_ops.cc \
+	del_opvs.cc \
+	eh_aux_runtime.cc \
+	eh_terminate.cc \
+	futex.cc \
+	ios.cc \
+	new_handler.cc \
+	snprintf_lite.cc \
+	$(inst_sources)
+
+sources44 = \
+	limits.cc \
+	future.cc \
+	functexcept.cc \
+	placeholders.cc \
+	regex.cc \
+	functional.cc \
+	shared_ptr44.cc \
+	nested_exception.cc \
+	debug.cc \
+	compatibility-thread-c++0x.cc \
+	atexit_thread.cc \
+	random.cc \
+	chrono.cc \
+	compatibility-atomic-c++0x.cc \
+	compatibility-c++0x.cc \
+	hashtable_c++0x.cc \
+	system_error44.cc \
+	thread44.cc \
+	$(inst_sources44)
+
+sources48 = \
+	functexcept48.cc \
+	future48.cc \
+	random48.cc \
+	regex48.cc \
+	shared_ptr48.cc \
+	system_error48.cc \
+	thread48.cc \
+	$(inst_sources48)
+
+# XTEMPLATE_FLAGS =
+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = 
+
+# XTEMPLATE_FLAGS = -fno-implicit-templates
+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources = \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cxx11-locale-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cxx11-wlocale-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ext11-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	fstream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ios-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	iostream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	istream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst-asm.S \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	ostream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	sstream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	streambuf-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	string-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wstring-inst.cc
+
+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources44 = 
+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources44 = \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-sstream-inst44.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-string-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-wstring-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-fstream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst44.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wlocale-inst44.cc
+
+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources48 = 
+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources48 = \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	cow-sstream-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	locale-inst.cc \
+@ENABLE_EXTERN_TEMPLATE_TRUE@	wlocale-inst.cc
+
+libnonshared11convenience44_la_SOURCES = $(sources) $(sources44)
+libnonshared11convenience48_la_SOURCES = $(sources) $(sources48)
+
+# AM_CXXFLAGS needs to be in each subdirectory so that it can be
+# modified in a per-library or per-sub-library way.  Need to manually
+# set this option because CONFIG_CXXFLAGS has to be after
+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden
+# as the occasion calls for it.
+AM_CXXFLAGS = \
+	-std=gnu++11 \
+	$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \
+	$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \
+	$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)
+
+AM_MAKEFLAGS = \
+	"gxx_include_dir=$(gxx_include_dir)"
+
+
+# Libtool notes
+
+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is
+# last. (That way, things like -O2 passed down from the toplevel can
+# be overridden by --enable-debug.)
+
+# 2) In general, libtool expects an argument such as `--tag=CXX' when
+# using the C++ compiler, because that will enable the settings
+# detected when C++ support was being configured.  However, when no
+# such flag is given in the command line, libtool attempts to figure
+# it out by matching the compiler name in each configuration section
+# against a prefix of the command line.  The problem is that, if the
+# compiler name and its initial flags stored in the libtool
+# configuration file don't match those in the command line, libtool
+# can't decide which configuration to use, and it gives up.  The
+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe
+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to
+# attempt to infer which configuration to use.
+# We have to put --tag disable-shared after --tag CXX lest things
+# CXX undo the affect of disable-shared.
+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
+	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(EXTRA_CXX_FLAGS)
+
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+
+# 3) We'd have a problem when building the shared libstdc++ object if
+# the rules automake generates would be used.  We cannot allow g++ to
+# be used since this would add -lstdc++ to the link line which of
+# course is problematic at this point.  So, we get the top-level
+# directory to configure libstdc++-v3 to use gcc as the C++
+# compilation driver.
+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \
+	  --mode=link $(CXX) \
+	  $(VTV_CXXLINKFLAGS) \
+	  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .S .cc .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/nonshared11/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign --ignore-deps src/nonshared11/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+$(top_srcdir)/fragment.am:
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+clean-noinstLTLIBRARIES:
+	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
+	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+libnonshared11convenience44.la: $(libnonshared11convenience44_la_OBJECTS) $(libnonshared11convenience44_la_DEPENDENCIES) $(EXTRA_libnonshared11convenience44_la_DEPENDENCIES) 
+	$(CXXLINK)  $(libnonshared11convenience44_la_OBJECTS) $(libnonshared11convenience44_la_LIBADD) $(LIBS)
+libnonshared11convenience48.la: $(libnonshared11convenience48_la_OBJECTS) $(libnonshared11convenience48_la_DEPENDENCIES) $(EXTRA_libnonshared11convenience48_la_DEPENDENCIES) 
+	$(CXXLINK)  $(libnonshared11convenience48_la_OBJECTS) $(libnonshared11convenience48_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+.S.o:
+	$(CPPASCOMPILE) -c -o $@ $<
+
+.S.obj:
+	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.S.lo:
+	$(LTCPPASCOMPILE) -c -o $@ $<
+
+.cc.o:
+	$(CXXCOMPILE) -c -o $@ $<
+
+.cc.obj:
+	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.cc.lo:
+	$(LTCXXCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am:
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am install-man \
+	install-pdf install-pdf-am install-ps install-ps-am \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
+	pdf pdf-am ps ps-am tags uninstall uninstall-am
+
+
+vpath % $(top_srcdir)/src/nonshared11
+vpath % $(top_srcdir)
+
+# Use special rules for the C++14 sources so that the proper flags are passed.
+del_ops.lo: del_ops.cc
+	$(LTCXXCOMPILE) -std=gnu++14 -Wno-sized-deallocation -c $<
+del_opvs.lo: del_opvs.cc
+	$(LTCXXCOMPILE) -std=gnu++14 -Wno-sized-deallocation -c $<
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libstdc++-v3/src/nonshared11/del_opv.cc.jj	2016-07-22 11:37:16.408402501 +0200
+++ libstdc++-v3/src/nonshared11/del_opv.cc	2016-07-22 11:37:16.408402501 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2013-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/del_opv.cc"
--- libstdc++-v3/src/nonshared11/limits.cc.jj	2016-07-22 11:37:16.408402501 +0200
+++ libstdc++-v3/src/nonshared11/limits.cc	2016-07-22 11:37:16.408402501 +0200
@@ -0,0 +1,99 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <limits>
+
+namespace std _GLIBCXX_VISIBILITY(default)   
+{
+
+#define const _GLIBCXX_USE_CONSTEXPR
+
+  const int  __numeric_limits_base::max_digits10;
+  const int  numeric_limits<bool>::max_digits10;
+  const int  numeric_limits<char>::max_digits10;
+  const int  numeric_limits<signed char>::max_digits10;
+  const int  numeric_limits<unsigned char>::max_digits10;
+  const int  numeric_limits<wchar_t>::max_digits10;
+  const int  numeric_limits<short>::max_digits10;
+  const int  numeric_limits<unsigned short>::max_digits10;
+  const int  numeric_limits<int>::max_digits10;
+  const int  numeric_limits<unsigned int>::max_digits10;
+  const int  numeric_limits<long>::max_digits10;
+  const int  numeric_limits<unsigned long>::max_digits10;
+  const int  numeric_limits<long long>::max_digits10;
+  const int  numeric_limits<unsigned long long>::max_digits10;
+  const int  numeric_limits<float>::max_digits10;
+  const int  numeric_limits<double>::max_digits10;
+  const int  numeric_limits<long double>::max_digits10;
+  const int  numeric_limits<char16_t>::max_digits10;
+  const int  numeric_limits<char32_t>::max_digits10;
+
+#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_INT128)
+  const bool numeric_limits<__int128>::is_specialized;
+  const int  numeric_limits<__int128>::digits;
+  const int  numeric_limits<__int128>::digits10;
+  const int  numeric_limits<__int128>::max_digits10;
+  const bool numeric_limits<__int128>::is_signed;
+  const bool numeric_limits<__int128>::is_integer;
+  const bool numeric_limits<__int128>::is_exact;
+  const int  numeric_limits<__int128>::radix;
+  const int  numeric_limits<__int128>::min_exponent;
+  const int  numeric_limits<__int128>::min_exponent10;
+  const int  numeric_limits<__int128>::max_exponent;
+  const int  numeric_limits<__int128>::max_exponent10;
+  const bool numeric_limits<__int128>::has_infinity;
+  const bool numeric_limits<__int128>::has_quiet_NaN;
+  const bool numeric_limits<__int128>::has_signaling_NaN;
+  const float_denorm_style numeric_limits<__int128>::has_denorm;
+  const bool numeric_limits<__int128>::has_denorm_loss;
+  const bool numeric_limits<__int128>::is_iec559;
+  const bool numeric_limits<__int128>::is_bounded;
+  const bool numeric_limits<__int128>::is_modulo;
+  const bool numeric_limits<__int128>::traps;
+  const bool numeric_limits<__int128>::tinyness_before;
+  const float_round_style numeric_limits<__int128>::round_style;
+
+  const bool numeric_limits<unsigned __int128>::is_specialized;
+  const int  numeric_limits<unsigned __int128>::digits;
+  const int  numeric_limits<unsigned __int128>::digits10;
+  const int  numeric_limits<unsigned __int128>::max_digits10;
+  const bool numeric_limits<unsigned __int128>::is_signed;
+  const bool numeric_limits<unsigned __int128>::is_integer;
+  const bool numeric_limits<unsigned __int128>::is_exact;
+  const int  numeric_limits<unsigned __int128>::radix;
+  const int  numeric_limits<unsigned __int128>::min_exponent;
+  const int  numeric_limits<unsigned __int128>::min_exponent10;
+  const int  numeric_limits<unsigned __int128>::max_exponent;
+  const int  numeric_limits<unsigned __int128>::max_exponent10;
+  const bool numeric_limits<unsigned __int128>::has_infinity;
+  const bool numeric_limits<unsigned __int128>::has_quiet_NaN;
+  const bool numeric_limits<unsigned __int128>::has_signaling_NaN;
+  const float_denorm_style numeric_limits<unsigned __int128>::has_denorm;
+  const bool numeric_limits<unsigned __int128>::has_denorm_loss;
+  const bool numeric_limits<unsigned __int128>::is_iec559;
+  const bool numeric_limits<unsigned __int128>::is_bounded;
+  const bool numeric_limits<unsigned __int128>::is_modulo;
+  const bool numeric_limits<unsigned __int128>::traps;
+  const bool numeric_limits<unsigned __int128>::tinyness_before;
+  const float_round_style numeric_limits<unsigned __int128>::round_style;
+#endif
+}
--- libstdc++-v3/src/nonshared11/locale-inst.cc.jj	2016-07-22 11:37:16.408402501 +0200
+++ libstdc++-v3/src/nonshared11/locale-inst.cc	2016-07-22 11:56:34.403347351 +0200
@@ -0,0 +1,93 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+#ifndef _GLIBCXX_USE_CXX11_ABI
+// Instantiations in this file use the old COW std::string ABI unless included
+// by another file which defines _GLIBCXX_USE_CXX11_ABI=1. Some instantiations
+// are guarded by a check for !_GLIBCXX_USE_CXX11_ABI so that they are only
+// instantiated once, because they are not tagged with abi_tag so should not
+// be instantiated twice.
+# define _GLIBCXX_USE_CXX11_ABI 0
+#endif
+
+#include <locale>
+
+// Instantiation configuration.
+#ifndef C
+# define C char
+# define C_is_char
+#endif
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+#ifdef _GLIBCXX_NONSHARED_CXX11_44
+  template time_get<C, istreambuf_iterator<C>>::iter_type time_get<C, istreambuf_iterator<C>>::_M_extract_wday_or_month(iter_type, iter_type, int&, const C**, size_t, ios_base&, ios_base::iostate&) const;
+#endif
+
+  template C* __add_grouping<C>(C*, C, char const*, size_t, C const*, C const*);
+
+  template moneypunct_byname<C, false>::moneypunct_byname(const string&, size_t);
+  template moneypunct_byname<C, true>::moneypunct_byname(const string&, size_t);
+  template numpunct_byname<C>::numpunct_byname(const string&, size_t);
+  template time_put_byname<C>::time_put_byname(const string&, size_t);
+  template time_get_byname<C>::time_get_byname(const string&, size_t);
+  template time_get<C, istreambuf_iterator<C>>::iter_type time_get<C, istreambuf_iterator<C>>::get(iter_type, iter_type, ios_base&, ios_base::iostate&, tm*, const C*, const C*) const;
+  template time_get<C, istreambuf_iterator<C>>::iter_type time_get<C, istreambuf_iterator<C>>::do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, tm*, char, char) const;
+  template messages_byname<C>::messages_byname(const string&, size_t);
+  ctype_byname<C>::ctype_byname(const string& __s, size_t __refs)
+    : ctype_byname(__s.c_str(), __refs) { }
+  template codecvt_byname<C, char, mbstate_t>::codecvt_byname(const string&, size_t);
+//  template collate_byname<C>::collate_byname(const string&, size_t);
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
+
+asm (".hidden _ZSt16__convert_from_vRKP15__locale_structPciPKcz");
+asm (".hidden _ZTISt10money_base");
+asm (".hidden _ZTISt13messages_base");
+asm (".hidden _ZTISt9time_base");
+asm (".hidden _ZTSSt10money_base");
+asm (".hidden _ZTSSt13messages_base");
+asm (".hidden _ZTSSt9time_base");
+#ifdef C_is_char
+asm (".hidden _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_");
+#else
+asm (".hidden _ZSt14__add_groupingIcEPT_S1_S0_PKcmPKS0_S5_");
+#endif
+#else
+asm (".hidden _ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv");
+#if defined(__i386__) || (defined(__powerpc__) && !defined(__powerpc64__))
+asm (".hidden _ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_");
+#else
+asm (".hidden _ZSt14__add_groupingIwEPT_S1_S0_PKcmPKS0_S5_");
+#endif
+#endif
--- libstdc++-v3/src/nonshared11/cow-fstream-inst.cc.jj	2016-07-22 11:37:16.408402501 +0200
+++ libstdc++-v3/src/nonshared11/cow-fstream-inst.cc	2016-07-22 11:37:16.408402501 +0200
@@ -0,0 +1,48 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#define _GLIBCXX_USE_CXX11_ABI 0
+#include <fstream>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+
+  typedef basic_filebuf<char> FIC;
+
+  template
+  int FIC::_M_get_ext_pos(__state_type &);
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+  typedef basic_filebuf<wchar_t> FIW;
+
+  template
+  int FIW::_M_get_ext_pos(__state_type &);
+
+#endif
+
+}
--- libstdc++-v3/src/nonshared11/nested_exception.cc.jj	2016-07-22 11:37:16.409402488 +0200
+++ libstdc++-v3/src/nonshared11/nested_exception.cc	2016-07-22 11:37:16.409402488 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/nested_exception.cc"
+asm (".hidden _ZTSSt16nested_exception");
--- libstdc++-v3/src/nonshared11/bad_array_new.cc.jj	2016-07-22 11:37:16.409402488 +0200
+++ libstdc++-v3/src/nonshared11/bad_array_new.cc	2016-07-22 11:37:16.409402488 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2014-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/bad_array_new.cc"
--- libstdc++-v3/src/nonshared11/streambuf-inst.cc.jj	2016-07-22 11:37:16.409402488 +0200
+++ libstdc++-v3/src/nonshared11/streambuf-inst.cc	2016-07-22 11:37:16.409402488 +0200
@@ -0,0 +1,42 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <streambuf>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template void basic_streambuf<char>::swap(basic_streambuf&);
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template void basic_streambuf<wchar_t>::swap(basic_streambuf&);
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/compatibility-thread-c++0x.cc.jj	2016-07-22 11:37:16.409402488 +0200
+++ libstdc++-v3/src/nonshared11/compatibility-thread-c++0x.cc	2016-07-22 11:37:16.409402488 +0200
@@ -0,0 +1,39 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <bits/c++config.h>
+#if defined(_GLIBCXX_HAVE_TLS) && defined(PIC)
+#define _GLIBCXX_ASYNC_ABI_COMPAT
+#endif
+
+#include <future>
+#include <mutex>
+
+#undef _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE
+#include "../c++11/compatibility-thread-c++0x.cc"
+
+asm (".hidden _ZSt9call_onceIMSt6threadFvvEJSt17reference_wrapperIS0_EEEvRSt9once_flagOT_DpOT0_"); 
+asm (".hidden _ZZSt9call_onceIMSt6threadFvvEJSt17reference_wrapperIS0_EEEvRSt9once_flagOT_DpOT0_ENKUlvE0_clEv");
+asm (".hidden _ZZSt9call_onceIMSt6threadFvvEJSt17reference_wrapperIS0_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv");
+asm (".hidden _ZSt13__bind_simpleIMSt6threadFvvEJSt17reference_wrapperIS0_EEENSt19_Bind_simple_helperIT_JDpT0_EE6__typeEOS6_DpOS7_"); 
+asm (".hidden _ZNSt13__future_base19_Async_state_common15_M_run_deferredEv"); 
+asm (".hidden _ZNSt13__future_base7_ResultIvE10_M_destroyEv");
--- libstdc++-v3/src/nonshared11/wstring-inst.cc.jj	2016-07-22 11:37:16.410402476 +0200
+++ libstdc++-v3/src/nonshared11/wstring-inst.cc	2016-07-22 11:37:16.410402476 +0200
@@ -0,0 +1,31 @@
+// wide string support -*- C++ -*-
+
+// Copyright (C) 1999-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 21  Strings library
+//
+
+#include "../c++11/wstring-inst.cc"
+asm (".hidden _ZN9__gnu_cxxeqIPKwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_");
+asm (".hidden _ZN9__gnu_cxxeqIPwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_");
--- libstdc++-v3/src/nonshared11/ios-inst.cc.jj	2016-07-22 11:37:16.410402476 +0200
+++ libstdc++-v3/src/nonshared11/ios-inst.cc	2016-07-22 11:37:16.410402476 +0200
@@ -0,0 +1,49 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#include <ios>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template void basic_ios<char>::move(basic_ios&&);
+  template void basic_ios<char>::move(basic_ios&);
+  template void basic_ios<char>::swap(basic_ios&);
+  template void basic_ios<char>::set_rdbuf(basic_streambuf<char, traits_type>*);
+  template basic_ios<char>::operator bool() const;
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template void basic_ios<wchar_t>::move(basic_ios&&);
+  template void basic_ios<wchar_t>::move(basic_ios&);
+  template void basic_ios<wchar_t>::swap(basic_ios&);
+  template void basic_ios<wchar_t>::set_rdbuf(basic_streambuf<wchar_t, traits_type>*);
+  template basic_ios<wchar_t>::operator bool() const;
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/future48.cc.jj	2016-07-22 11:37:16.410402476 +0200
+++ libstdc++-v3/src/nonshared11/future48.cc	2016-07-22 11:37:16.410402476 +0200
@@ -0,0 +1,26 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_48
+#include "../c++11/future.cc"
+asm (".hidden _ZSt16__at_thread_exitPSt20__at_thread_exit_elt");
+asm (".hidden _ZNSt13__future_base13_State_baseV211_Make_ready6_S_runEPv");
--- libstdc++-v3/src/nonshared11/fstream-inst.cc.jj	2016-07-22 11:37:16.410402476 +0200
+++ libstdc++-v3/src/nonshared11/fstream-inst.cc	2016-07-22 11:37:16.410402476 +0200
@@ -0,0 +1,79 @@
+// Explicit instantiation file.
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882:
+//
+
+#define _GLIBCXX_USE_CXX11_ABI 1
+#include <fstream>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  template basic_filebuf<char, char_traits<char>>::basic_filebuf(basic_filebuf&&);
+  template basic_filebuf<char, char_traits<char>>& basic_filebuf<char, char_traits<char>>::operator=(basic_filebuf&&);
+  template void basic_filebuf<char, char_traits<char>>::swap(basic_filebuf&);
+  template basic_filebuf<char, char_traits<char>>::__filebuf_type* basic_filebuf<char, char_traits<char>>::open(const std::string &, ios_base::openmode);
+  template basic_ifstream<char>::basic_ifstream(basic_ifstream&&);
+  template basic_ifstream<char>& basic_ifstream<char>::operator=(basic_ifstream&&);
+  template void basic_ifstream<char>::swap(basic_ifstream&);
+  template void basic_ifstream<char>::open(const std::string &, ios_base::openmode);
+  template basic_ifstream<char>::basic_ifstream(const std::string &, ios_base::openmode);
+  template basic_ofstream<char>::basic_ofstream(basic_ofstream&&);
+  template basic_ofstream<char>& basic_ofstream<char>::operator=(basic_ofstream&&);
+  template void basic_ofstream<char>::swap(basic_ofstream&);
+  template void basic_ofstream<char>::open(const std::string &, ios_base::openmode);
+  template basic_ofstream<char>::basic_ofstream(const std::string &, ios_base::openmode);
+  template basic_fstream<char>::basic_fstream(basic_fstream&&);
+  template basic_fstream<char>& basic_fstream<char>::operator=(basic_fstream&&);
+  template void basic_fstream<char>::swap(basic_fstream&);
+  template void basic_fstream<char>::open(const std::string &, ios_base::openmode);
+  template basic_fstream<char>::basic_fstream(const std::string &, ios_base::openmode);
+
+#ifdef _GLIBCXX_USE_WCHAR_T
+  template basic_filebuf<wchar_t, char_traits<wchar_t>>::basic_filebuf(basic_filebuf&&);
+  template basic_filebuf<wchar_t, char_traits<wchar_t>>& basic_filebuf<wchar_t, char_traits<wchar_t>>::operator=(basic_filebuf&&);
+  template void basic_filebuf<wchar_t, char_traits<wchar_t>>::swap(basic_filebuf&);
+  template basic_filebuf<wchar_t, char_traits<wchar_t>>::__filebuf_type* basic_filebuf<wchar_t, char_traits<wchar_t>>::open(const std::string &, ios_base::openmode);
+  template basic_ifstream<wchar_t>::basic_ifstream(basic_ifstream&&);
+  template basic_ifstream<wchar_t>& basic_ifstream<wchar_t>::operator=(basic_ifstream&&);
+  template void basic_ifstream<wchar_t>::swap(basic_ifstream&);
+  template void basic_ifstream<wchar_t>::open(const std::string &, ios_base::openmode);
+  template basic_ifstream<wchar_t>::basic_ifstream(const std::string &, ios_base::openmode);
+  template basic_ofstream<wchar_t>::basic_ofstream(basic_ofstream&&);
+  template basic_ofstream<wchar_t>& basic_ofstream<wchar_t>::operator=(basic_ofstream&&);
+  template void basic_ofstream<wchar_t>::swap(basic_ofstream&);
+  template void basic_ofstream<wchar_t>::open(const std::string &, ios_base::openmode);
+  template basic_ofstream<wchar_t>::basic_ofstream(const std::string &, ios_base::openmode);
+  template basic_fstream<wchar_t>::basic_fstream(basic_fstream&&);
+  template basic_fstream<wchar_t>& basic_fstream<wchar_t>::operator=(basic_fstream&&);
+  template void basic_fstream<wchar_t>::swap(basic_fstream&);
+  template void basic_fstream<wchar_t>::open(const std::string &, ios_base::openmode);
+  template basic_fstream<wchar_t>::basic_fstream(const std::string &, ios_base::openmode);
+#endif
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
--- libstdc++-v3/src/nonshared11/bad_array_length.cc.jj	2016-07-22 11:37:16.411402464 +0200
+++ libstdc++-v3/src/nonshared11/bad_array_length.cc	2016-07-22 11:37:16.410402476 +0200
@@ -0,0 +1,23 @@
+// Copyright (C) 2014-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../libsupc++/bad_array_length.cc"
--- libstdc++-v3/src/nonshared11/regex.cc.jj	2016-07-22 11:37:16.411402464 +0200
+++ libstdc++-v3/src/nonshared11/regex.cc	2016-07-22 11:37:16.411402464 +0200
@@ -0,0 +1,25 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include "../c++11/regex.cc"
+
+asm (".hidden _ZTSSt11regex_error");
--- libstdc++-v3/src/nonshared11/cow-sstream-inst44.cc.jj	2016-07-22 11:37:16.411402464 +0200
+++ libstdc++-v3/src/nonshared11/cow-sstream-inst44.cc	2016-07-22 11:37:16.411402464 +0200
@@ -0,0 +1,24 @@
+// Copyright (C) 2012-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#define _GLIBCXX_NONSHARED_CXX11_44
+#include "cow-sstream-inst.cc"
--- libstdc++-v3/src/shared/hashtable-aux.cc.jj	2016-07-21 20:21:57.118926720 +0200
+++ libstdc++-v3/src/shared/hashtable-aux.cc	2016-07-22 11:37:16.411402464 +0200
@@ -22,6 +22,9 @@
 // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 // <http://www.gnu.org/licenses/>.
 
+#ifndef HASHTABLE_AUX_CC
+#define HASHTABLE_AUX_CC 1
+
 namespace __detail
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
@@ -91,3 +94,5 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   };
 _GLIBCXX_END_NAMESPACE_VERSION
 } // namespace __detail
+
+#endif
--- libstdc++-v3/src/c++98/locale_facets.cc.jj	2016-07-21 20:21:57.147926371 +0200
+++ libstdc++-v3/src/c++98/locale_facets.cc	2016-07-22 11:37:16.411402464 +0200
@@ -27,6 +27,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11
   // Definitions for static const data members of time_base.
   template<> 
     const char*
@@ -97,6 +98,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       *__fptr++ = (__flags & ios_base::uppercase) ? 'G' : 'g';
     *__fptr = '\0';
   }
+#endif
 
   // This function is not exported but is needed internally, by the versions
   // of __verify_grouping below and in src/c++11/cxx11-locale-inst.cc
@@ -125,6 +127,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     return __test;
   }
 
+#ifndef _GLIBCXX_NONSHARED_CXX11
   bool
   __verify_grouping(const char* __grouping, size_t __grouping_size,
 		    const string& __grouping_tmp) throw()
@@ -133,6 +136,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                                   __grouping_tmp.c_str(),
                                   __grouping_tmp.size());
   }
+#endif
 
 _GLIBCXX_END_NAMESPACE_VERSION
 } // namespace
--- libstdc++-v3/src/Makefile.am.jj	2016-07-21 20:21:57.138926479 +0200
+++ libstdc++-v3/src/Makefile.am	2016-07-22 11:37:16.412402451 +0200
@@ -28,7 +28,7 @@ else
 filesystem_dir =
 endif
 
-SUBDIRS = c++98 c++11 $(filesystem_dir)
+SUBDIRS = c++98 c++11 $(filesystem_dir) nonshared98 nonshared11
 
 # Cross compiler support.
 if VTV_CYGMIN
@@ -37,6 +37,8 @@ else
 toolexeclib_LTLIBRARIES = libstdc++.la
 endif
 
+noinst_LTLIBRARIES = libstdc++_nonshared44.la libstdc++_nonshared48.la
+
 if VTV_CYGMIN
 vtv_stubs.cc:
 	rm -f $@
@@ -72,6 +74,25 @@ endif
 parallel_compat_sources = \
 	compatibility-parallel_list.cc  compatibility-parallel_list-2.cc
 
+libstdc___nonshared44_la_SOURCES =
+
+libstdc___nonshared44_la_LIBADD = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience44.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience44.la
+
+libstdc___nonshared44_la_DEPENDENCIES = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience44.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience44.la
+
+libstdc___nonshared48_la_SOURCES =
+
+libstdc___nonshared48_la_LIBADD = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience48.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience48.la
+
+libstdc___nonshared48_la_DEPENDENCIES = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience48.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience48.la
 
 cxx98_sources = \
 	compatibility.cc \
--- libstdc++-v3/src/Makefile.in.jj	2016-07-21 20:21:57.272924864 +0200
+++ libstdc++-v3/src/Makefile.in	2016-07-22 11:37:16.412402451 +0200
@@ -110,7 +110,7 @@ am__uninstall_files_from_dir = { \
          $(am__cd) "$$dir" && rm -f $$files; }; \
   }
 am__installdirs = "$(DESTDIR)$(toolexeclibdir)"
-LTLIBRARIES = $(toolexeclib_LTLIBRARIES)
+LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)
 am__DEPENDENCIES_1 =
 @GLIBCXX_LDBL_COMPAT_TRUE@am__objects_1 = compatibility-ldbl.lo
 am__objects_2 = compatibility.lo compatibility-debug_list.lo \
@@ -122,6 +122,12 @@ am_libstdc___la_OBJECTS = $(am__objects_
 libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)
 @VTV_CYGMIN_FALSE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)
 @VTV_CYGMIN_TRUE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)
+am_libstdc___nonshared44_la_OBJECTS =
+libstdc___nonshared44_la_OBJECTS =  \
+	$(am_libstdc___nonshared44_la_OBJECTS)
+am_libstdc___nonshared48_la_OBJECTS =
+libstdc___nonshared48_la_OBJECTS =  \
+	$(am_libstdc___nonshared48_la_OBJECTS)
 libvtv_la_LIBADD =
 @VTV_CYGMIN_TRUE@am_libvtv_la_OBJECTS = vtv_stubs.lo
 libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)
@@ -132,7 +138,17 @@ am__depfiles_maybe =
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 CXXLD = $(CXX)
-SOURCES = $(libstdc___la_SOURCES) $(libvtv_la_SOURCES)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libstdc___la_SOURCES) $(libstdc___nonshared44_la_SOURCES) \
+	$(libstdc___nonshared48_la_SOURCES) $(libvtv_la_SOURCES)
 RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
 	html-recursive info-recursive install-data-recursive \
 	install-dvi-recursive install-exec-recursive \
@@ -151,7 +167,7 @@ AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGE
 	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS
 ETAGS = etags
 CTAGS = ctags
-DIST_SUBDIRS = c++98 c++11 filesystem
+DIST_SUBDIRS = c++98 c++11 filesystem nonshared98 nonshared11
 ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@
 ACLOCAL = @ACLOCAL@
 ALLOCATOR_H = @ALLOCATOR_H@
@@ -169,6 +185,8 @@ AWK = @AWK@
 BASIC_FILE_CC = @BASIC_FILE_CC@
 BASIC_FILE_H = @BASIC_FILE_H@
 CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
 CCODECVT_CC = @CCODECVT_CC@
 CCOLLATE_CC = @CCOLLATE_CC@
 CCTYPE_CC = @CCTYPE_CC@
@@ -376,11 +394,12 @@ WARN_CXXFLAGS = \
 AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)
 @ENABLE_FILESYSTEM_TS_FALSE@filesystem_dir = 
 @ENABLE_FILESYSTEM_TS_TRUE@filesystem_dir = filesystem
-SUBDIRS = c++98 c++11 $(filesystem_dir)
+SUBDIRS = c++98 c++11 $(filesystem_dir) nonshared98 nonshared11
 @VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la
 
 # Cross compiler support.
 @VTV_CYGMIN_TRUE@toolexeclib_LTLIBRARIES = libvtv.la libstdc++.la
+noinst_LTLIBRARIES = libstdc++_nonshared44.la libstdc++_nonshared48.la
 @VTV_CYGMIN_TRUE@libvtv_la_SOURCES = vtv_stubs.cc
 @VTV_CYGMIN_TRUE@libvtv_la_LDFLAGS = $(lt_host_flags)
 @VTV_CYGMIN_TRUE@libvtv_la_AM_CXXFLAGS = \
@@ -398,6 +417,24 @@ SUBDIRS = c++98 c++11 $(filesystem_dir)
 parallel_compat_sources = \
 	compatibility-parallel_list.cc  compatibility-parallel_list-2.cc
 
+libstdc___nonshared44_la_SOURCES = 
+libstdc___nonshared44_la_LIBADD = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience44.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience44.la
+
+libstdc___nonshared44_la_DEPENDENCIES = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience44.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience44.la
+
+libstdc___nonshared48_la_SOURCES = 
+libstdc___nonshared48_la_LIBADD = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience48.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience48.la
+
+libstdc___nonshared48_la_DEPENDENCIES = \
+	$(top_builddir)/src/nonshared98/libnonshared98convenience48.la \
+	$(top_builddir)/src/nonshared11/libnonshared11convenience48.la
+
 cxx98_sources = \
 	compatibility.cc \
 	compatibility-debug_list.cc \
@@ -570,6 +607,15 @@ $(top_srcdir)/configure: @MAINTAINER_MOD
 $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
 $(am__aclocal_m4_deps):
+
+clean-noinstLTLIBRARIES:
+	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
+	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
 install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)
 	@$(NORMAL_INSTALL)
 	@list='$(toolexeclib_LTLIBRARIES)'; test -n "$(toolexeclibdir)" || list=; \
@@ -604,6 +650,10 @@ clean-toolexeclibLTLIBRARIES:
 	done
 libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) $(EXTRA_libstdc___la_DEPENDENCIES) 
 	$(libstdc___la_LINK) $(am_libstdc___la_rpath) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)
+libstdc++_nonshared44.la: $(libstdc___nonshared44_la_OBJECTS) $(libstdc___nonshared44_la_DEPENDENCIES) $(EXTRA_libstdc___nonshared44_la_DEPENDENCIES) 
+	$(LINK)  $(libstdc___nonshared44_la_OBJECTS) $(libstdc___nonshared44_la_LIBADD) $(LIBS)
+libstdc++_nonshared48.la: $(libstdc___nonshared48_la_OBJECTS) $(libstdc___nonshared48_la_DEPENDENCIES) $(EXTRA_libstdc___nonshared48_la_DEPENDENCIES) 
+	$(LINK)  $(libstdc___nonshared48_la_OBJECTS) $(libstdc___nonshared48_la_LIBADD) $(LIBS)
 libvtv.la: $(libvtv_la_OBJECTS) $(libvtv_la_DEPENDENCIES) $(EXTRA_libvtv_la_DEPENDENCIES) 
 	$(libvtv_la_LINK) $(am_libvtv_la_rpath) $(libvtv_la_OBJECTS) $(libvtv_la_LIBADD) $(LIBS)
 
@@ -804,7 +854,8 @@ maintainer-clean-generic:
 clean: clean-recursive
 
 clean-am: clean-generic clean-libtool clean-local \
-	clean-toolexeclibLTLIBRARIES mostlyclean-am
+	clean-noinstLTLIBRARIES clean-toolexeclibLTLIBRARIES \
+	mostlyclean-am
 
 distclean: distclean-recursive
 	-rm -f Makefile
@@ -875,19 +926,19 @@ uninstall-am: uninstall-toolexeclibLTLIB
 
 .PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
 	all all-am all-local check check-am clean clean-generic \
-	clean-libtool clean-local clean-toolexeclibLTLIBRARIES ctags \
-	ctags-recursive distclean distclean-compile distclean-generic \
-	distclean-libtool distclean-tags dvi dvi-am html html-am info \
-	info-am install install-am install-data install-data-am \
-	install-data-local install-dvi install-dvi-am install-exec \
-	install-exec-am install-html install-html-am install-info \
-	install-info-am install-man install-pdf install-pdf-am \
-	install-ps install-ps-am install-strip \
-	install-toolexeclibLTLIBRARIES installcheck installcheck-am \
-	installdirs installdirs-am maintainer-clean \
-	maintainer-clean-generic mostlyclean mostlyclean-compile \
-	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
-	tags tags-recursive uninstall uninstall-am \
+	clean-libtool clean-local clean-noinstLTLIBRARIES \
+	clean-toolexeclibLTLIBRARIES ctags ctags-recursive distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-data-local \
+	install-dvi install-dvi-am install-exec install-exec-am \
+	install-html install-html-am install-info install-info-am \
+	install-man install-pdf install-pdf-am install-ps \
+	install-ps-am install-strip install-toolexeclibLTLIBRARIES \
+	installcheck installcheck-am installdirs installdirs-am \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
+	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
 	uninstall-toolexeclibLTLIBRARIES
 
 
--- libstdc++-v3/src/c++11/ios.cc.jj	2016-07-21 20:21:57.197925768 +0200
+++ libstdc++-v3/src/c++11/ios.cc	2016-07-22 11:37:16.413402439 +0200
@@ -33,6 +33,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11
   // Definitions for static const members of ios_base.
   const ios_base::fmtflags ios_base::boolalpha;
   const ios_base::fmtflags ios_base::dec;
@@ -191,6 +192,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       }
     _M_callbacks = 0;
   }
+#endif
 
   void
   ios_base::_M_move(ios_base& __rhs) noexcept
--- libstdc++-v3/src/c++11/condition_variable.cc.jj	2016-07-21 20:21:57.247925166 +0200
+++ libstdc++-v3/src/c++11/condition_variable.cc	2016-07-22 11:37:16.413402439 +0200
@@ -31,6 +31,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11
 #ifdef __GTHREAD_COND_INIT
   condition_variable::condition_variable() noexcept = default;
 #else
@@ -77,6 +78,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     if (__e)
       __throw_system_error(__e);
   }
+#endif
 
   extern void
   __at_thread_exit(__at_thread_exit_elt*);
--- libstdc++-v3/src/c++11/shared_ptr.cc.jj	2016-07-21 20:21:57.261924997 +0200
+++ libstdc++-v3/src/c++11/shared_ptr.cc	2016-07-22 11:37:16.413402439 +0200
@@ -28,11 +28,13 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   bad_weak_ptr::~bad_weak_ptr() noexcept = default;
 
   char const*
   bad_weak_ptr::what() const noexcept
   { return "bad_weak_ptr"; }
+#endif
 
 #ifdef __GTHREADS
   namespace
--- libstdc++-v3/src/c++11/future.cc.jj	2016-07-21 20:21:57.170926094 +0200
+++ libstdc++-v3/src/c++11/future.cc	2016-07-22 11:37:16.413402439 +0200
@@ -24,6 +24,7 @@
 
 #include <future>
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
 namespace
 {
   struct future_error_category : public std::error_category
@@ -65,11 +66,13 @@ namespace
     return __fec;
   }
 }
+#endif
 
 namespace std _GLIBCXX_VISIBILITY(default)
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   const error_category& future_category() noexcept
   { return __future_category_instance(); }
 
@@ -77,12 +80,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   const char*
   future_error::what() const noexcept { return logic_error::what(); }
+#endif
 
 #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1) \
   && (ATOMIC_INT_LOCK_FREE > 1)
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   __future_base::_Result_base::_Result_base() = default;
 
   __future_base::_Result_base::~_Result_base() = default;
+#endif
 
   void
   __future_base::_State_baseV2::_Make_ready::_S_run(void* p)
--- libstdc++-v3/src/c++11/cow-string-inst.cc.jj	2016-07-21 20:21:57.262924985 +0200
+++ libstdc++-v3/src/c++11/cow-string-inst.cc	2016-07-22 11:37:16.414402426 +0200
@@ -27,7 +27,11 @@
 //
 
 #define _GLIBCXX_USE_CXX11_ABI 0
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
 #include "string-inst.cc"
+#else
+#include <string>
+#endif
 
 #include <istream>
 #include <ostream>
@@ -40,6 +44,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
   // These came from c++98/misc-inst.cc, repeat them for COW string
   // string related to iostreams.
   template 
@@ -54,6 +59,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template 
     basic_istream<char>& 
     getline(basic_istream<char>&, string&);
+#endif
 
 _GLIBCXX_END_NAMESPACE_VERSION
 } // namespace
--- libstdc++-v3/src/c++11/compatibility-c++0x.cc.jj	2016-07-21 20:21:57.228925395 +0200
+++ libstdc++-v3/src/c++11/compatibility-c++0x.cc	2016-07-22 11:37:16.414402426 +0200
@@ -44,6 +44,7 @@
 
 namespace std _GLIBCXX_VISIBILITY(default)
 {
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
   // gcc-4.4.0
   // <mutex> exported std::lock_error
 #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1)
@@ -104,7 +105,6 @@ namespace std _GLIBCXX_VISIBILITY(defaul
   hash<const wstring&>::operator()(const wstring& __s) const
   { return _Hash_impl::hash(__s.data(), __s.length() * sizeof(wchar_t)); }
 #endif
-#endif
 
   template<>
     struct hash<error_code>
@@ -129,11 +129,19 @@ namespace std _GLIBCXX_VISIBILITY(defaul
     };
     constexpr bool system_clock::is_monotonic;
   } // namespace chrono
+#endif
+#endif
 
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // gcc-5 replaces this with _V2::error_category
   class error_category
   {
+#ifdef _GLIBCXX_NONSHARED_CXX11_44
+    // Ugly hack.  Ensure we don't emit the virtual table and
+    // use system libstdc++.so.6 one instead.
+    virtual void dummy();
+#endif
+
   public:
     error_category() noexcept;
 
@@ -177,6 +185,7 @@ _GLIBCXX_END_NAMESPACE_VERSION
 
   error_category::~error_category() noexcept = default;
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
   namespace
   {
     using std::string;
@@ -253,6 +262,6 @@ _GLIBCXX_END_NAMESPACE_VERSION
       return __code.value() == __i;
     return false;
   }
-
+#endif
 }
 #endif
--- libstdc++-v3/src/c++11/system_error.cc.jj	2016-07-21 20:21:57.211925599 +0200
+++ libstdc++-v3/src/c++11/system_error.cc	2016-07-22 11:37:16.414402426 +0200
@@ -82,8 +82,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   const error_category& 
   _V2::generic_category() noexcept { return generic_category_instance; }
-  
+
+#ifndef _GLIBCXX_NONSHARED_CXX11  
   system_error::~system_error() noexcept = default;
+#endif
 
   error_condition 
   error_category::default_error_condition(int __i) const noexcept
@@ -98,9 +100,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   error_category::equivalent(const error_code& __code, int __i) const noexcept
   { return *this == __code.category() && __code.value() == __i; }
 
+#ifndef _GLIBCXX_NONSHARED_CXX11  
   error_condition 
   error_code::default_error_condition() const noexcept
   { return category().default_error_condition(value()); }
+#endif
 
 #if _GLIBCXX_USE_CXX11_ABI
   // Return error_category::message() as a COW string
--- libstdc++-v3/src/c++11/random.cc.jj	2016-07-21 20:21:57.183925937 +0200
+++ libstdc++-v3/src/c++11/random.cc	2016-07-22 11:37:16.415402414 +0200
@@ -59,6 +59,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
     }
 
 #if (defined __i386__ || defined __x86_64__) && defined _GLIBCXX_X86_RDRAND
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
     unsigned int
     __attribute__ ((target("rdrnd")))
     __x86_rdrand(void)
@@ -73,6 +74,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
       return val;
     }
 #endif
+#endif
   }
 
   void
@@ -115,6 +117,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
     _M_mt.seed(_M_strtoul(token));
   }
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   void
   random_device::_M_fini()
   {
@@ -160,6 +163,7 @@ namespace std _GLIBCXX_VISIBILITY(defaul
   {
     return _M_mt();
   }
+#endif
 
   template class mersenne_twister_engine<
     uint_fast32_t,
--- libstdc++-v3/src/c++11/thread.cc.jj	2016-07-21 20:21:57.217925527 +0200
+++ libstdc++-v3/src/c++11/thread.cc	2016-07-22 11:37:16.415402414 +0200
@@ -127,6 +127,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   thread::_State::~_State() = default;
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
   void
   thread::join()
   {
@@ -154,6 +155,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
     _M_id = id();
   }
+#endif
 
   void
   thread::_M_start_thread(_State_ptr state, void (*)())
@@ -167,6 +169,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   }
 
 #if _GLIBCXX_THREAD_ABI_COMPAT
+#ifndef _GLIBCXX_NONSHARED_CXX11_44
   void
   thread::_M_start_thread(__shared_base_type __b)
   {
@@ -180,6 +183,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
     _M_start_thread(std::move(__b), nullptr);
   }
+#endif
 
   void
   thread::_M_start_thread(__shared_base_type __b, void (*)())
@@ -197,6 +201,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   }
 #endif
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   unsigned int
   thread::hardware_concurrency() noexcept
   {
@@ -205,6 +210,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __n = 0;
     return __n;
   }
+#endif
 
 _GLIBCXX_END_NAMESPACE_VERSION
 
@@ -212,6 +218,7 @@ namespace this_thread
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
+#ifndef _GLIBCXX_NONSHARED_CXX11_48
   void
   __sleep_for(chrono::seconds __s, chrono::nanoseconds __ns)
   {
@@ -243,6 +250,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     ::Sleep(chrono::milliseconds(__s).count() + ms);
 #endif
   }
+#endif
 
 _GLIBCXX_END_NAMESPACE_VERSION
 }
--- libstdc++-v3/configure.ac.jj	2016-07-21 20:21:57.042927637 +0200
+++ libstdc++-v3/configure.ac	2016-07-22 11:37:16.415402414 +0200
@@ -498,6 +498,11 @@ GLIBCXX_EXPORT_INSTALL_INFO
 GLIBCXX_EXPORT_INCLUDES
 GLIBCXX_EXPORT_FLAGS
 
+CCAS='$(CXX)'
+CCASFLAGS='$(CXXFLAGS)'
+AC_SUBST(CCAS)
+AC_SUBST(CCASFLAGS)
+
 dnl In autoconf 2.5x, AC_OUTPUT is replaced by four AC_CONFIG_* macros,
 dnl which can all be called multiple times as needed, plus one (different)
 dnl AC_OUTPUT macro.  This one lists the files to be created:
--- libstdc++-v3/configure.jj	2016-07-21 20:21:57.096926986 +0200
+++ libstdc++-v3/configure	2016-07-22 11:37:16.428402251 +0200
@@ -602,6 +602,8 @@ ac_subst_vars='am__EXEEXT_FALSE
 am__EXEEXT_TRUE
 LTLIBOBJS
 LIBOBJS
+CCASFLAGS
+CCAS
 WARN_FLAGS
 OPTIMIZE_CXXFLAGS
 TOPLEVEL_INCLUDES
@@ -4954,7 +4956,7 @@ $as_echo "$ac_cv_path_EGREP" >&6; }
   # expandable list at autoconf time; the second provides an expandable list
   # (i.e., shell variable) at configure time.
 
-  SUBDIRS='include libsupc++ src src/c++98 src/c++11 src/filesystem doc po testsuite python'
+  SUBDIRS='include libsupc++ src src/c++98 src/c++11 src/filesystem src/nonshared98 src/nonshared11 doc po testsuite python'
 
   # These need to be absolute paths, yet at the same time need to
   # canonicalize only relative paths, because then amd will not unmount
@@ -11596,7 +11598,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 11599 "configure"
+#line 11601 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -11702,7 +11704,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 11705 "configure"
+#line 11707 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -15388,7 +15390,7 @@ $as_echo "$glibcxx_cv_atomic_long_long"
   # Fake what AC_TRY_COMPILE does.
 
     cat > conftest.$ac_ext << EOF
-#line 15391 "configure"
+#line 15393 "configure"
 int main()
 {
   typedef bool atomic_type;
@@ -15423,7 +15425,7 @@ $as_echo "$glibcxx_cv_atomic_bool" >&6;
     rm -f conftest*
 
     cat > conftest.$ac_ext << EOF
-#line 15426 "configure"
+#line 15428 "configure"
 int main()
 {
   typedef short atomic_type;
@@ -15458,7 +15460,7 @@ $as_echo "$glibcxx_cv_atomic_short" >&6;
     rm -f conftest*
 
     cat > conftest.$ac_ext << EOF
-#line 15461 "configure"
+#line 15463 "configure"
 int main()
 {
   // NB: _Atomic_word not necessarily int.
@@ -15494,7 +15496,7 @@ $as_echo "$glibcxx_cv_atomic_int" >&6; }
     rm -f conftest*
 
     cat > conftest.$ac_ext << EOF
-#line 15497 "configure"
+#line 15499 "configure"
 int main()
 {
   typedef long long atomic_type;
@@ -15575,7 +15577,7 @@ $as_echo "$as_me: WARNING: Performance o
   # unnecessary for this test.
 
     cat > conftest.$ac_ext << EOF
-#line 15578 "configure"
+#line 15580 "configure"
 int main()
 {
   _Decimal32 d1;
@@ -15617,7 +15619,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
   # unnecessary for this test.
 
     cat > conftest.$ac_ext << EOF
-#line 15620 "configure"
+#line 15622 "configure"
 template<typename T1, typename T2>
   struct same
   { typedef T2 type; };
@@ -15651,7 +15653,7 @@ $as_echo "$enable_int128" >&6; }
     rm -f conftest*
 
     cat > conftest.$ac_ext << EOF
-#line 15654 "configure"
+#line 15656 "configure"
 template<typename T1, typename T2>
   struct same
   { typedef T2 type; };
@@ -81429,6 +81431,11 @@ $as_echo "$gxx_include_dir" >&6; }
 
 
 
+CCAS='$(CXX)'
+CCASFLAGS='$(CXXFLAGS)'
+
+
+
 ac_config_files="$ac_config_files Makefile"
 
 ac_config_files="$ac_config_files scripts/testsuite_flags"
@@ -81446,7 +81453,7 @@ ac_config_files="$ac_config_files doc/xs
 # append it here.  Only modify Makefiles that have just been created.
 #
 # Also, get rid of this simulated-VPATH thing that automake does.
-ac_config_files="$ac_config_files include/Makefile libsupc++/Makefile src/Makefile src/c++98/Makefile src/c++11/Makefile src/filesystem/Makefile doc/Makefile po/Makefile testsuite/Makefile python/Makefile"
+ac_config_files="$ac_config_files include/Makefile libsupc++/Makefile src/Makefile src/c++98/Makefile src/c++11/Makefile src/filesystem/Makefile src/nonshared98/Makefile src/nonshared11/Makefile doc/Makefile po/Makefile testsuite/Makefile python/Makefile"
 
 
 ac_config_commands="$ac_config_commands generate-headers"
@@ -82675,6 +82682,8 @@ do
     "src/c++98/Makefile") CONFIG_FILES="$CONFIG_FILES src/c++98/Makefile" ;;
     "src/c++11/Makefile") CONFIG_FILES="$CONFIG_FILES src/c++11/Makefile" ;;
     "src/filesystem/Makefile") CONFIG_FILES="$CONFIG_FILES src/filesystem/Makefile" ;;
+    "src/nonshared98/Makefile") CONFIG_FILES="$CONFIG_FILES src/nonshared98/Makefile" ;;
+    "src/nonshared11/Makefile") CONFIG_FILES="$CONFIG_FILES src/nonshared11/Makefile" ;;
     "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
     "po/Makefile") CONFIG_FILES="$CONFIG_FILES po/Makefile" ;;
     "testsuite/Makefile") CONFIG_FILES="$CONFIG_FILES testsuite/Makefile" ;;
@@ -84515,6 +84524,28 @@ _EOF
 s!`test -f '$<' || echo '$(srcdir)/'`!!
 _EOF
    sed -f vpsed$$ $ac_file > tmp$$
+   mv tmp$$ $ac_file
+   rm vpsed$$
+   echo 'MULTISUBDIR =' >> $ac_file
+   ml_norecursion=yes
+   . ${multi_basedir}/config-ml.in
+   { ml_norecursion=; unset ml_norecursion;}
+ ;;
+    "src/nonshared98/Makefile":F) cat > vpsed$$ << \_EOF
+s!`test -f '$<' || echo '$(srcdir)/'`!!
+_EOF
+   sed -f vpsed$$ $ac_file > tmp$$
+   mv tmp$$ $ac_file
+   rm vpsed$$
+   echo 'MULTISUBDIR =' >> $ac_file
+   ml_norecursion=yes
+   . ${multi_basedir}/config-ml.in
+   { ml_norecursion=; unset ml_norecursion;}
+ ;;
+    "src/nonshared11/Makefile":F) cat > vpsed$$ << \_EOF
+s!`test -f '$<' || echo '$(srcdir)/'`!!
+_EOF
+   sed -f vpsed$$ $ac_file > tmp$$
    mv tmp$$ $ac_file
    rm vpsed$$
    echo 'MULTISUBDIR =' >> $ac_file
