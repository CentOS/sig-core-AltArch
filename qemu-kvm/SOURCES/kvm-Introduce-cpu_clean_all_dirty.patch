From 2611b6a31041da5b9ed3793152d309aae77932bb Mon Sep 17 00:00:00 2001
From: "Dr. David Alan Gilbert (git)" <dgilbert@redhat.com>
Date: Wed, 22 Oct 2014 09:46:35 +0200
Subject: [PATCH 4/6] Introduce cpu_clean_all_dirty

Message-id: <1413971197-4624-4-git-send-email-dgilbert@redhat.com>
Patchwork-id: 61791
O-Subject: [RHEL-7.1 qemu-kvm PATCH 3/5] Introduce cpu_clean_all_dirty
Bugzilla: 1098602 1130428
RH-Acked-by: Marcelo Tosatti <mtosatti@redhat.com>
RH-Acked-by: Eduardo Habkost <ehabkost@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

From: Marcelo Tosatti <mtosatti@redhat.com>

Introduce cpu_clean_all_dirty, to force subsequent cpu_synchronize_all_states
to read in-kernel register state.

Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit de9d61e83d43be9069e6646fa9d57a3f47779d28)
Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>

Conflicts:
	cpus.c
	kvm-all.c

dgilbert: Had to replace CPU_FOREACH by a loop

Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
---
 cpus.c                | 9 +++++++++
 include/sysemu/cpus.h | 1 +
 include/sysemu/kvm.h  | 8 ++++++++
 kvm-all.c             | 5 +++++
 4 files changed, 23 insertions(+)

diff --git a/cpus.c b/cpus.c
index caccf5a..3948cdf 100644
--- a/cpus.c
+++ b/cpus.c
@@ -437,6 +437,15 @@ bool cpu_is_stopped(CPUState *cpu)
     return !runstate_is_running() || cpu->stopped;
 }
 
+void cpu_clean_all_dirty(void)
+{
+    CPUArchState *cpu;
+
+    for (cpu = first_cpu; cpu; cpu = cpu->next_cpu) {
+        cpu_clean_state(ENV_GET_CPU(cpu));
+    }
+}
+
 static int do_vm_stop(RunState state)
 {
     int ret = 0;
diff --git a/include/sysemu/cpus.h b/include/sysemu/cpus.h
index 6502488..4f8a3df 100644
--- a/include/sysemu/cpus.h
+++ b/include/sysemu/cpus.h
@@ -10,6 +10,7 @@ void cpu_stop_current(void);
 void cpu_synchronize_all_states(void);
 void cpu_synchronize_all_post_reset(void);
 void cpu_synchronize_all_post_init(void);
+void cpu_clean_all_dirty(void);
 
 void qtest_clock_warp(int64_t dest);
 
diff --git a/include/sysemu/kvm.h b/include/sysemu/kvm.h
index e722027..0c6833f 100644
--- a/include/sysemu/kvm.h
+++ b/include/sysemu/kvm.h
@@ -274,6 +274,7 @@ int kvm_physical_memory_addr_from_host(KVMState *s, void *ram_addr,
 
 void kvm_cpu_synchronize_post_reset(CPUState *cpu);
 void kvm_cpu_synchronize_post_init(CPUState *cpu);
+void kvm_cpu_clean_state(CPUState *cpu);
 
 static inline void cpu_synchronize_post_reset(CPUState *cpu)
 {
@@ -289,6 +290,13 @@ static inline void cpu_synchronize_post_init(CPUState *cpu)
     }
 }
 
+static inline void cpu_clean_state(CPUState *cpu)
+{
+    if (kvm_enabled()) {
+        kvm_cpu_clean_state(cpu);
+    }
+}
+
 int kvm_irqchip_add_msi_route(KVMState *s, MSIMessage msg);
 int kvm_irqchip_update_msi_route(KVMState *s, int virq, MSIMessage msg);
 void kvm_irqchip_release_virq(KVMState *s, int virq);
diff --git a/kvm-all.c b/kvm-all.c
index f7f621b..fc6e3ab 100644
--- a/kvm-all.c
+++ b/kvm-all.c
@@ -1615,6 +1615,11 @@ void kvm_cpu_synchronize_post_init(CPUState *cpu)
     cpu->kvm_vcpu_dirty = false;
 }
 
+void kvm_cpu_clean_state(CPUState *cpu)
+{
+    cpu->kvm_vcpu_dirty = false;
+}
+
 int kvm_cpu_exec(CPUArchState *env)
 {
     CPUState *cpu = ENV_GET_CPU(env);
-- 
1.8.3.1

