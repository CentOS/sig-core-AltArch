From eb87f1106d038247356ecd3071e6fa5654386ff5 Mon Sep 17 00:00:00 2001
From: Eduardo Habkost <ehabkost@redhat.com>
Date: Fri, 9 Sep 2016 19:08:33 +0200
Subject: [PATCH 1/2] target-i386: Add support for FEAT_7_0_ECX

RH-Author: Eduardo Habkost <ehabkost@redhat.com>
Message-id: <1473448114-1430-2-git-send-email-ehabkost@redhat.com>
Patchwork-id: 72276
O-Subject: [RHEL-7.3 qemu-kvm PATCH v2 1/2] target-i386: Add support for FEAT_7_0_ECX
Bugzilla: 1372459
RH-Acked-by: Bandan Das <bsd@redhat.com>
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

From: Paolo Bonzini <pbonzini@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1372459

Done from scratch by copying what is done for FEAT_7_0_EBX.  Compare
to upstream commit f74eefe ("target-i386: Add PKU and and OSPKE support",
2016-01-21), but without actually adding PKU and OSPKE.  Because all
these features are "-cpu host"-only, they can be added without modifying
machine types.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
[ehabkost: v2: removed the non-upstream cpuid_level < 7 check]
Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>

Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>
---
 target-i386/cpu.c | 29 ++++++++++++++++++++++++++++-
 target-i386/cpu.h |  1 +
 2 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/target-i386/cpu.c b/target-i386/cpu.c
index 1001c47..d9c214c 100644
--- a/target-i386/cpu.c
+++ b/target-i386/cpu.c
@@ -150,6 +150,17 @@ static const char *cpuid_7_0_ebx_feature_name[] = {
     NULL, NULL, "avx512pf", "avx512er", "avx512cd", NULL, NULL, NULL,
 };
 
+static const char *cpuid_7_0_ecx_feature_name[] = {
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+    NULL, NULL, NULL, NULL,
+};
+
 static const char *cpuid_xsave_feature_name[] = {
     "xsaveopt", "xsavec", "xgetbv1", NULL,
     NULL, NULL, NULL, NULL,
@@ -204,6 +215,12 @@ static FeatureWordInfo feature_word_info[FEATURE_WORDS] = {
         .cpuid_needs_ecx = true, .cpuid_ecx = 0,
         .cpuid_reg = R_EBX,
     },
+    [FEAT_7_0_ECX] = {
+        .feat_names = cpuid_7_0_ecx_feature_name,
+        .cpuid_eax = 7,
+        .cpuid_needs_ecx = true, .cpuid_ecx = 0,
+        .cpuid_reg = R_ECX,
+    },
     [FEAT_XSAVE] = {
         .feat_names = cpuid_xsave_feature_name,
         .cpuid_eax = 0xd,
@@ -462,6 +479,7 @@ typedef struct x86_def_t {
           CPUID_7_0_EBX_FSGSBASE, CPUID_7_0_EBX_HLE, CPUID_7_0_EBX_AVX2,
           CPUID_7_0_EBX_ERMS, CPUID_7_0_EBX_INVPCID, CPUID_7_0_EBX_RTM,
           CPUID_7_0_EBX_RDSEED */
+#define TCG_7_0_ECX_FEATURES 0
 
 /* built-in CPU model definitions
  */
@@ -1198,8 +1216,11 @@ static void kvm_cpu_fill_host(x86_def_t *x86_cpu_def)
     if (x86_cpu_def->level >= 7) {
         x86_cpu_def->features[FEAT_7_0_EBX] =
                     kvm_arch_get_supported_cpuid(s, 0x7, 0, R_EBX);
+        x86_cpu_def->features[FEAT_7_0_ECX] =
+                    kvm_arch_get_supported_cpuid(s, 0x7, 0, R_ECX);
     } else {
         x86_cpu_def->features[FEAT_7_0_EBX] = 0;
+        x86_cpu_def->features[FEAT_7_0_ECX] = 0;
     }
     x86_cpu_def->features[FEAT_XSAVE] =
                 kvm_arch_get_supported_cpuid(s, 0xd, 1, R_EAX);
@@ -1283,6 +1304,9 @@ static int kvm_check_features_against_host(X86CPU *cpu)
         {&env->features[FEAT_7_0_EBX],
             &host_def.features[FEAT_7_0_EBX],
             FEAT_7_0_EBX },
+        {&env->features[FEAT_7_0_ECX],
+            &host_def.features[FEAT_7_0_ECX],
+            FEAT_7_0_ECX },
         {&env->features[FEAT_XSAVE],
             &host_def.features[FEAT_XSAVE],
             FEAT_XSAVE },
@@ -1824,6 +1848,7 @@ static void cpu_x86_parse_featurestr(X86CPU *cpu, char *features, Error **errp)
     env->features[FEAT_KVM] |= plus_features[FEAT_KVM];
     env->features[FEAT_SVM] |= plus_features[FEAT_SVM];
     env->features[FEAT_7_0_EBX] |= plus_features[FEAT_7_0_EBX];
+    env->features[FEAT_7_0_ECX] |= plus_features[FEAT_7_0_ECX];
     env->features[FEAT_XSAVE] |= plus_features[FEAT_XSAVE];
     env->features[FEAT_1_EDX] &= ~minus_features[FEAT_1_EDX];
     env->features[FEAT_1_ECX] &= ~minus_features[FEAT_1_ECX];
@@ -1833,6 +1858,7 @@ static void cpu_x86_parse_featurestr(X86CPU *cpu, char *features, Error **errp)
     env->features[FEAT_KVM] &= ~minus_features[FEAT_KVM];
     env->features[FEAT_SVM] &= ~minus_features[FEAT_SVM];
     env->features[FEAT_7_0_EBX] &= ~minus_features[FEAT_7_0_EBX];
+    env->features[FEAT_7_0_ECX] &= ~minus_features[FEAT_7_0_ECX];
     env->features[FEAT_XSAVE] &= ~minus_features[FEAT_XSAVE];
 
 out:
@@ -1969,6 +1995,7 @@ static void cpu_x86_register(X86CPU *cpu, const char *name, Error **errp)
     env->features[FEAT_SVM] = def->features[FEAT_SVM];
     env->features[FEAT_C000_0001_EDX] = def->features[FEAT_C000_0001_EDX];
     env->features[FEAT_7_0_EBX] = def->features[FEAT_7_0_EBX];
+    env->features[FEAT_7_0_ECX] = def->features[FEAT_7_0_ECX];
     env->features[FEAT_XSAVE] = def->features[FEAT_XSAVE];
     env->cpuid_xlevel2 = def->xlevel2;
 
@@ -2206,7 +2233,7 @@ void cpu_x86_cpuid(CPUX86State *env, uint32_t index, uint32_t count,
         if (count == 0) {
             *eax = 0; /* Maximum ECX value for sub-leaves */
             *ebx = env->features[FEAT_7_0_EBX]; /* Feature flags */
-            *ecx = 0; /* Reserved */
+            *ecx = env->features[FEAT_7_0_ECX]; /* Feature flags */
             *edx = 0; /* Reserved */
         } else {
             *eax = 0;
diff --git a/target-i386/cpu.h b/target-i386/cpu.h
index da7e060..5c62ee3 100644
--- a/target-i386/cpu.h
+++ b/target-i386/cpu.h
@@ -400,6 +400,7 @@ typedef enum FeatureWord {
     FEAT_1_EDX,         /* CPUID[1].EDX */
     FEAT_1_ECX,         /* CPUID[1].ECX */
     FEAT_7_0_EBX,       /* CPUID[EAX=7,ECX=0].EBX */
+    FEAT_7_0_ECX,       /* CPUID[EAX=7,ECX=0].ECX */
     FEAT_8000_0001_EDX, /* CPUID[8000_0001].EDX */
     FEAT_8000_0001_ECX, /* CPUID[8000_0001].ECX */
     FEAT_C000_0001_EDX, /* CPUID[C000_0001].EDX */
-- 
1.8.3.1

