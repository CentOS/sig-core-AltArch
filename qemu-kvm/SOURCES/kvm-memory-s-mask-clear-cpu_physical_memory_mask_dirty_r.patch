From 7565f009dfdc2a54fab24deb0a5887be00777acc Mon Sep 17 00:00:00 2001
From: Juan Quintela <quintela@redhat.com>
Date: Tue, 14 Jan 2014 15:07:35 +0100
Subject: [PATCH 24/40] memory: s/mask/clear/ cpu_physical_memory_mask_dirty_range

RH-Author: Juan Quintela <quintela@redhat.com>
Message-id: <1389712071-23303-25-git-send-email-quintela@redhat.com>
Patchwork-id: 56679
O-Subject: [RHEL7 qemu-kvm PATCH 24/40] memory: s/mask/clear/ cpu_physical_memory_mask_dirty_range
Bugzilla: 997559
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>
RH-Acked-by: Orit Wasserman <owasserm@redhat.com>
RH-Acked-by: Dr. David Alan Gilbert (git) <dgilbert@redhat.com>

Now all functions use the same wording that bitops/bitmap operations

Signed-off-by: Juan Quintela <quintela@redhat.com>
Reviewed-by: Eric Blake <eblake@redhat.com>
Reviewed-by: Orit Wasserman <owasserm@redhat.com>
(cherry picked from commit ace694cccccf343852d9f0b34171ad475e248bbf)
Signed-off-by: Juan Quintela <quintela@trasno.org>
---
 exec.c                         | 2 +-
 include/exec/memory-internal.h | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>
---
 exec.c                         |    2 +-
 include/exec/memory-internal.h |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/exec.c b/exec.c
index 45b2c46..77c2a0a 100644
--- a/exec.c
+++ b/exec.c
@@ -606,7 +606,7 @@ void cpu_physical_memory_reset_dirty(ram_addr_t start, ram_addr_t end,
     length = end - start;
     if (length == 0)
         return;
-    cpu_physical_memory_mask_dirty_range(start, length, client);
+    cpu_physical_memory_clear_dirty_range(start, length, client);
 
     if (tcg_enabled()) {
         tlb_reset_dirty_range_all(start, end, length);
diff --git a/include/exec/memory-internal.h b/include/exec/memory-internal.h
index f27b830..caff5b4 100644
--- a/include/exec/memory-internal.h
+++ b/include/exec/memory-internal.h
@@ -109,9 +109,9 @@ static inline void cpu_physical_memory_set_dirty_range(ram_addr_t start,
     xen_modified_memory(addr, length);
 }
 
-static inline void cpu_physical_memory_mask_dirty_range(ram_addr_t start,
-                                                        ram_addr_t length,
-                                                        unsigned client)
+static inline void cpu_physical_memory_clear_dirty_range(ram_addr_t start,
+                                                         ram_addr_t length,
+                                                         unsigned client)
 {
     ram_addr_t addr, end;
 
-- 
1.7.1

