--- openjdk.orig/common/autoconf/boot-jdk.m4	2016-01-21 18:33:47.586288044 +0000
+++ openjdk/common/autoconf/boot-jdk.m4	2016-02-05 15:56:09.012242707 +0000
@@ -1,5 +1,6 @@
 #
 # Copyright (c) 2011, 2012, Oracle and/or its affiliates. All rights reserved.
+# Copyright 2014 Red Hat, Inc.
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 #
 # This code is free software; you can redistribute it and/or modify it
@@ -303,6 +323,9 @@
 
 AC_DEFUN_ONCE([BOOTJDK_SETUP_BOOT_JDK_ARGUMENTS],
 [
+  # Ensure OPENJDK_TARGET_CPU_ARCH has been setup
+  AC_REQUIRE([PLATFORM_SETUP_OPENJDK_BUILD_AND_TARGET])
+
   ##############################################################################
   #
   # Specify options for anything that is run with the Boot JDK.
@@ -325,16 +348,23 @@
   JAVA_FLAGS=$boot_jdk_jvmargs
   AC_SUBST(JAVA_FLAGS)
 
-
   AC_MSG_CHECKING([flags for boot jdk java command for big workloads])
 
   # Starting amount of heap memory.
-  ADD_JVM_ARG_IF_OK([-Xms64M],boot_jdk_jvmargs_big,[$JAVA])
+  if test "x$OPENJDK_BUILD_CPU_ARCH" = "xs390"; then
+    ADD_JVM_ARG_IF_OK([-Xms256M],boot_jdk_jvmargs_big,[$JAVA])
+  else
+    ADD_JVM_ARG_IF_OK([-Xms64M],boot_jdk_jvmargs_big,[$JAVA])
+  fi
 
   # Maximum amount of heap memory.
   # Maximum stack size.
   if test "x$BOOT_JDK_BITS" = x32; then
-    JVM_MAX_HEAP=1100M
+    if test "x$OPENJDK_BUILD_CPU_ARCH" = "xs390"; then
+      JVM_MAX_HEAP=768M
+    else
+      JVM_MAX_HEAP=1100M
+    fi
     STACK_SIZE=768
   else
     # Running Javac on a JVM on a 64-bit machine, takes more space since 64-bit
