#!/bin/sh
#
# bacula-sd Takes care of starting and stopping the Bacula Storage Daemon.
#
# chkconfig: - 80 20
# description: The Bacula Storage Daemon is the daemon responsible for saving \
#              backed up data on the various File Daemon to the appropriate \
#              storage devices.

### BEGIN INIT INFO
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: Bacula Storage Daemon.
# Description: The Bacula Storage Daemon is the daemon responsible for saving
#              backed up data on the various File Daemon to the appropriate
#              storage devices.
### END INIT INFO

# Source function library.
. /etc/init.d/functions

exec="/usr/sbin/bacula-sd"
prog="bacula-sd"
CONFIG="/etc/bacula/bacula-sd.conf"
OPTS="-c $CONFIG"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

if [ "$SD_USER" != '' ]; then
        OPTS="$OPTS -u $SD_USER"
fi

if [ "$SD_GROUP" != '' ]; then
        OPTS="$OPTS -g $SD_GROUP"
fi

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    daemon $prog $OPTS
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    sleep 2
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
