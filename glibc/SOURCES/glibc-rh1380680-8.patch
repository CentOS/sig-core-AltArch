From a6e4fa635fea4576c65747cc4b9e3a1fe9c9911f Mon Sep 17 00:00:00 2001
From: Stefan Liebler <stli@linux.vnet.ibm.com>
Date: Mon, 7 Nov 2016 16:12:24 +0100
Subject: [PATCH 08/17] S390: Use __asm__ instead of asm.

upstream commit 31cf39421bae23ffc7b6c6a229e14f8faa41608f

This part is a prerequirement for the s390 iconv patches.
---
 sysdeps/s390/s390-64/utf16-utf32-z9.c | 28 ++++++++++++++--------------
 sysdeps/s390/s390-64/utf8-utf16-z9.c  | 28 ++++++++++++++--------------
 sysdeps/s390/s390-64/utf8-utf32-z9.c  | 28 ++++++++++++++--------------
 3 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/sysdeps/s390/s390-64/utf16-utf32-z9.c b/sysdeps/s390/s390-64/utf16-utf32-z9.c
index ddc42fe..e6a033d 100644
--- a/sysdeps/s390/s390-64/utf16-utf32-z9.c
+++ b/sysdeps/s390/s390-64/utf16-utf32-z9.c
@@ -163,22 +163,22 @@ gconv_end (struct __gconv_step *data)
    directions.  */
 #define HARDWARE_CONVERT(INSTRUCTION)					\
   {									\
-    register const unsigned char* pInput asm ("8") = inptr;		\
-    register unsigned long long inlen asm ("9") = inend - inptr;	\
-    register unsigned char* pOutput asm ("10") = outptr;		\
-    register unsigned long long outlen asm("11") = outend - outptr;	\
+    register const unsigned char* pInput __asm__ ("8") = inptr;		\
+    register unsigned long long inlen __asm__ ("9") = inend - inptr;	\
+    register unsigned char* pOutput __asm__ ("10") = outptr;		\
+    register unsigned long long outlen __asm__("11") = outend - outptr;	\
     uint64_t cc = 0;							\
 									\
-    asm volatile (".machine push       \n\t"				\
-                  ".machine \"z9-109\" \n\t"				\
-		  "0: " INSTRUCTION "  \n\t"				\
-                  ".machine pop        \n\t"				\
-                  "   jo     0b        \n\t"				\
-		  "   ipm    %2        \n"			        \
-		  : "+a" (pOutput), "+a" (pInput), "+d" (cc),		\
-		    "+d" (outlen), "+d" (inlen)				\
-		  :							\
-		  : "cc", "memory");					\
+    __asm__ volatile (".machine push       \n\t"			\
+		      ".machine \"z9-109\" \n\t"			\
+		      "0: " INSTRUCTION "  \n\t"			\
+		      ".machine pop        \n\t"			\
+		      "   jo     0b        \n\t"			\
+		      "   ipm    %2        \n"				\
+		      : "+a" (pOutput), "+a" (pInput), "+d" (cc),	\
+		      "+d" (outlen), "+d" (inlen)			\
+		      :							\
+		      : "cc", "memory");				\
 									\
     inptr = pInput;							\
     outptr = pOutput;							\
diff --git a/sysdeps/s390/s390-64/utf8-utf16-z9.c b/sysdeps/s390/s390-64/utf8-utf16-z9.c
index 2c2d92c..6dad1c2 100644
--- a/sysdeps/s390/s390-64/utf8-utf16-z9.c
+++ b/sysdeps/s390/s390-64/utf8-utf16-z9.c
@@ -145,22 +145,22 @@ gconv_end (struct __gconv_step *data)
    directions.  */
 #define HARDWARE_CONVERT(INSTRUCTION)					\
   {									\
-    register const unsigned char* pInput asm ("8") = inptr;		\
-    register unsigned long long inlen asm ("9") = inend - inptr;	\
-    register unsigned char* pOutput asm ("10") = outptr;		\
-    register unsigned long long outlen asm("11") = outend - outptr;	\
+    register const unsigned char* pInput __asm__ ("8") = inptr;		\
+    register unsigned long long inlen __asm__ ("9") = inend - inptr;	\
+    register unsigned char* pOutput __asm__ ("10") = outptr;		\
+    register unsigned long long outlen __asm__("11") = outend - outptr;	\
     uint64_t cc = 0;							\
 									\
-    asm volatile (".machine push       \n\t"				\
-                  ".machine \"z9-109\" \n\t"				\
-		  "0: " INSTRUCTION "  \n\t"				\
-                  ".machine pop        \n\t"				\
-                  "   jo     0b        \n\t"				\
-		  "   ipm    %2        \n"			        \
-		  : "+a" (pOutput), "+a" (pInput), "+d" (cc),		\
-		    "+d" (outlen), "+d" (inlen)				\
-		  :							\
-		  : "cc", "memory");					\
+    __asm__ volatile (".machine push       \n\t"			\
+		      ".machine \"z9-109\" \n\t"			\
+		      "0: " INSTRUCTION "  \n\t"			\
+		      ".machine pop        \n\t"			\
+		      "   jo     0b        \n\t"			\
+		      "   ipm    %2        \n"				\
+		      : "+a" (pOutput), "+a" (pInput), "+d" (cc),	\
+			"+d" (outlen), "+d" (inlen)			\
+		      :							\
+		      : "cc", "memory");				\
 									\
     inptr = pInput;							\
     outptr = pOutput;							\
diff --git a/sysdeps/s390/s390-64/utf8-utf32-z9.c b/sysdeps/s390/s390-64/utf8-utf32-z9.c
index c582155..721279e 100644
--- a/sysdeps/s390/s390-64/utf8-utf32-z9.c
+++ b/sysdeps/s390/s390-64/utf8-utf32-z9.c
@@ -149,22 +149,22 @@ gconv_end (struct __gconv_step *data)
    directions.  */
 #define HARDWARE_CONVERT(INSTRUCTION)					\
   {									\
-    register const unsigned char* pInput asm ("8") = inptr;		\
-    register unsigned long long inlen asm ("9") = inend - inptr;	\
-    register unsigned char* pOutput asm ("10") = outptr;		\
-    register unsigned long long outlen asm("11") = outend - outptr;	\
+    register const unsigned char* pInput __asm__ ("8") = inptr;		\
+    register unsigned long long inlen __asm__ ("9") = inend - inptr;	\
+    register unsigned char* pOutput __asm__ ("10") = outptr;		\
+    register unsigned long long outlen __asm__("11") = outend - outptr;	\
     uint64_t cc = 0;							\
 									\
-    asm volatile (".machine push       \n\t"				\
-                  ".machine \"z9-109\" \n\t"				\
-		  "0: " INSTRUCTION "  \n\t"				\
-                  ".machine pop        \n\t"				\
-                  "   jo     0b        \n\t"				\
-		  "   ipm    %2        \n"				\
-		  : "+a" (pOutput), "+a" (pInput), "+d" (cc),		\
-		    "+d" (outlen), "+d" (inlen)				\
-		  :							\
-		  : "cc", "memory");					\
+    __asm__ volatile (".machine push       \n\t"			\
+		      ".machine \"z9-109\" \n\t"			\
+		      "0: " INSTRUCTION "  \n\t"			\
+		      ".machine pop        \n\t"			\
+		      "   jo     0b        \n\t"			\
+		      "   ipm    %2        \n"				\
+		      : "+a" (pOutput), "+a" (pInput), "+d" (cc),	\
+		      "+d" (outlen), "+d" (inlen)			\
+		      :							\
+		      : "cc", "memory");				\
 									\
     inptr = pInput;							\
     outptr = pOutput;							\
-- 
1.8.3.1

