--- a/iconvdata/Makefile
+++ b/iconvdata/Makefile
@@ -67,7 +67,8 @@
 
 ifeq (yes,$(build-shared))
 tests = bug-iconv1 bug-iconv2 tst-loading tst-e2big tst-iconv4 bug-iconv4 \
-	tst-iconv6 bug-iconv5 bug-iconv6 tst-iconv7 bug-iconv8 bug-iconv9
+	tst-iconv6 bug-iconv5 bug-iconv6 tst-iconv7 bug-iconv8 bug-iconv9 \
+	bug-iconv10
 ifeq ($(have-thread-library),yes)
 tests += bug-iconv3
 endif
@@ -286,6 +287,8 @@
 			 $(addprefix $(objpfx),$(modules.so))
 $(objpfx)bug-iconv5.out: $(objpfx)gconv-modules \
 			 $(addprefix $(objpfx),$(modules.so))
+$(objpfx)bug-iconv10.out: $(objpfx)gconv-modules \
+			  $(addprefix $(objpfx),$(modules.so))
 $(objpfx)tst-loading.out: $(objpfx)gconv-modules \
 			  $(addprefix $(objpfx),$(modules.so))
 $(objpfx)tst-iconv4.out: $(objpfx)gconv-modules \

diff --git a/iconvdata/bug-iconv10.c b/iconvdata/bug-iconv10.c
new file mode 100644
index 0000000..98353a2
--- /dev/null
+++ b/iconvdata/bug-iconv10.c
@@ -0,0 +1,77 @@ 
+/* bug 17197: check for redundant shift character at block boundary.
+   Copyright (C) 2015 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include <iconv.h>
+#include <locale.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <errno.h>
+
+static int
+do_test (void)
+{
+  iconv_t cd = iconv_open ("IBM930", "UTF-8");
+  if (cd == (iconv_t) -1)
+    {
+      puts ("iconv_open failed");
+      return 1;
+    }
+
+  char instr1[] = "\xc2\xa6.";
+  const char expstr1[4] = "\016Bj\017";
+  const char expstr2[] = "K";
+  char outstr[4];
+  size_t inlen = sizeof (instr1);
+  size_t outlen = sizeof (outstr);
+  char *inptr = instr1;
+  char *outptr = outstr;
+  size_t r = iconv (cd, &inptr, &inlen, &outptr, &outlen);
+  if (r != -1
+      || errno != E2BIG
+      || inlen != sizeof (instr1) - 2
+      || inptr != instr1 + 2
+      || outlen != 0
+      || memcmp (outstr, expstr1, sizeof (expstr1)) != 0)
+    {
+      puts ("wrong first conversion");
+      return 1;
+    }
+
+  outlen = sizeof (outstr);
+  outptr = outstr;
+  r = iconv (cd, &inptr, &inlen, &outptr, &outlen);
+  if (r != 0
+      || inlen != 0
+      || outlen != sizeof (outstr) - sizeof (expstr2)
+      || memcmp (outstr, expstr2, sizeof (expstr2)) != 0)
+    {
+      puts ("wrong second conversion");
+      return 1;
+    }
+
+  if (iconv_close (cd) != 0)
+    {
+      puts ("iconv_close failed");
+      return 1;
+    }
+  return 0;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
--- a/iconvdata/ibm930.c	2015-12-01 18:13:56.799658234 -0500
+++ b/iconvdata/ibm930.c	2015-12-01 18:14:12.729906742 -0500
@@ -257,6 +257,7 @@ enum
 		break;							      \
 	      }								      \
 	    *outptr++ = SI;						      \
+	    curcs = sb;							      \
 	  }								      \
 									      \
 	if (__builtin_expect (outptr + 1 > outend, 0))			      \
@@ -270,7 +271,6 @@ enum
 	  *outptr++ = 0x5b;						      \
 	else								      \
 	  *outptr++ = cp[0];						      \
-	curcs = sb;							      \
       }									      \
 									      \
     /* Now that we wrote the output increment the input pointer.  */	      \
--- a/iconvdata/ibm933.c	2015-12-01 18:13:56.799658234 -0500
+++ b/iconvdata/ibm933.c	2015-12-01 18:14:12.729906742 -0500
@@ -255,6 +255,7 @@ enum
 		break;							      \
 	      }								      \
 	    *outptr++ = SI;						      \
+	    curcs = sb;							      \
 	  }								      \
 									      \
 	if (__builtin_expect (outptr + 1 > outend, 0))			      \
@@ -263,7 +264,6 @@ enum
 	    break;							      \
 	  }								      \
 	*outptr++ = cp[0];						      \
-	curcs = sb;							      \
       }									      \
 									      \
     /* Now that we wrote the output increment the input pointer.  */	      \
--- a/iconvdata/ibm935.c	2015-12-01 18:13:56.799658234 -0500
+++ b/iconvdata/ibm935.c	2015-12-01 18:14:12.729906742 -0500
@@ -255,6 +255,7 @@ enum
 		break;							      \
 	      }								      \
 	    *outptr++ = SI;						      \
+	    curcs = sb;							      \
 	  }								      \
 									      \
 	if (__builtin_expect (outptr + 1 > outend, 0))			      \
@@ -263,7 +264,6 @@ enum
 	    break;							      \
 	  }								      \
 	*outptr++ = cp[0];						      \
-	curcs = sb;							      \
       }									      \
 									      \
     /* Now that we wrote the output increment the input pointer.  */	      \
--- a/iconvdata/ibm937.c	2015-12-01 18:13:56.799658234 -0500
+++ b/iconvdata/ibm937.c	2015-12-01 18:14:12.729906742 -0500
@@ -255,6 +255,7 @@ enum
 		break;							      \
 	      }								      \
 	    *outptr++ = SI;						      \
+	    curcs = sb;							      \
 	  }								      \
 									      \
 	if (__builtin_expect (outptr + 1 > outend, 0))			      \
@@ -263,7 +264,6 @@ enum
 	    break;							      \
 	  }								      \
 	*outptr++ = cp[0];						      \
-	curcs = sb;							      \
       }									      \
 									      \
     /* Now that we wrote the output increment the input pointer.  */	      \
--- a/iconvdata/ibm939.c	2015-12-01 18:13:56.799658234 -0500
+++ b/iconvdata/ibm939.c	2015-12-01 18:14:12.739906898 -0500
@@ -255,6 +255,7 @@ enum
 		break;							      \
 	      }								      \
 	    *outptr++ = SI;						      \
+	    curcs = sb;							      \
 	  }								      \
 									      \
 	if (__builtin_expect (outptr + 1 > outend, 0))			      \
@@ -268,7 +269,6 @@ enum
 	  *outptr++ = 0xb2;						      \
 	else								      \
 	  *outptr++ = cp[0];						      \
-	curcs = sb;							      \
       }									      \
 									      \
     /* Now that we wrote the output increment the input pointer.  */	      \
