From b642904ea9640bd7a1573a8c0d2c5bcb43a10dfc Mon Sep 17 00:00:00 2001
From: Takeshi MIZUTA <miz.take4@gmail.com>
Date: Sat, 26 Nov 2016 01:12:03 +0900
Subject: [PATCH] man: Fix typos in man page

Signed-off-by: Takeshi MIZUTA <miz.take4@gmail.com>
Reviewed-by: Jan Friesse <jfriesse@redhat.com>
(cherry picked from commit fef5e117aac8362a056a966b453cf2624a1fa9ba)
---
 man/cmap_context_set.3.in         |    2 +-
 man/cmap_dec.3.in                 |    2 +-
 man/cmap_delete.3.in              |    2 +-
 man/cmap_dispatch.3.in            |    2 +-
 man/cmap_get.3.in                 |    2 +-
 man/cmap_inc.3.in                 |    2 +-
 man/cmap_initialize.3.in          |    2 +-
 man/cmap_iter_finalize.3.in       |    2 +-
 man/cmap_iter_next.3.in           |    4 ++--
 man/cmap_keys.8                   |    2 +-
 man/cmap_set.3.in                 |    2 +-
 man/cmap_track_add.3.in           |    2 +-
 man/corosync-notifyd.8            |    2 +-
 man/corosync-qdevice.8            |    2 +-
 man/corosync.8                    |    2 +-
 man/corosync.conf.5               |   14 +++++++-------
 man/cpg_dispatch.3.in             |    2 +-
 man/cpg_initialize.3.in           |    2 +-
 man/cpg_iteration_finalize.3.in   |    2 +-
 man/cpg_mcast_joined.3.in         |    2 +-
 man/cpg_model_initialize.3.in     |    2 +-
 man/cpg_zcb_alloc.3.in            |    2 +-
 man/cpg_zcb_mcast_joined.3.in     |    2 +-
 man/ipc_common.sh.errors          |    6 +++---
 man/quorum_context_set.3.in       |    2 +-
 man/quorum_dispatch.3.in          |    2 +-
 man/quorum_getquorate.3.in        |    2 +-
 man/sam_data_store.3.in           |    2 +-
 man/sam_hc_callback_register.3.in |    4 ++--
 man/sam_hc_send.3.in              |    4 ++--
 man/sam_overview.8                |    2 +-
 man/votequorum.5                  |    2 +-
 man/votequorum_context_set.3.in   |    2 +-
 man/votequorum_dispatch.3.in      |    2 +-
 man/votequorum_finalize.3.in      |    2 +-
 man/votequorum_initialize.3.in    |    2 +-
 36 files changed, 47 insertions(+), 47 deletions(-)

diff --git a/man/cmap_context_set.3.in b/man/cmap_context_set.3.in
index da1f60c..cacef0d 100644
--- a/man/cmap_context_set.3.in
+++ b/man/cmap_context_set.3.in
@@ -48,7 +48,7 @@ cmap_context_set (cmap_handle_t \fIhandle\fB, const void *\fIcontext\fB);\fR
 .SH DESCRIPTION
 .P
 The \fBcmap_context_set\fR function is used to store the context variable for cmap instance.
-It has no meaning insire libcmap itself and will not be touched by the library. It can
+It has no meaning inside libcmap itself and will not be touched by the library. It can
 be retrieved using
 .B cmap_context_get(3).
 
diff --git a/man/cmap_dec.3.in b/man/cmap_dec.3.in
index 614c96e..c832241 100644
--- a/man/cmap_dec.3.in
+++ b/man/cmap_dec.3.in
@@ -82,7 +82,7 @@ Overflow/underflow is not detected and it's ignored.
 This call returns the CS_OK value if successful. If value or key_name are unspecified, CS_ERR_INVALID_PARAM
 is returned. CS_ERR_NOT_EXIST error is returned if key doesn't exist (wasn't created by calling
 .B cmap_set(3)
-first). Some of keys may be tagged read-only directly in corosync and seting such key will result in
+first). Some of keys may be tagged read-only directly in corosync and setting such key will result in
 CS_ERR_ACCESS error.
 
 .SH "SEE ALSO"
diff --git a/man/cmap_delete.3.in b/man/cmap_delete.3.in
index e2ee07d..a6ae710 100644
--- a/man/cmap_delete.3.in
+++ b/man/cmap_delete.3.in
@@ -60,7 +60,7 @@ function.
 is name of key to delete.
 
 .SH RETURN VALUE
-This call returns the CS_OK value if successful. If  key_name is unspecified, CS_ERR_INVALID_PARAM
+This call returns the CS_OK value if successful. If key_name is unspecified, CS_ERR_INVALID_PARAM
 is returned. For nonexisting keys, CS_ERR_NOT_EXIST error is returned. Some of keys may be tagged
 read-only directly in corosync and deleting such key will result in CS_ERR_ACCESS error.
 
diff --git a/man/cmap_dispatch.3.in b/man/cmap_dispatch.3.in
index b791a5e..b4fa2ba 100644
--- a/man/cmap_dispatch.3.in
+++ b/man/cmap_dispatch.3.in
@@ -50,7 +50,7 @@ The
 .B cmap_dispatch
 function is used to dispatch configuration changes.
 .PP
-Each application may have several connections to the CMAP API.  Each  application
+Each application may have several connections to the CMAP API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.
diff --git a/man/cmap_get.3.in b/man/cmap_get.3.in
index f3615a6..15c73e6 100644
--- a/man/cmap_get.3.in
+++ b/man/cmap_get.3.in
@@ -127,7 +127,7 @@ then nothing is stored. Type can be one of:
 .PP
 \fBCMAP_VALUETYPE_BINARY\fR - Binary data, byte with zero value has no special meaning
 
-Sortcut functions tests cmap type with it's own type. If type didn't match, CS_ERR_INVALID_PARAM error
+Shortcut functions tests cmap type with it's own type. If type didn't match, CS_ERR_INVALID_PARAM error
 is returned. No conversions are done, so for example
 .B cmap_get_int16
 is not able to return value with
diff --git a/man/cmap_inc.3.in b/man/cmap_inc.3.in
index 0320065..69ac851 100644
--- a/man/cmap_inc.3.in
+++ b/man/cmap_inc.3.in
@@ -82,7 +82,7 @@ Overflow/underflow is not detected and it's ignored.
 This call returns the CS_OK value if successful. If value or key_name are unspecified, CS_ERR_INVALID_PARAM
 is returned. CS_ERR_NOT_EXIST error is returned if key doesn't exist (wasn't created by calling
 .B cmap_set(3)
-first). Some of keys may be tagged read-only directly in corosync and seting such key will result in
+first). Some of keys may be tagged read-only directly in corosync and setting such key will result in
 CS_ERR_ACCESS error.
 
 .SH "SEE ALSO"
diff --git a/man/cmap_initialize.3.in b/man/cmap_initialize.3.in
index 8bdb017..b6342e9 100644
--- a/man/cmap_initialize.3.in
+++ b/man/cmap_initialize.3.in
@@ -48,7 +48,7 @@ cmap_initialize \- Initialize CMAP API
 .P
 The \fBcmap_initialize\fR function is used to initialize a connection to
 the Configuration Map API. Each application may have several connections to the CMAP API.
-Each  application uses the
+Each application uses the
 .I handle
 argument to uniquely identify the connection.  The
 .I handle
diff --git a/man/cmap_iter_finalize.3.in b/man/cmap_iter_finalize.3.in
index 51cd590..8b03d01 100644
--- a/man/cmap_iter_finalize.3.in
+++ b/man/cmap_iter_finalize.3.in
@@ -49,7 +49,7 @@ cmap_iter_finalize (cmap_handle_t \fIhandle\fB, cmap_iter_handle_t \fIiter_handl
 .P
 The
 .B cmap_iter_finalize
-function is used to free up memory asociated with iteration obtained by calling of
+function is used to free up memory associated with iteration obtained by calling of
 .B cmap_iter_init(3)
 function.
 The
diff --git a/man/cmap_iter_next.3.in b/man/cmap_iter_next.3.in
index edc29f8..b09a584 100644
--- a/man/cmap_iter_next.3.in
+++ b/man/cmap_iter_next.3.in
@@ -60,8 +60,8 @@ argument is iterator handle obtained by
 .B cmap_iter_init(3)
 function. Following key name is stored inside
 .I key_name
-argument, which must be preallocated by caller and its quaranted maximum size is CMAP_KEYNAME_MAXLEN
-(urrently 255).
+argument, which must be preallocated by caller and its guaranteed maximum size is CMAP_KEYNAME_MAXLEN
+(currently 255).
 .I value_len
 is pointer where length of value is stored, but can be NULL.
 .I type
diff --git a/man/cmap_keys.8 b/man/cmap_keys.8
index 7517788..b0cd721 100644
--- a/man/cmap_keys.8
+++ b/man/cmap_keys.8
@@ -282,7 +282,7 @@ entries has uidgid.* prefix and a configuration file reload doesn't affect them.
 .TP
 quorum.cancel_wait_for_all
 Tells votequorum to cancel waiting for all nodes at cluster startup. Can be used
-to unblock quorum if notes are known to be down. for pcs use only.
+to unblock quorum if notes are known to be down. For pcs use only.
 
 .TP
 config.reload_in_progress
diff --git a/man/cmap_set.3.in b/man/cmap_set.3.in
index 8dcb88c..e854cf5 100644
--- a/man/cmap_set.3.in
+++ b/man/cmap_set.3.in
@@ -119,7 +119,7 @@ which gives type of value. It may be one of:
 .SH RETURN VALUE
 This call returns the CS_OK value if successful. If value or key_name are unspecified, CS_ERR_INVALID_PARAM
 is returned. Too short or too long key_name returns CS_ERR_NAME_TOO_LONG error code. Some of keys may
-be tagged read-only directly in corosync and seting such key will result in CS_ERR_ACCESS error.
+be tagged read-only directly in corosync and setting such key will result in CS_ERR_ACCESS error.
 
 .SH "SEE ALSO"
 .BR cmap_get (3),
diff --git a/man/cmap_track_add.3.in b/man/cmap_track_add.3.in
index 0cf9fa8..32b35d0 100644
--- a/man/cmap_track_add.3.in
+++ b/man/cmap_track_add.3.in
@@ -120,7 +120,7 @@ is \fBCMAP_TRACK_DELETE\fR.
 .I old_value
 is previous value of key or unset if
 .I event
-is \fBCMAP_TRACK_ADD\fR or for some special keys set directly by Corosync due to speed optimalizations.
+is \fBCMAP_TRACK_ADD\fR or for some special keys set directly by Corosync due to speed optimizations.
 Both
 .I new_value
 and
diff --git a/man/corosync-notifyd.8 b/man/corosync-notifyd.8
index 0bb0cfb..822d138 100644
--- a/man/corosync-notifyd.8
+++ b/man/corosync-notifyd.8
@@ -39,7 +39,7 @@ corosync-notifyd \- Listen for important corosync events and send dbus and/or sn
 .SH DESCRIPTION
 .B corosync-notifyd
 uses corosync API to listen for important cluster events and can log them,
-generate dbus signals or genterate snmp traps.
+generate dbus signals or generate snmp traps.
 .SH OPTIONS
 .TP
 .B -f
diff --git a/man/corosync-qdevice.8 b/man/corosync-qdevice.8
index fbeb328..20024af 100644
--- a/man/corosync-qdevice.8
+++ b/man/corosync-qdevice.8
@@ -226,7 +226,7 @@ qnetd server then we return a vote.
 If more than one node can see the qnetd server but some nodes can't
 see each other then the cluster is divided up into 'partitions' based on
 their ring_id and this algorithm returns a vote to the largest active partition or, 
-if there is more than 1 equal partiton, the partition that contains the tie_breaker 
+if there is more than 1 equal partition, the partition that contains the tie_breaker 
 node (lowest, highest, etc). For LMS to work, the number
 of qdevice votes has to be set to default (so just delete
 .B quorum.device.votes
diff --git a/man/corosync.8 b/man/corosync.8
index 41f634f..b5451ad 100644
--- a/man/corosync.8
+++ b/man/corosync.8
@@ -38,7 +38,7 @@ corosync \- The Corosync Cluster Engine.
 .B "corosync [\-f] [\-p] [\-r] [\-v]"
 .SH DESCRIPTION
 .B corosync
-Corosync provides clustering infracture such as membership, messaging and quorum.
+Corosync provides clustering infrastructure such as membership, messaging and quorum.
 .SH OPTIONS
 .TP
 .B -f
diff --git a/man/corosync.conf.5 b/man/corosync.conf.5
index 00a7a38..55b21f2 100644
--- a/man/corosync.conf.5
+++ b/man/corosync.conf.5
@@ -346,7 +346,7 @@ The default is 50 milliseconds.
 .TP
 send_join
 This timeout specifies in milliseconds an upper range between 0 and send_join
-to wait before sending a join message.  For configurations with less then
+to wait before sending a join message.  For configurations with less than
 32 nodes, this parameter is not necessary.  For larger rings, this parameter
 is necessary to ensure the NIC is not overflowed with join messages on
 formation of a new ring.  A reasonable value for large rings (128 nodes) would
@@ -362,9 +362,9 @@ achieved before starting a new round of membership configuration.  The minimum
 value for consensus must be 1.2 * token.  This value will be automatically
 calculated at 1.2 * token if the user doesn't specify a consensus value.
 
-For two node clusters, a consensus larger then the join timeout but less then
+For two node clusters, a consensus larger than the join timeout but less than
 token is safe.  For three node or larger clusters, consensus should be larger
-then token.  There is an increasing risk of odd membership changes, which stil
+than token.  There is an increasing risk of odd membership changes, which still
 guarantee virtual synchrony,  as node count grows if consensus is less than
 token.
 
@@ -384,7 +384,7 @@ downcheck
 This timeout specifies in milliseconds how long to wait before checking
 that a network interface is back up after it has been downed.
 
-The default is 1000 millseconds.
+The default is 1000 milliseconds.
 
 .TP
 fail_recv_const
@@ -435,7 +435,7 @@ token rotation.  If all processors perform equally well, this value could be
 large (300), which would introduce higher latency from origination to delivery
 for very large rings.  To reduce latency in large rings(16+), the defaults are
 a safe compromise.  If 1 or more slow processor(s) are present among fast
-processors, window_size should be no larger then 256000 / netmtu to avoid
+processors, window_size should be no larger than 256000 / netmtu to avoid
 overflow of the kernel receive buffers.  The user is notified of this by
 the display of a retransmit list in the notification logs.  There is no loss
 of data, but performance is reduced when these errors occur.
@@ -629,7 +629,7 @@ The subsys entry, described below, is mandatory to identify the subsystem.
 .TP
 subsys
 This specifies the subsystem identity (name) for which logging is specified. This is the
-name used by a service in the log_init () call. E.g. 'CPG'. This directive is
+name used by a service in the log_init() call. E.g. 'CPG'. This directive is
 required.
 
 .PP
@@ -656,7 +656,7 @@ For UDPU, every node that should be a member of the membership must be specified
 Possible options are:
 .TP
 ringX_addr
-This specifies ip address of one of the nodes. X is ring number.
+This specifies IP address of one of the nodes. X is ring number.
 
 .TP
 nodeid
diff --git a/man/cpg_dispatch.3.in b/man/cpg_dispatch.3.in
index f824a3f..a71ca6a 100644
--- a/man/cpg_dispatch.3.in
+++ b/man/cpg_dispatch.3.in
@@ -44,7 +44,7 @@ The
 function is used to dispatch configuration changes or messages from the
 closed process groups API.
 .PP
-Each application may have several connections to the CPG API.  Each  application
+Each application may have several connections to the CPG API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.
diff --git a/man/cpg_initialize.3.in b/man/cpg_initialize.3.in
index 5012986..1c866cf 100644
--- a/man/cpg_initialize.3.in
+++ b/man/cpg_initialize.3.in
@@ -46,7 +46,7 @@ and
 .B cpg_model_initialize
 should be used in newly written code.
 .PP
-Each application may have several connections to the CPG API.  Each  application
+Each application may have several connections to the CPG API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.  The
diff --git a/man/cpg_iteration_finalize.3.in b/man/cpg_iteration_finalize.3.in
index 747d227..49ca64b 100644
--- a/man/cpg_iteration_finalize.3.in
+++ b/man/cpg_iteration_finalize.3.in
@@ -49,7 +49,7 @@ cpg_iteration_finalize (cpg_iteration_handle_t \fIhandle\fB);\fR
 .P
 The
 .B cpg_iteration_finalize
-function is used to free up memory asociated with iteration obtained by calling of
+function is used to free up memory associated with iteration obtained by calling of
 .B cpg_iteration_initialize(3)
 function.
 The
diff --git a/man/cpg_mcast_joined.3.in b/man/cpg_mcast_joined.3.in
index dc02350..3ba44df 100644
--- a/man/cpg_mcast_joined.3.in
+++ b/man/cpg_mcast_joined.3.in
@@ -31,7 +31,7 @@
 .\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 .\" * THE POSSIBILITY OF SUCH DAMAGE.
 .\" */
-.TH CPG_MCAST_JOINED 3 3004-08-31 "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"
+.TH CPG_MCAST_JOINED 3 2004-08-31 "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"
 .SH NAME
 cpg_mcast_joined \- Multicasts to all groups joined to a handle
 .SH SYNOPSIS
diff --git a/man/cpg_model_initialize.3.in b/man/cpg_model_initialize.3.in
index 259f77d..76429a5 100644
--- a/man/cpg_model_initialize.3.in
+++ b/man/cpg_model_initialize.3.in
@@ -45,7 +45,7 @@ The
 .B cpg_model_initialize
 function is used to initialize a connection to the closed process groups API.
 .PP
-Each application may have several connections to the CPG API.  Each  application
+Each application may have several connections to the CPG API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.  The
diff --git a/man/cpg_zcb_alloc.3.in b/man/cpg_zcb_alloc.3.in
index e46da9c..347be2c 100644
--- a/man/cpg_zcb_alloc.3.in
+++ b/man/cpg_zcb_alloc.3.in
@@ -58,7 +58,7 @@ requests a buffer of size be allocated.
 .PP
 The
 .I buffer
-argument is set to the buffer address that is allocated by this operatoin.
+argument is set to the buffer address that is allocated by this operation.
 
 .SH RETURN VALUE
 This call returns the CS_OK value if successful, otherwise an error is returned.
diff --git a/man/cpg_zcb_mcast_joined.3.in b/man/cpg_zcb_mcast_joined.3.in
index 158131c..afb4454 100644
--- a/man/cpg_zcb_mcast_joined.3.in
+++ b/man/cpg_zcb_mcast_joined.3.in
@@ -31,7 +31,7 @@
 .\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 .\" * THE POSSIBILITY OF SUCH DAMAGE.
 .\" */
-.TH CPG_ZCB_MCAST_JOINED 3 3004-08-31 "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"
+.TH CPG_ZCB_MCAST_JOINED 3 2004-08-31 "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"
 .SH NAME
 cpg_mcast_joined \- Multicasts a zero copy buffer to all groups joined to a handle
 .SH SYNOPSIS
diff --git a/man/ipc_common.sh.errors b/man/ipc_common.sh.errors
index 0c73358..55d4510 100644
--- a/man/ipc_common.sh.errors
+++ b/man/ipc_common.sh.errors
@@ -13,13 +13,13 @@ Permission denied
 The connection failed
 
 .B CS_ERR_INTERRUPT
-System call inturrupted by a signal
+System call interrupted by a signal
 
 .B CS_ERR_NOT_SUPPORTED
-The requested protocol/functuality not supported
+The requested protocol/functionality not supported
 
 .B CS_ERR_MESSAGE_ERROR
 Incorrect auth message received
 
 .B CS_ERR_NO_MEMORY
-Not enough memory to completed the requested task
+Not enough memory to complete the requested task
diff --git a/man/quorum_context_set.3.in b/man/quorum_context_set.3.in
index 6a57e92..57fe35c 100644
--- a/man/quorum_context_set.3.in
+++ b/man/quorum_context_set.3.in
@@ -42,7 +42,7 @@ quorum_context_set \- Sets the context variable for a QUORUM instance
 The
 .B quorum_context_set
 function is used to set the context variable for a quorum instance. It has no
-meaning insire libquorum itself and will not be touched by the library. It can
+meaning inside libquorum itself and will not be touched by the library. It can
 be retrieved using
 .B quorum_context_get(3)
 .SH RETURN VALUE
diff --git a/man/quorum_dispatch.3.in b/man/quorum_dispatch.3.in
index 34d9908..319e460 100644
--- a/man/quorum_dispatch.3.in
+++ b/man/quorum_dispatch.3.in
@@ -43,7 +43,7 @@ The
 .B quorum_dispatch
 function is used to dispatch configuration changes.
 .PP
-Each application may have several connections to the quorum API.  Each  application
+Each application may have several connections to the quorum API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.
diff --git a/man/quorum_getquorate.3.in b/man/quorum_getquorate.3.in
index ec87486..b1c0c74 100644
--- a/man/quorum_getquorate.3.in
+++ b/man/quorum_getquorate.3.in
@@ -41,7 +41,7 @@ quorum_getquorate \- Gets the quorate status of the node.
 .SH DESCRIPTION
 The
 .B quorum_getquorate
-function is used to retrieve the quorate status of the node. quorate is 0 if the node
+function is used to retrieve the quorate status of the node. Quorate is 0 if the node
 is not part of a quorate partition or 1 otherwise.
 .SH RETURN VALUE
 This call returns the CS_OK value if successful, otherwise an error is returned.
diff --git a/man/sam_data_store.3.in b/man/sam_data_store.3.in
index 6e90651..88ab7aa 100644
--- a/man/sam_data_store.3.in
+++ b/man/sam_data_store.3.in
@@ -73,7 +73,7 @@ CS_ERR_BAD_HANDLE
 component was not initialized by calling \fBsam_initialize(3)\fR or it was finalized.
 .TP
 CS_ERR_NO_MEMORY
-internal  malloc/realloc failed because data are too large
+internal malloc/realloc failed because data are too large
 .TP
 CS_ERR_LIBRARY
 some internal error appeared (mostly because communication with parent process failed)
diff --git a/man/sam_hc_callback_register.3.in b/man/sam_hc_callback_register.3.in
index 91be22d..c9f5619 100644
--- a/man/sam_hc_callback_register.3.in
+++ b/man/sam_hc_callback_register.3.in
@@ -60,7 +60,7 @@ defined as:
 .fi
 
 .P
-This function will be regulargly called and must return 0 if the process is
+This function will be regularly called and must return 0 if the process is
 functioning normally, or -1 if the process is executing abnormally.  When -1 is
 returned, the SAM server execute the registered recovery policy.
 
@@ -79,7 +79,7 @@ CS_ERR_BAD_HANDLE
 SAM was not initialized and registered or health checking is in running state
 .TP
 CS_ERR_LIBRARY
-internal library call failed. This can occur during fork() or pipe () system
+internal library call failed. This can occur during fork() or pipe() system
 calls and the errno variable can be read to retrieve more information.
 
 .SH "SEE ALSO"
diff --git a/man/sam_hc_send.3.in b/man/sam_hc_send.3.in
index c8e9131..dfcf93c 100644
--- a/man/sam_hc_send.3.in
+++ b/man/sam_hc_send.3.in
@@ -47,8 +47,8 @@ sam_hc_send \- Send health check confirmation
 .SH DESCRIPTION
 .P
 The \fBsam_hc_send\fR function is used to send healthcheck confirmation from
-the applicatoin.  This function should be called reguarly when configured for
-application driven healthchecking, otherwise recovery actoin will be taken.
+the application.  This function should be called regularly when configured for
+application driven healthchecking, otherwise recovery action will be taken.
 
 When using event driven healthchecking, this function should not be used.
 
diff --git a/man/sam_overview.8 b/man/sam_overview.8
index 490dbe4..a0b23b4 100644
--- a/man/sam_overview.8
+++ b/man/sam_overview.8
@@ -153,7 +153,7 @@ keys:
 Object is automatically deleted if process exits with stopped health checking.
 
 .P
-Confdb integration with corosync wathdog can be used in implicit and explicit way.
+Confdb integration with corosync watchdog can be used in implicit and explicit way.
 
 .P
 Implicit way is achieved by setting recovery policy to QUIT and let process exit with started health checking.
diff --git a/man/votequorum.5 b/man/votequorum.5
index ee4814a..fd9590e 100644
--- a/man/votequorum.5
+++ b/man/votequorum.5
@@ -223,7 +223,7 @@ Example chain of events:
 .PP
 NOTES: In order for the cluster to downgrade automatically from 2 nodes
 to a 1 node cluster, the auto_tie_breaker feature must also be enabled (see below).
-If auto_tie_breaker is not enabled, and one more failure occours, the
+If auto_tie_breaker is not enabled, and one more failure occurs, the
 remaining node will not be quorate. LMS does not work with asymmetric voting
 schemes, each node must vote 1. LMS is also incompatible with quorum devices,
 if last_man_standing is specified in corosync.conf then the quorum device 
diff --git a/man/votequorum_context_set.3.in b/man/votequorum_context_set.3.in
index df3af2b..56c6cf0 100644
--- a/man/votequorum_context_set.3.in
+++ b/man/votequorum_context_set.3.in
@@ -42,7 +42,7 @@ votequorum_context_set \- Sets the context variable for a VOTEQUORUM instance
 The
 .B votequorum_context_set
 function is used to set the context variable for a votequorum instance. It has no
-meaning insire libvotequorum itself and will not be touched by the library. It can
+meaning inside libvotequorum itself and will not be touched by the library. It can
 be retrieved using
 .B votequorum_context_get(3)
 .SH RETURN VALUE
diff --git a/man/votequorum_dispatch.3.in b/man/votequorum_dispatch.3.in
index 38677b4..132c8d1 100644
--- a/man/votequorum_dispatch.3.in
+++ b/man/votequorum_dispatch.3.in
@@ -43,7 +43,7 @@ The
 .B votequorum_dispatch
 function is used to dispatch configuration changes.
 .PP
-Each application may have several connections to the votequorum API.  Each  application
+Each application may have several connections to the votequorum API.  Each application
 uses the
 .I handle
 argument to uniquely identify the connection.
diff --git a/man/votequorum_finalize.3.in b/man/votequorum_finalize.3.in
index 0164f59..50e431f 100644
--- a/man/votequorum_finalize.3.in
+++ b/man/votequorum_finalize.3.in
@@ -41,7 +41,7 @@ votequorum_finalize \- Terminate a connection to the votequorum service
 .SH DESCRIPTION
 The
 .B votequorum_finalize
-function is used to close a connection to the configuration dabatase API.
+function is used to close a connection to the configuration database API.
 Once the connection is finalized, the handle may not be used again by applications.
 No more callbacks will be dispatched from the
 .B votequorum_dispatch
diff --git a/man/votequorum_initialize.3.in b/man/votequorum_initialize.3.in
index 811b3e3..88e1eb1 100644
--- a/man/votequorum_initialize.3.in
+++ b/man/votequorum_initialize.3.in
@@ -89,7 +89,7 @@ nodes that are included in the sync state - ie only active nodes. No quorum info
 because it is not available at that time.
 The 'quorum' callback is sent after the cluster state transition has completed and does contain quorum information. 
 In addition, the nodelist contains a list of all nodes known to votequorum (whether up or down) and their state as well 
-as information about the quorum device attached (if any). quorum callbacks will not be sent for qdevice up and down
+as information about the quorum device attached (if any). Quorum callbacks will not be sent for qdevice up and down
 events unless they affect quorum.
 
 .PP
-- 
1.7.1

